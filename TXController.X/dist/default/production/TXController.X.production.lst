

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Feb 27 12:07:31 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0095                     	;# 
    59  0096                     	;# 
    60  0097                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  010C                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0117                     	;# 
    75  0118                     	;# 
    76  0119                     	;# 
    77  011A                     	;# 
    78  011B                     	;# 
    79  011D                     	;# 
    80  011D                     	;# 
    81  018C                     	;# 
    82  0191                     	;# 
    83  0191                     	;# 
    84  0192                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0194                     	;# 
    89  0195                     	;# 
    90  0196                     	;# 
    91  0199                     	;# 
    92  019A                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019C                     	;# 
    98  019C                     	;# 
    99  019D                     	;# 
   100  019E                     	;# 
   101  019F                     	;# 
   102  020C                     	;# 
   103  0211                     	;# 
   104  0211                     	;# 
   105  0212                     	;# 
   106  0212                     	;# 
   107  0213                     	;# 
   108  0213                     	;# 
   109  0214                     	;# 
   110  0214                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0215                     	;# 
   114  0216                     	;# 
   115  0216                     	;# 
   116  0217                     	;# 
   117  0217                     	;# 
   118  0291                     	;# 
   119  0291                     	;# 
   120  0292                     	;# 
   121  0293                     	;# 
   122  0294                     	;# 
   123  0295                     	;# 
   124  0295                     	;# 
   125  0296                     	;# 
   126  0391                     	;# 
   127  0392                     	;# 
   128  0393                     	;# 
   129  039A                     	;# 
   130  039C                     	;# 
   131  039D                     	;# 
   132  039E                     	;# 
   133  039F                     	;# 
   134  0FE4                     	;# 
   135  0FE5                     	;# 
   136  0FE6                     	;# 
   137  0FE7                     	;# 
   138  0FE8                     	;# 
   139  0FE9                     	;# 
   140  0FEA                     	;# 
   141  0FEB                     	;# 
   142  0FED                     	;# 
   143  0FEE                     	;# 
   144  0FEF                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  008C                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  010C                     	;# 
   186  0111                     	;# 
   187  0112                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0117                     	;# 
   191  0118                     	;# 
   192  0119                     	;# 
   193  011A                     	;# 
   194  011B                     	;# 
   195  011D                     	;# 
   196  011D                     	;# 
   197  018C                     	;# 
   198  0191                     	;# 
   199  0191                     	;# 
   200  0192                     	;# 
   201  0193                     	;# 
   202  0193                     	;# 
   203  0193                     	;# 
   204  0194                     	;# 
   205  0195                     	;# 
   206  0196                     	;# 
   207  0199                     	;# 
   208  019A                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019C                     	;# 
   214  019C                     	;# 
   215  019D                     	;# 
   216  019E                     	;# 
   217  019F                     	;# 
   218  020C                     	;# 
   219  0211                     	;# 
   220  0211                     	;# 
   221  0212                     	;# 
   222  0212                     	;# 
   223  0213                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0214                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  0291                     	;# 
   235  0291                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0294                     	;# 
   239  0295                     	;# 
   240  0295                     	;# 
   241  0296                     	;# 
   242  0391                     	;# 
   243  0392                     	;# 
   244  0393                     	;# 
   245  039A                     	;# 
   246  039C                     	;# 
   247  039D                     	;# 
   248  039E                     	;# 
   249  039F                     	;# 
   250  0FE4                     	;# 
   251  0FE5                     	;# 
   252  0FE6                     	;# 
   253  0FE7                     	;# 
   254  0FE8                     	;# 
   255  0FE9                     	;# 
   256  0FEA                     	;# 
   257  0FEB                     	;# 
   258  0FED                     	;# 
   259  0FEE                     	;# 
   260  0FEF                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0008                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001E                     	;# 
   286  001F                     	;# 
   287  008C                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0097                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  010C                     	;# 
   302  0111                     	;# 
   303  0112                     	;# 
   304  0115                     	;# 
   305  0116                     	;# 
   306  0117                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011A                     	;# 
   310  011B                     	;# 
   311  011D                     	;# 
   312  011D                     	;# 
   313  018C                     	;# 
   314  0191                     	;# 
   315  0191                     	;# 
   316  0192                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0194                     	;# 
   321  0195                     	;# 
   322  0196                     	;# 
   323  0199                     	;# 
   324  019A                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019C                     	;# 
   330  019C                     	;# 
   331  019D                     	;# 
   332  019E                     	;# 
   333  019F                     	;# 
   334  020C                     	;# 
   335  0211                     	;# 
   336  0211                     	;# 
   337  0212                     	;# 
   338  0212                     	;# 
   339  0213                     	;# 
   340  0213                     	;# 
   341  0214                     	;# 
   342  0214                     	;# 
   343  0215                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0216                     	;# 
   347  0216                     	;# 
   348  0217                     	;# 
   349  0217                     	;# 
   350  0291                     	;# 
   351  0291                     	;# 
   352  0292                     	;# 
   353  0293                     	;# 
   354  0294                     	;# 
   355  0295                     	;# 
   356  0295                     	;# 
   357  0296                     	;# 
   358  0391                     	;# 
   359  0392                     	;# 
   360  0393                     	;# 
   361  039A                     	;# 
   362  039C                     	;# 
   363  039D                     	;# 
   364  039E                     	;# 
   365  039F                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  008C                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0095                     	;# 
   407  0096                     	;# 
   408  0097                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009A                     	;# 
   412  009B                     	;# 
   413  009B                     	;# 
   414  009C                     	;# 
   415  009D                     	;# 
   416  009E                     	;# 
   417  010C                     	;# 
   418  0111                     	;# 
   419  0112                     	;# 
   420  0115                     	;# 
   421  0116                     	;# 
   422  0117                     	;# 
   423  0118                     	;# 
   424  0119                     	;# 
   425  011A                     	;# 
   426  011B                     	;# 
   427  011D                     	;# 
   428  011D                     	;# 
   429  018C                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019C                     	;# 
   447  019D                     	;# 
   448  019E                     	;# 
   449  019F                     	;# 
   450  020C                     	;# 
   451  0211                     	;# 
   452  0211                     	;# 
   453  0212                     	;# 
   454  0212                     	;# 
   455  0213                     	;# 
   456  0213                     	;# 
   457  0214                     	;# 
   458  0214                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  0291                     	;# 
   467  0291                     	;# 
   468  0292                     	;# 
   469  0293                     	;# 
   470  0294                     	;# 
   471  0295                     	;# 
   472  0295                     	;# 
   473  0296                     	;# 
   474  0391                     	;# 
   475  0392                     	;# 
   476  0393                     	;# 
   477  039A                     	;# 
   478  039C                     	;# 
   479  039D                     	;# 
   480  039E                     	;# 
   481  039F                     	;# 
   482  0FE4                     	;# 
   483  0FE5                     	;# 
   484  0FE6                     	;# 
   485  0FE7                     	;# 
   486  0FE8                     	;# 
   487  0FE9                     	;# 
   488  0FEA                     	;# 
   489  0FEB                     	;# 
   490  0FED                     	;# 
   491  0FEE                     	;# 
   492  0FEF                     	;# 
   493                           
   494                           	psect	idataBANK0
   495  0105                     __pidataBANK0:	
   496                           
   497                           ;initializer for _flashRate
   498  0105  34E8               	retlw	232
   499  0106  3403               	retlw	3
   500                           
   501                           	psect	nvCOMMON
   502  0079                     __pnvCOMMON:	
   503  0079                     _LEDTimer:	
   504  0079                     	ds	1
   505  0016                     _TMR1	set	22
   506  000B                     _INTCONbits	set	11
   507  0011                     _PIR1bits	set	17
   508  000C                     _PORTAbits	set	12
   509  0018                     _T1CONbits	set	24
   510  0019                     _T1GCONbits	set	25
   511  0099                     _OSCCONbits	set	153
   512  0091                     _PIE1bits	set	145
   513  008C                     _TRISAbits	set	140
   514  0097                     _WDTCONbits	set	151
   515                           
   516                           ; #config settings
   517  0000                     
   518                           	psect	cinit
   519  0010                     start_initialization:	
   520  0010                     __initialization:	
   521                           
   522                           ; Initialize objects allocated to BANK0
   523  0010  2105               	fcall	__pidataBANK0	;fetch initializer
   524  0011  00E8               	movwf	__pdataBANK0& (0+127)
   525  0012  2106               	fcall	__pidataBANK0+1	;fetch initializer
   526  0013  00E9               	movwf	(__pdataBANK0+1)& (0+127)
   527                           
   528                           ; Clear objects allocated to COMMON
   529  0014  01F6               	clrf	__pbssCOMMON& (0+127)
   530  0015  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   531  0016  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   532                           
   533                           ; Clear objects allocated to BANK0
   534  0017  3020               	movlw	low __pbssBANK0
   535  0018  0084               	movwf	4
   536  0019  3000               	movlw	high __pbssBANK0
   537  001A  0085               	movwf	5
   538  001B  3042               	movlw	66
   539  001C  20F8               	fcall	clear_ram0
   540  001D                     end_of_initialization:	
   541                           ;End of C runtime variable initialization code
   542                           
   543  001D                     __end_of__initialization:	
   544  001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   545  001E  0020               	movlb	0
   546  001F  28FE               	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssCOMMON
   549  0076                     __pbssCOMMON:	
   550  0076                     _flasherToggle:	
   551  0076                     	ds	1
   552  0077                     _flashing:	
   553  0077                     	ds	1
   554  0078                     _numTimers:	
   555  0078                     	ds	1
   556                           
   557                           	psect	bssBANK0
   558  0020                     __pbssBANK0:	
   559  0020                     _timers:	
   560  0020                     	ds	64
   561  0060                     _delayTimer:	
   562  0060                     	ds	2
   563                           
   564                           	psect	dataBANK0
   565  0068                     __pdataBANK0:	
   566  0068                     _flashRate:	
   567  0068                     	ds	2
   568                           
   569                           	psect	clrtext
   570  00F8                     clear_ram0:	
   571                           ;	Called with FSR0 containing the base address, and
   572                           ;	WREG with the size to clear
   573                           
   574  00F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   575  00F9                     clrloop0:	
   576  00F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   577  00FA  3101               	addfsr 0,1
   578  00FB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   579  00FC  28F9               	goto	clrloop0	;have we reached the end yet?
   580  00FD  3400               	retlw	0	;all done for this memory range, return
   581                           
   582                           	psect	cstackCOMMON
   583  0070                     __pcstackCOMMON:	
   584  0070                     ?_timerInterrupt:	
   585  0070                     ??_timerInterrupt:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_timerGet:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_initialise:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_hardwareInit:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_timerInit:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_timerLock:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_initInterrupt:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_ISRCode:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_LEDInit:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_LEDService:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_kickWatchDog:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_main:	
   619                           ; 1 bytes @ 0x0
   620                           
   621                           
   622                           ; 1 bytes @ 0x0
   623  0070                     	ds	2
   624  0072                     timerInterrupt@i:	
   625                           
   626                           ; 1 bytes @ 0x2
   627  0072                     	ds	1
   628  0073                     ??_ISRCode:	
   629                           
   630                           ; 1 bytes @ 0x3
   631  0073                     	ds	1
   632  0074                     ?_timerSet:	
   633  0074                     ??_timerRead:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0074                     ??_hardwareInit:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0074                     ??_timerInit:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     ??_timerLock:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0074                     ??_initInterrupt:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0074                     ?_flashLED:	
   649                           ; 1 bytes @ 0x4
   650                           
   651  0074                     ??_kickWatchDog:	
   652                           ; 1 bytes @ 0x4
   653                           
   654  0074                     timerLock@index:	
   655                           ; 1 bytes @ 0x4
   656                           
   657  0074                     flashLED@period:	
   658                           ; 1 bytes @ 0x4
   659                           
   660  0074                     timerSet@duration:	
   661                           ; 2 bytes @ 0x4
   662                           
   663                           
   664                           ; 2 bytes @ 0x4
   665  0074                     	ds	1
   666  0075                     ??_timerGet:	
   667                           
   668                           ; 1 bytes @ 0x5
   669  0075                     	ds	1
   670  0076                     ??_timerSet:	
   671  0076                     ??_initialise:	
   672                           ; 1 bytes @ 0x6
   673                           
   674  0076                     ??_flashLED:	
   675                           ; 1 bytes @ 0x6
   676                           
   677  0076                     ??_LEDService:	
   678                           ; 1 bytes @ 0x6
   679                           
   680  0076                     ??_main:	
   681                           ; 1 bytes @ 0x6
   682                           
   683                           
   684                           	psect	cstackBANK0
   685  0062                     __pcstackBANK0:	
   686                           ; 1 bytes @ 0x6
   687                           
   688  0062                     ?_timerRead:	
   689  0062                     timerGet@result:	
   690                           ; 2 bytes @ 0x0
   691                           
   692  0062                     timerSet@index:	
   693                           ; 1 bytes @ 0x0
   694                           
   695                           
   696                           ; 1 bytes @ 0x0
   697  0062                     	ds	1
   698  0063                     ??_LEDInit:	
   699                           
   700                           ; 1 bytes @ 0x1
   701  0063                     	ds	2
   702  0065                     timerRead@result:	
   703                           
   704                           ; 2 bytes @ 0x3
   705  0065                     	ds	2
   706  0067                     timerRead@index:	
   707                           
   708                           ; 1 bytes @ 0x5
   709  0067                     	ds	1
   710                           
   711                           	psect	maintext
   712  00FE                     __pmaintext:	
   713 ;;
   714 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   715 ;;
   716 ;; *************** function _main *****************
   717 ;; Defined at:
   718 ;;		line 28 in file "../source/main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : B1F/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1
   732 ;;      Params:         0       0       0
   733 ;;      Locals:         0       0       0
   734 ;;      Temps:          0       0       0
   735 ;;      Totals:         0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels required when called:    6
   738 ;; This function calls:
   739 ;;		_LEDService
   740 ;;		_initialise
   741 ;;		_kickWatchDog
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _main
   749  00FE                     _main:	
   750                           
   751                           ;main.c: 30: initialise();
   752                           
   753                           ;incstack = 0
   754                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   755  00FE  20EE               	fcall	_initialise
   756  00FF                     l77:	
   757                           ;main.c: 31: while( 1 )
   758                           
   759                           
   760                           ;main.c: 32: {
   761                           ;main.c: 34: LEDService();
   762  00FF  205F               	fcall	_LEDService
   763                           
   764                           ;main.c: 35: kickWatchDog();
   765  0100  2107               	fcall	_kickWatchDog
   766  0101  28FF               	goto	l77
   767  0102                     __end_of_main:	
   768                           
   769                           	psect	text1
   770  0107                     __ptext1:	
   771 ;; *************** function _kickWatchDog *****************
   772 ;; Defined at:
   773 ;;		line 17 in file "../source/main.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		None
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1
   787 ;;      Params:         0       0       0
   788 ;;      Locals:         0       0       0
   789 ;;      Temps:          0       0       0
   790 ;;      Totals:         0       0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    2
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _kickWatchDog
   803  0107                     _kickWatchDog:	
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _kickWatchDog: []
   807  0107  0064               	clrwdt	;# 
   808  0108  0008               	return
   809  0109                     __end_of_kickWatchDog:	
   810                           
   811                           	psect	text2
   812  00EE                     __ptext2:	
   813 ;; *************** function _initialise *****************
   814 ;; Defined at:
   815 ;;		line 45 in file "../source/main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1
   829 ;;      Params:         0       0       0
   830 ;;      Locals:         0       0       0
   831 ;;      Temps:          0       0       0
   832 ;;      Totals:         0       0       0
   833 ;;Total ram usage:        0 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    5
   836 ;; This function calls:
   837 ;;		_LEDInit
   838 ;;		_flashLED
   839 ;;		_hardwareInit
   840 ;;		_initInterrupt
   841 ;;		_timerInit
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           
   848                           ;psect for function _initialise
   849  00EE                     _initialise:	
   850                           
   851                           ;main.c: 47: hardwareInit();
   852                           
   853                           ;incstack = 0
   854                           ; Regs used in _initialise: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   855  00EE  20D8               	fcall	_hardwareInit
   856                           
   857                           ;main.c: 48: timerInit();
   858  00EF  2090               	fcall	_timerInit
   859                           
   860                           ;main.c: 50: LEDInit();
   861  00F0  20CC               	fcall	_LEDInit
   862                           
   863                           ;main.c: 51: initInterrupt();
   864  00F1  2102               	fcall	_initInterrupt
   865                           
   866                           ;main.c: 52: flashLED(1000);
   867  00F2  30E8               	movlw	232
   868  00F3  00F4               	movwf	flashLED@period
   869  00F4  3003               	movlw	3
   870  00F5  00F5               	movwf	flashLED@period+1
   871  00F6  20E3               	fcall	_flashLED
   872  00F7  0008               	return
   873  00F8                     __end_of_initialise:	
   874                           
   875                           	psect	text3
   876  0090                     __ptext3:	
   877 ;; *************** function _timerInit *****************
   878 ;; Defined at:
   879 ;;		line 23 in file "../source/timer.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		status,2
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1
   893 ;;      Params:         0       0       0
   894 ;;      Locals:         0       0       0
   895 ;;      Temps:          0       0       0
   896 ;;      Totals:         0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    2
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_initialise
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _timerInit
   909  0090                     _timerInit:	
   910                           
   911                           ;timer.c: 25: numTimers = 0;
   912                           
   913                           ;incstack = 0
   914                           ; Regs used in _timerInit: [status,2]
   915  0090  01F8               	clrf	_numTimers
   916                           
   917                           ;timer.c: 27: T1GCONbits.TMR1GE = 0;
   918  0091  0020               	movlb	0	; select bank0
   919  0092  1399               	bcf	25,7	;volatile
   920                           
   921                           ;timer.c: 29: T1CONbits.TMR1CS1 = 0;
   922  0093  1398               	bcf	24,7	;volatile
   923                           
   924                           ;timer.c: 30: T1CONbits.TMR1CS0 = 1;
   925  0094  1718               	bsf	24,6	;volatile
   926                           
   927                           ;timer.c: 31: T1CONbits.T1CKPS1 = 0;
   928  0095  1298               	bcf	24,5	;volatile
   929                           
   930                           ;timer.c: 32: T1CONbits.T1CKPS0 = 0;
   931  0096  1218               	bcf	24,4	;volatile
   932                           
   933                           ;timer.c: 34: TMR1 = 32000;
   934  0097  307D               	movlw	125
   935  0098  0097               	movwf	23	;volatile
   936  0099  3000               	movlw	0
   937  009A  0096               	movwf	22	;volatile
   938                           
   939                           ;timer.c: 36: PIE1bits.TMR1IE = 1;
   940  009B  0021               	movlb	1	; select bank1
   941  009C  1411               	bsf	17,0	;volatile
   942                           
   943                           ;timer.c: 38: INTCONbits.PEIE = 1;
   944  009D  170B               	bsf	11,6	;volatile
   945                           
   946                           ;timer.c: 39: T1CONbits.TMR1ON = 1;
   947  009E  0020               	movlb	0	; select bank0
   948  009F  1418               	bsf	24,0	;volatile
   949  00A0  0008               	return
   950  00A1                     __end_of_timerInit:	
   951                           
   952                           	psect	text4
   953  0102                     __ptext4:	
   954 ;; *************** function _initInterrupt *****************
   955 ;; Defined at:
   956 ;;		line 15 in file "../source/interrupt.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		None
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1
   970 ;;      Params:         0       0       0
   971 ;;      Locals:         0       0       0
   972 ;;      Temps:          0       0       0
   973 ;;      Totals:         0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    2
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_initialise
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _initInterrupt
   986  0102                     _initInterrupt:	
   987                           
   988                           ;interrupt.c: 17: INTCONbits.PEIE = 1;
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _initInterrupt: []
   992  0102  170B               	bsf	11,6	;volatile
   993                           
   994                           ;interrupt.c: 18: INTCONbits.GIE = 1;
   995  0103  178B               	bsf	11,7	;volatile
   996  0104  0008               	return
   997  0105                     __end_of_initInterrupt:	
   998                           
   999                           	psect	text5
  1000  00D8                     __ptext5:	
  1001 ;; *************** function _hardwareInit *****************
  1002 ;; Defined at:
  1003 ;;		line 61 in file "../source/main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1
  1017 ;;      Params:         0       0       0
  1018 ;;      Locals:         0       0       0
  1019 ;;      Temps:          0       0       0
  1020 ;;      Totals:         0       0       0
  1021 ;;Total ram usage:        0 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    2
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_initialise
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _hardwareInit
  1033  00D8                     _hardwareInit:	
  1034                           
  1035                           ;main.c: 63: OSCCONbits.SCS = 0;
  1036                           
  1037                           ;incstack = 0
  1038                           ; Regs used in _hardwareInit: [wreg+status,2+status,0]
  1039  00D8  30FC               	movlw	-4
  1040  00D9  0021               	movlb	1	; select bank1
  1041  00DA  0599               	andwf	25,f	;volatile
  1042                           
  1043                           ;main.c: 64: OSCCONbits.IRCF = 0xE;
  1044  00DB  0819               	movf	25,w	;volatile
  1045  00DC  3987               	andlw	-121
  1046  00DD  3870               	iorlw	112
  1047  00DE  0099               	movwf	25	;volatile
  1048                           
  1049                           ;main.c: 65: OSCCONbits.SPLLEN = 1;
  1050  00DF  1799               	bsf	25,7	;volatile
  1051                           
  1052                           ;main.c: 67: TRISAbits.TRISA5 = 0;
  1053  00E0  128C               	bcf	12,5	;volatile
  1054                           
  1055                           ;main.c: 105: WDTCONbits.SWDTEN = 1;
  1056  00E1  1417               	bsf	23,0	;volatile
  1057  00E2  0008               	return
  1058  00E3                     __end_of_hardwareInit:	
  1059                           
  1060                           	psect	text6
  1061  00E3                     __ptext6:	
  1062 ;; *************** function _flashLED *****************
  1063 ;; Defined at:
  1064 ;;		line 31 in file "../source/LED.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  period          2    4[COMMON] int 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1
  1078 ;;      Params:         2       0       0
  1079 ;;      Locals:         0       0       0
  1080 ;;      Temps:          0       0       0
  1081 ;;      Totals:         2       0       0
  1082 ;;Total ram usage:        2 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    2
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_initialise
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           
  1093                           ;psect for function _flashLED
  1094  00E3                     _flashLED:	
  1095                           
  1096                           ;LED.c: 33: flashing = !0;
  1097                           
  1098                           ;incstack = 0
  1099                           ; Regs used in _flashLED: [wreg]
  1100  00E3  01F7               	clrf	_flashing
  1101  00E4  0AF7               	incf	_flashing,f
  1102                           
  1103                           ;LED.c: 34: PORTAbits.RA5 = 0;
  1104  00E5  0020               	movlb	0	; select bank0
  1105  00E6  128C               	bcf	12,5	;volatile
  1106                           
  1107                           ;LED.c: 35: flashRate = period;
  1108  00E7  0875               	movf	flashLED@period+1,w
  1109  00E8  00E9               	movwf	_flashRate+1
  1110  00E9  0874               	movf	flashLED@period,w
  1111  00EA  00E8               	movwf	_flashRate
  1112                           
  1113                           ;LED.c: 36: flasherToggle = !0;
  1114  00EB  01F6               	clrf	_flasherToggle
  1115  00EC  0AF6               	incf	_flasherToggle,f
  1116  00ED  0008               	return
  1117  00EE                     __end_of_flashLED:	
  1118                           
  1119                           	psect	text7
  1120  00CC                     __ptext7:	
  1121 ;; *************** function _LEDInit *****************
  1122 ;; Defined at:
  1123 ;;		line 40 in file "../source/LED.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1
  1137 ;;      Params:         0       0       0
  1138 ;;      Locals:         0       0       0
  1139 ;;      Temps:          0       1       0
  1140 ;;      Totals:         0       1       0
  1141 ;;Total ram usage:        1 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    4
  1144 ;; This function calls:
  1145 ;;		_timerGet
  1146 ;;		_timerSet
  1147 ;; This function is called by:
  1148 ;;		_initialise
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _LEDInit
  1154  00CC                     _LEDInit:	
  1155                           
  1156                           ;LED.c: 42: LEDTimer = timerGet ();
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _LEDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1160  00CC  20B0               	fcall	_timerGet
  1161  00CD  0020               	movlb	0	; select bank0
  1162  00CE  00E3               	movwf	??_LEDInit
  1163  00CF  0863               	movf	??_LEDInit,w
  1164  00D0  00F9               	movwf	_LEDTimer
  1165                           
  1166                           ;LED.c: 44: timerSet( LEDTimer, flashRate );
  1167  00D1  0869               	movf	_flashRate+1,w
  1168  00D2  00F5               	movwf	timerSet@duration+1
  1169  00D3  0868               	movf	_flashRate,w
  1170  00D4  00F4               	movwf	timerSet@duration
  1171  00D5  0879               	movf	_LEDTimer,w
  1172  00D6  20A1               	fcall	_timerSet
  1173  00D7  0008               	return
  1174  00D8                     __end_of_LEDInit:	
  1175                           
  1176                           	psect	text8
  1177  00B0                     __ptext8:	
  1178 ;; *************** function _timerGet *****************
  1179 ;; Defined at:
  1180 ;;		line 86 in file "../source/timer.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  result          1    0[BANK0 ] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      unsigned char 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1
  1194 ;;      Params:         0       0       0
  1195 ;;      Locals:         0       1       0
  1196 ;;      Temps:          1       0       0
  1197 ;;      Totals:         1       1       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    3
  1201 ;; This function calls:
  1202 ;;		_timerLock
  1203 ;; This function is called by:
  1204 ;;		_LEDInit
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           
  1209                           ;psect for function _timerGet
  1210  00B0                     _timerGet:	
  1211                           
  1212                           ;timer.c: 88: TTimerIndex result;
  1213                           ;timer.c: 90: result = numTimers;
  1214                           
  1215                           ;incstack = 0
  1216                           ; Regs used in _timerGet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1217  00B0  0878               	movf	_numTimers,w
  1218  00B1  00F5               	movwf	??_timerGet
  1219  00B2  0875               	movf	??_timerGet,w
  1220  00B3  0020               	movlb	0	; select bank0
  1221  00B4  00E2               	movwf	timerGet@result
  1222                           
  1223                           ;timer.c: 91: numTimers++;
  1224  00B5  3001               	movlw	1
  1225  00B6  00F5               	movwf	??_timerGet
  1226  00B7  0875               	movf	??_timerGet,w
  1227  00B8  07F8               	addwf	_numTimers,f
  1228                           
  1229                           ;timer.c: 92: timerLock( result );
  1230  00B9  0862               	movf	timerGet@result,w
  1231  00BA  20BE               	fcall	_timerLock
  1232                           
  1233                           ;timer.c: 93: return ( result );
  1234  00BB  0020               	movlb	0	; select bank0
  1235  00BC  0862               	movf	timerGet@result,w
  1236  00BD  0008               	return
  1237  00BE                     __end_of_timerGet:	
  1238                           
  1239                           	psect	text9
  1240  00BE                     __ptext9:	
  1241 ;; *************** function _timerLock *****************
  1242 ;; Defined at:
  1243 ;;		line 139 in file "../source/timer.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  index           1    wreg     unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  index           1    4[COMMON] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1
  1257 ;;      Params:         0       0       0
  1258 ;;      Locals:         1       0       0
  1259 ;;      Temps:          0       0       0
  1260 ;;      Totals:         1       0       0
  1261 ;;Total ram usage:        1 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    2
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_timerGet
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _timerLock
  1273  00BE                     _timerLock:	
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in _timerLock: [wreg+fsr1l+fsr1h+status,2+status,0]
  1277                           ;timerLock@index stored from wreg
  1278  00BE  00F4               	movwf	timerLock@index
  1279                           
  1280                           ;timer.c: 141: if ( index < numTimers )
  1281  00BF  0878               	movf	_numTimers,w
  1282  00C0  0274               	subwf	timerLock@index,w
  1283  00C1  1803               	skipnc
  1284  00C2  0008               	return
  1285                           
  1286                           ;timer.c: 142: {
  1287                           ;timer.c: 143: timers[index] = 0xFFFF;
  1288  00C3  3574               	lslf	timerLock@index,w
  1289  00C4  3E20               	addlw	(low (_timers| 0))& (0+255)
  1290  00C5  0086               	movwf	6
  1291  00C6  0187               	clrf	7
  1292  00C7  30FF               	movlw	255
  1293  00C8  3FC0               	movwi [0]fsr1
  1294  00C9  30FF               	movlw	255
  1295  00CA  3FC1               	movwi [1]fsr1
  1296  00CB  0008               	return
  1297  00CC                     __end_of_timerLock:	
  1298                           
  1299                           	psect	text10
  1300  005F                     __ptext10:	
  1301 ;; *************** function _LEDService *****************
  1302 ;; Defined at:
  1303 ;;		line 47 in file "../source/LED.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1
  1317 ;;      Params:         0       0       0
  1318 ;;      Locals:         0       0       0
  1319 ;;      Temps:          0       0       0
  1320 ;;      Totals:         0       0       0
  1321 ;;Total ram usage:        0 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    3
  1324 ;; This function calls:
  1325 ;;		_timerRead
  1326 ;;		_timerSet
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _LEDService
  1334  005F                     _LEDService:	
  1335                           
  1336                           ;LED.c: 49: if (flashing)
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _LEDService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1340  005F  0877               	movf	_flashing,w
  1341  0060  1903               	btfsc	3,2
  1342  0061  0008               	return
  1343                           
  1344                           ;LED.c: 50: {
  1345                           ;LED.c: 51: if ( timerRead(LEDTimer) == 0 )
  1346  0062  0879               	movf	_LEDTimer,w
  1347  0063  2079               	fcall	_timerRead
  1348  0064  0020               	movlb	0	; select bank0
  1349  0065  0862               	movf	?_timerRead,w
  1350  0066  0463               	iorwf	?_timerRead+1,w
  1351  0067  1D03               	btfss	3,2
  1352  0068  0008               	return
  1353                           
  1354                           ;LED.c: 52: {
  1355                           ;LED.c: 53: if (flasherToggle)
  1356  0069  0876               	movf	_flasherToggle,w
  1357  006A  1903               	btfsc	3,2
  1358  006B  286F               	goto	l49
  1359                           
  1360                           ;LED.c: 54: {
  1361                           ;LED.c: 55: flasherToggle = 0;
  1362  006C  01F6               	clrf	_flasherToggle
  1363                           
  1364                           ;LED.c: 56: PORTAbits.RA5 = 1;
  1365  006D  168C               	bsf	12,5	;volatile
  1366                           
  1367                           ;LED.c: 57: }
  1368  006E  2872               	goto	l863
  1369  006F                     l49:	
  1370                           
  1371                           ;LED.c: 58: else
  1372                           ;LED.c: 59: {
  1373                           ;LED.c: 60: flasherToggle = !0;
  1374  006F  01F6               	clrf	_flasherToggle
  1375  0070  0AF6               	incf	_flasherToggle,f
  1376                           
  1377                           ;LED.c: 61: PORTAbits.RA5 = 0;
  1378  0071  128C               	bcf	12,5	;volatile
  1379  0072                     l863:	
  1380                           
  1381                           ;LED.c: 62: }
  1382                           ;LED.c: 63: timerSet( LEDTimer, flashRate );
  1383  0072  0869               	movf	_flashRate+1,w
  1384  0073  00F5               	movwf	timerSet@duration+1
  1385  0074  0868               	movf	_flashRate,w
  1386  0075  00F4               	movwf	timerSet@duration
  1387  0076  0879               	movf	_LEDTimer,w
  1388  0077  20A1               	fcall	_timerSet
  1389  0078  0008               	return
  1390  0079                     __end_of_LEDService:	
  1391                           
  1392                           	psect	text11
  1393  00A1                     __ptext11:	
  1394 ;; *************** function _timerSet *****************
  1395 ;; Defined at:
  1396 ;;		line 105 in file "../source/timer.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  index           1    wreg     unsigned char 
  1399 ;;  duration        2    4[COMMON] unsigned int 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  index           1    0[BANK0 ] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1
  1411 ;;      Params:         2       0       0
  1412 ;;      Locals:         0       1       0
  1413 ;;      Temps:          0       0       0
  1414 ;;      Totals:         2       1       0
  1415 ;;Total ram usage:        3 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    2
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_LEDInit
  1422 ;;		_LEDService
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _timerSet
  1428  00A1                     _timerSet:	
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in _timerSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  1432                           ;timerSet@index stored from wreg
  1433  00A1  0020               	movlb	0	; select bank0
  1434  00A2  00E2               	movwf	timerSet@index
  1435                           
  1436                           ;timer.c: 107: if ( index < numTimers )
  1437  00A3  0878               	movf	_numTimers,w
  1438  00A4  0262               	subwf	timerSet@index,w
  1439  00A5  1803               	skipnc
  1440  00A6  0008               	return
  1441                           
  1442                           ;timer.c: 108: {
  1443                           ;timer.c: 109: timers[index] = duration;
  1444  00A7  3562               	lslf	timerSet@index,w
  1445  00A8  3E20               	addlw	(low (_timers| 0))& (0+255)
  1446  00A9  0086               	movwf	6
  1447  00AA  0187               	clrf	7
  1448  00AB  0874               	movf	timerSet@duration,w
  1449  00AC  3FC0               	movwi [0]fsr1
  1450  00AD  0875               	movf	timerSet@duration+1,w
  1451  00AE  3FC1               	movwi [1]fsr1
  1452  00AF  0008               	return
  1453  00B0                     __end_of_timerSet:	
  1454                           
  1455                           	psect	text12
  1456  0079                     __ptext12:	
  1457 ;; *************** function _timerRead *****************
  1458 ;; Defined at:
  1459 ;;		line 121 in file "../source/timer.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  index           1    wreg     unsigned char 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  index           1    5[BANK0 ] unsigned char 
  1464 ;;  result          2    3[BANK0 ] unsigned int 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  2    0[BANK0 ] unsigned int 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1
  1474 ;;      Params:         0       3       0
  1475 ;;      Locals:         0       3       0
  1476 ;;      Temps:          0       0       0
  1477 ;;      Totals:         0       6       0
  1478 ;;Total ram usage:        6 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    2
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_LEDService
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _timerRead
  1490  0079                     _timerRead:	
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _timerRead: [wreg+fsr1l+fsr1h+status,2+status,0]
  1494                           ;timerRead@index stored from wreg
  1495  0079  0020               	movlb	0	; select bank0
  1496  007A  00E7               	movwf	timerRead@index
  1497                           
  1498                           ;timer.c: 123: unsigned int result = 0xFFFF;
  1499  007B  30FF               	movlw	255
  1500  007C  00E5               	movwf	timerRead@result
  1501  007D  30FF               	movlw	255
  1502  007E  00E6               	movwf	timerRead@result+1
  1503                           
  1504                           ;timer.c: 124: if ( index < numTimers )
  1505  007F  0878               	movf	_numTimers,w
  1506  0080  0267               	subwf	timerRead@index,w
  1507  0081  1803               	skipnc
  1508  0082  288B               	goto	l849
  1509                           
  1510                           ;timer.c: 125: {
  1511                           ;timer.c: 126: result = timers[index];
  1512  0083  3567               	lslf	timerRead@index,w
  1513  0084  3E20               	addlw	(low (_timers| 0))& (0+255)
  1514  0085  0086               	movwf	6
  1515  0086  0187               	clrf	7
  1516  0087  3F40               	moviw [0]fsr1
  1517  0088  00E5               	movwf	timerRead@result
  1518  0089  3F41               	moviw [1]fsr1
  1519  008A  00E6               	movwf	timerRead@result+1
  1520  008B                     l849:	
  1521                           
  1522                           ;timer.c: 127: }
  1523                           ;timer.c: 128: return ( result );
  1524  008B  0866               	movf	timerRead@result+1,w
  1525  008C  00E3               	movwf	?_timerRead+1
  1526  008D  0865               	movf	timerRead@result,w
  1527  008E  00E2               	movwf	?_timerRead
  1528  008F  0008               	return
  1529  0090                     __end_of_timerRead:	
  1530                           
  1531                           	psect	intentry
  1532  0004                     __pintentry:	
  1533 ;; *************** function _ISRCode *****************
  1534 ;; Defined at:
  1535 ;;		line 31 in file "../source/interrupt.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1
  1549 ;;      Params:         0       0       0
  1550 ;;      Locals:         0       0       0
  1551 ;;      Temps:          1       0       0
  1552 ;;      Totals:         1       0       0
  1553 ;;Total ram usage:        1 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    1
  1556 ;; This function calls:
  1557 ;;		_timerInterrupt
  1558 ;; This function is called by:
  1559 ;;		Interrupt level 1
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563  0004                     _ISRCode:	
  1564                           
  1565                           ;incstack = 0
  1566  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1567                           
  1568                           ; Regs used in _ISRCode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1569  0005  3180               	pagesel	$
  1570  0006  0020               	movlb	0	; select bank0
  1571  0007  087F               	movf	127,w
  1572  0008  00F3               	movwf	??_ISRCode
  1573                           
  1574                           ;interrupt.c: 34: timerInterrupt( );
  1575  0009  2020               	fcall	_timerInterrupt
  1576  000A  0873               	movf	??_ISRCode,w
  1577  000B  0020               	movlb	0	; select bank0
  1578  000C  00FF               	movwf	127
  1579  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1580  000E  0009               	retfie
  1581  000F                     __end_of_ISRCode:	
  1582                           
  1583                           	psect	text14
  1584  0020                     __ptext14:	
  1585 ;; *************** function _timerInterrupt *****************
  1586 ;; Defined at:
  1587 ;;		line 51 in file "../source/timer.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  i               1    2[COMMON] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1
  1601 ;;      Params:         0       0       0
  1602 ;;      Locals:         1       0       0
  1603 ;;      Temps:          2       0       0
  1604 ;;      Totals:         3       0       0
  1605 ;;Total ram usage:        3 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_ISRCode
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _timerInterrupt
  1616  0020                     _timerInterrupt:	
  1617                           
  1618                           ;timer.c: 53: unsigned char i;
  1619                           ;timer.c: 55: if ( PIE1bits.TMR1IE && PIR1bits.TMR1IF )
  1620                           
  1621                           ;incstack = 0
  1622                           ; Regs used in _timerInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1623  0020  0021               	movlb	1	; select bank1
  1624  0021  1C11               	btfss	17,0	;volatile
  1625  0022  0008               	return
  1626  0023  0020               	movlb	0	; select bank0
  1627  0024  1C11               	btfss	17,0	;volatile
  1628  0025  0008               	return
  1629                           
  1630                           ;timer.c: 56: {
  1631                           ;timer.c: 57: T1CONbits.TMR1ON = 0;
  1632  0026  1018               	bcf	24,0	;volatile
  1633                           
  1634                           ;timer.c: 58: if ( ( delayTimer != 0 ) )
  1635  0027  0860               	movf	_delayTimer,w
  1636  0028  0461               	iorwf	_delayTimer+1,w
  1637  0029  1903               	btfsc	3,2
  1638  002A  282F               	goto	i1l779
  1639                           
  1640                           ;timer.c: 59: {
  1641                           ;timer.c: 60: delayTimer--;
  1642  002B  3001               	movlw	1
  1643  002C  02E0               	subwf	_delayTimer,f
  1644  002D  3000               	movlw	0
  1645  002E  3BE1               	subwfb	_delayTimer+1,f
  1646  002F                     i1l779:	
  1647                           
  1648                           ;timer.c: 61: }
  1649                           ;timer.c: 63: for ( i = 0; i < numTimers; i++ )
  1650  002F  01F2               	clrf	timerInterrupt@i
  1651  0030                     i1l789:	
  1652  0030  0878               	movf	_numTimers,w
  1653  0031  0272               	subwf	timerInterrupt@i,w
  1654  0032  1803               	btfsc	3,0
  1655  0033  2857               	goto	i1l117
  1656                           
  1657                           ;timer.c: 64: {
  1658                           ;timer.c: 65: if ( ( timers[i] != 0 ) && ( timers[i] != 0xFFFF ) )
  1659  0034  3572               	lslf	timerInterrupt@i,w
  1660  0035  3E20               	addlw	(low (_timers| 0))& (0+255)
  1661  0036  0086               	movwf	6
  1662  0037  0187               	clrf	7
  1663  0038  0016               	moviw fsr1++
  1664  0039  0401               	iorwf	1,w
  1665  003A  1903               	btfsc	3,2
  1666  003B  2852               	goto	i1l787
  1667  003C  3572               	lslf	timerInterrupt@i,w
  1668  003D  3E20               	addlw	(low (_timers| 0))& (0+255)
  1669  003E  0086               	movwf	6
  1670  003F  0187               	clrf	7
  1671  0040  0016               	moviw fsr1++
  1672  0041  3AFF               	xorlw	255
  1673  0042  00F0               	movwf	??_timerInterrupt
  1674  0043  0016               	moviw fsr1++
  1675  0044  3AFF               	xorlw	255
  1676  0045  04F0               	iorwf	??_timerInterrupt,f
  1677  0046  1903               	btfsc	3,2
  1678  0047  2852               	goto	i1l787
  1679                           
  1680                           ;timer.c: 66: {
  1681                           ;timer.c: 67: timers[i]--;
  1682  0048  3572               	lslf	timerInterrupt@i,w
  1683  0049  3E20               	addlw	(low (_timers| 0))& (0+255)
  1684  004A  0086               	movwf	6
  1685  004B  0187               	clrf	7
  1686  004C  3001               	movlw	1
  1687  004D  0281               	subwf	1,f
  1688  004E  3141               	addfsr 1,1
  1689  004F  3000               	movlw	0
  1690  0050  3B81               	subwfb	1,f
  1691  0051  317F               	addfsr 1,-1
  1692  0052                     i1l787:	
  1693  0052  3001               	movlw	1
  1694  0053  00F0               	movwf	??_timerInterrupt
  1695  0054  0870               	movf	??_timerInterrupt,w
  1696  0055  07F2               	addwf	timerInterrupt@i,f
  1697  0056  2830               	goto	i1l789
  1698  0057                     i1l117:	
  1699                           
  1700                           ;timer.c: 68: }
  1701                           ;timer.c: 69: }
  1702                           ;timer.c: 71: TMR1 = 32000;
  1703  0057  307D               	movlw	125
  1704  0058  0020               	movlb	0	; select bank0
  1705  0059  0097               	movwf	23	;volatile
  1706  005A  3000               	movlw	0
  1707  005B  0096               	movwf	22	;volatile
  1708                           
  1709                           ;timer.c: 72: T1CONbits.TMR1ON = 1;
  1710  005C  1418               	bsf	24,0	;volatile
  1711                           
  1712                           ;timer.c: 73: PIR1bits.TMR1IF = 0;
  1713  005D  1011               	bcf	17,0	;volatile
  1714  005E  0008               	return
  1715  005F                     __end_of_timerInterrupt:	
  1716  007E                     btemp	set	126	;btemp
  1717  007E                     int$flags	set	126
  1718  007E                     wtemp	set	126
  1719  007E                     wtemp0	set	126
  1720  0080                     wtemp1	set	128
  1721  0082                     wtemp2	set	130
  1722  0084                     wtemp3	set	132
  1723  0086                     wtemp4	set	134
  1724  0088                     wtemp5	set	136
  1725  007F                     wtemp6	set	127
  1726  007E                     ttemp	set	126
  1727  007E                     ttemp0	set	126
  1728  0081                     ttemp1	set	129
  1729  0084                     ttemp2	set	132
  1730  0087                     ttemp3	set	135
  1731  007F                     ttemp4	set	127
  1732  007E                     ltemp	set	126
  1733  007E                     ltemp0	set	126
  1734  0082                     ltemp1	set	130
  1735  0086                     ltemp2	set	134
  1736  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         69
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      6      74
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _initialise->_flashLED
    _LEDInit->_timerGet
    _LEDInit->_timerSet
    _timerGet->_timerLock
    _LEDService->_timerSet

Critical Paths under _ISRCode in COMMON

    _ISRCode->_timerInterrupt

Critical Paths under _main in BANK0

    _initialise->_LEDInit
    _LEDInit->_timerGet
    _LEDInit->_timerSet
    _LEDService->_timerRead

Critical Paths under _ISRCode in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRCode in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     747
                         _LEDService
                         _initialise
                       _kickWatchDog
 ---------------------------------------------------------------------------------
 (1) _kickWatchDog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0     425
                            _LEDInit
                           _flashLED
                       _hardwareInit
                      _initInterrupt
                          _timerInit
 ---------------------------------------------------------------------------------
 (2) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _hardwareInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flashLED                                             2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _LEDInit                                              1     1      0     350
                                              1 BANK0      1     1      0
                           _timerGet
                           _timerSet
 ---------------------------------------------------------------------------------
 (3) _timerGet                                             2     2      0     127
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
                          _timerLock
 ---------------------------------------------------------------------------------
 (4) _timerLock                                            1     1      0      62
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LEDService                                           0     0      0     322
                          _timerRead
                           _timerSet
 ---------------------------------------------------------------------------------
 (3) _timerSet                                             3     1      2     223
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _timerRead                                            6     3      3      99
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISRCode                                              1     1      0      90
                                              3 COMMON     1     1      0
                     _timerInterrupt
 ---------------------------------------------------------------------------------
 (6) _timerInterrupt                                       3     3      0      90
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDService
     _timerRead
     _timerSet
   _initialise
     _LEDInit
       _timerGet
         _timerLock
       _timerSet
     _flashLED
     _hardwareInit
     _initInterrupt
     _timerInit
   _kickWatchDog

 _ISRCode (ROOT)
   _timerInterrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      54       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      54       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Feb 27 12:07:31 2017

            __CFG_CP$OFF 0000                       l49 006F                       l77 00FF  
            ?_LEDService 0070                      l863 0072                      l849 008B  
           __CFG_CPD$OFF 0000             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_LVP$OFF 0000          __end_of_LEDInit 00D8           ??_hardwareInit 0074  
           __CFG_WDTE$ON 0000                     _TMR1 0016          __end_of_ISRCode 000F  
           __CFG_WRT$OFF 0000                     _main 00FE            ?_kickWatchDog 0070  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 000F                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000         ??_timerInterrupt 0070            __CFG_PLLEN$ON 0000  
                  ?_main 0070                    i1l117 0057                    i1l787 0052  
                  i1l779 002F                    i1l789 0030           __CFG_FCMEN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080           ??_kickWatchDog 0074                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
    __size_of_LEDService 001A           __CFG_MCLRE$OFF 0000          __initialization 0010  
 __size_of_initInterrupt 0003             __end_of_main 0102                   ??_main 0076  
              ??_LEDInit 0063                ??_ISRCode 0073           __CFG_PWRTE$OFF 0000  
       __end_of_flashLED 00EE     __end_of_hardwareInit 00E3                   _timers 0020  
       __end_of_timerGet 00BE         __end_of_timerSet 00B0            _initInterrupt 0102  
__end_of__initialization 001D           __pcstackCOMMON 0070             __pidataBANK0 0105  
           ??_LEDService 0076     __end_of_kickWatchDog 0109           ?_initInterrupt 0070  
             __pbssBANK0 0020               __pnvCOMMON 0079               _delayTimer 0060  
     __end_of_LEDService 0079               __pmaintext 00FE               __pintentry 0004  
     __size_of_timerInit 0011       __size_of_timerRead 0017       __size_of_timerLock 000E  
                _LEDInit 00CC                  _ISRCode 0004                ?_flashLED 0074  
  __size_of_hardwareInit 000B                ?_timerGet 0070                ?_timerSet 0074  
        __CFG_STVREN$OFF 0000               _initialise 00EE                  __ptext1 0107  
                __ptext2 00EE                  __ptext3 0090                  __ptext4 0102  
                __ptext5 00D8                  __ptext6 00E3                  __ptext7 00CC  
                __ptext8 00B0                  __ptext9 00BE                _T1CONbits 0018  
        ??_initInterrupt 0074               ??_flashLED 0076                  clrloop0 00F9  
   end_of_initialization 001D             _hardwareInit 00D8        __end_of_timerInit 00A1  
      __end_of_timerRead 0090        __end_of_timerLock 00CC               ??_timerGet 0075  
             ??_timerSet 0076    __size_of_kickWatchDog 0002                _PORTAbits 000C  
__size_of_timerInterrupt 003F         __CFG_FOSC$INTOSC 0000                _TRISAbits 008C  
           _kickWatchDog 0107              ?_initialise 0070      start_initialization 0010  
            __pdataBANK0 0068                 ?_LEDInit 0070              __pbssCOMMON 0076  
              ___latbits 0000            __pcstackBANK0 0062                 ?_ISRCode 0070  
      __size_of_flashLED 000B      __size_of_initialise 000A        __size_of_timerGet 000E  
              _flashRate 0068        __size_of_timerSet 000F         timerSet@duration 0074  
         _timerInterrupt 0020                 _LEDTimer 0079                clear_ram0 00F8  
               _PIE1bits 0091                 _PIR1bits 0011                _numTimers 0078  
         flashLED@period 0074                _timerInit 0090                _timerRead 0079  
              _timerLock 00BE   __end_of_timerInterrupt 005F         __size_of_LEDInit 000C  
  __end_of_initInterrupt 0105         __size_of_ISRCode 000B          timerRead@result 0065  
             ?_timerInit 0070               ?_timerRead 0062               ?_timerLock 0070  
           ??_initialise 0076          ?_timerInterrupt 0070           timerGet@result 0062  
               __ptext10 005F                 __ptext11 00A1                 __ptext12 0079  
             _T1GCONbits 0019                 __ptext14 0020                 _flashLED 00E3  
               _flashing 0077          timerInterrupt@i 0072            __size_of_main 0004  
     __end_of_initialise 00F8                 _timerGet 00B0                 _timerSet 00A1  
               int$flags 007E               _LEDService 005F           timerRead@index 0067  
         timerLock@index 0074               _INTCONbits 000B                 intlevel1 0000  
          _flasherToggle 0076        __CFG_CLKOUTEN$OFF 0000               _OSCCONbits 0099  
            ??_timerInit 0074              ??_timerRead 0074              ??_timerLock 0074  
          timerSet@index 0062               _WDTCONbits 0097            ?_hardwareInit 0070  
