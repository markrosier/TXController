

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Mar 22 09:02:14 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12LF1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 1.41
    69                           ; Generated 25/01/2017 GMT
    70                           ; 
    71                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC12LF1822 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  008C                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  010C                     	;# 
   143  0111                     	;# 
   144  0112                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  011A                     	;# 
   151  011B                     	;# 
   152  011D                     	;# 
   153  011D                     	;# 
   154  018C                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  0291                     	;# 
   192  0291                     	;# 
   193  0292                     	;# 
   194  0293                     	;# 
   195  0294                     	;# 
   196  0295                     	;# 
   197  0295                     	;# 
   198  0296                     	;# 
   199  0391                     	;# 
   200  0392                     	;# 
   201  0393                     	;# 
   202  039A                     	;# 
   203  039C                     	;# 
   204  039D                     	;# 
   205  039E                     	;# 
   206  039F                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  008C                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009B                     	;# 
   254  009B                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  010C                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011A                     	;# 
   267  011B                     	;# 
   268  011D                     	;# 
   269  011D                     	;# 
   270  018C                     	;# 
   271  0191                     	;# 
   272  0191                     	;# 
   273  0192                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0194                     	;# 
   278  0195                     	;# 
   279  0196                     	;# 
   280  0199                     	;# 
   281  019A                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019C                     	;# 
   287  019C                     	;# 
   288  019D                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  020C                     	;# 
   292  0211                     	;# 
   293  0211                     	;# 
   294  0212                     	;# 
   295  0212                     	;# 
   296  0213                     	;# 
   297  0213                     	;# 
   298  0214                     	;# 
   299  0214                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0216                     	;# 
   304  0216                     	;# 
   305  0217                     	;# 
   306  0217                     	;# 
   307  0291                     	;# 
   308  0291                     	;# 
   309  0292                     	;# 
   310  0293                     	;# 
   311  0294                     	;# 
   312  0295                     	;# 
   313  0295                     	;# 
   314  0296                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  0393                     	;# 
   318  039A                     	;# 
   319  039C                     	;# 
   320  039D                     	;# 
   321  039E                     	;# 
   322  039F                     	;# 
   323  0FE4                     	;# 
   324  0FE5                     	;# 
   325  0FE6                     	;# 
   326  0FE7                     	;# 
   327  0FE8                     	;# 
   328  0FE9                     	;# 
   329  0FEA                     	;# 
   330  0FEB                     	;# 
   331  0FED                     	;# 
   332  0FEE                     	;# 
   333  0FEF                     	;# 
   334  0000                     	;# 
   335  0001                     	;# 
   336  0002                     	;# 
   337  0003                     	;# 
   338  0004                     	;# 
   339  0005                     	;# 
   340  0006                     	;# 
   341  0007                     	;# 
   342  0008                     	;# 
   343  0009                     	;# 
   344  000A                     	;# 
   345  000B                     	;# 
   346  000C                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  008C                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  010C                     	;# 
   375  0111                     	;# 
   376  0112                     	;# 
   377  0115                     	;# 
   378  0116                     	;# 
   379  0117                     	;# 
   380  0118                     	;# 
   381  0119                     	;# 
   382  011A                     	;# 
   383  011B                     	;# 
   384  011D                     	;# 
   385  011D                     	;# 
   386  018C                     	;# 
   387  0191                     	;# 
   388  0191                     	;# 
   389  0192                     	;# 
   390  0193                     	;# 
   391  0193                     	;# 
   392  0193                     	;# 
   393  0194                     	;# 
   394  0195                     	;# 
   395  0196                     	;# 
   396  0199                     	;# 
   397  019A                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019B                     	;# 
   402  019C                     	;# 
   403  019C                     	;# 
   404  019D                     	;# 
   405  019E                     	;# 
   406  019F                     	;# 
   407  020C                     	;# 
   408  0211                     	;# 
   409  0211                     	;# 
   410  0212                     	;# 
   411  0212                     	;# 
   412  0213                     	;# 
   413  0213                     	;# 
   414  0214                     	;# 
   415  0214                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  0291                     	;# 
   424  0291                     	;# 
   425  0292                     	;# 
   426  0293                     	;# 
   427  0294                     	;# 
   428  0295                     	;# 
   429  0295                     	;# 
   430  0296                     	;# 
   431  0391                     	;# 
   432  0392                     	;# 
   433  0393                     	;# 
   434  039A                     	;# 
   435  039C                     	;# 
   436  039D                     	;# 
   437  039E                     	;# 
   438  039F                     	;# 
   439  0FE4                     	;# 
   440  0FE5                     	;# 
   441  0FE6                     	;# 
   442  0FE7                     	;# 
   443  0FE8                     	;# 
   444  0FE9                     	;# 
   445  0FEA                     	;# 
   446  0FEB                     	;# 
   447  0FED                     	;# 
   448  0FEE                     	;# 
   449  0FEF                     	;# 
   450  0000                     	;# 
   451  0001                     	;# 
   452  0002                     	;# 
   453  0003                     	;# 
   454  0004                     	;# 
   455  0005                     	;# 
   456  0006                     	;# 
   457  0007                     	;# 
   458  0008                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001C                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  008C                     	;# 
   477  0091                     	;# 
   478  0092                     	;# 
   479  0095                     	;# 
   480  0096                     	;# 
   481  0097                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009A                     	;# 
   485  009B                     	;# 
   486  009B                     	;# 
   487  009C                     	;# 
   488  009D                     	;# 
   489  009E                     	;# 
   490  010C                     	;# 
   491  0111                     	;# 
   492  0112                     	;# 
   493  0115                     	;# 
   494  0116                     	;# 
   495  0117                     	;# 
   496  0118                     	;# 
   497  0119                     	;# 
   498  011A                     	;# 
   499  011B                     	;# 
   500  011D                     	;# 
   501  011D                     	;# 
   502  018C                     	;# 
   503  0191                     	;# 
   504  0191                     	;# 
   505  0192                     	;# 
   506  0193                     	;# 
   507  0193                     	;# 
   508  0193                     	;# 
   509  0194                     	;# 
   510  0195                     	;# 
   511  0196                     	;# 
   512  0199                     	;# 
   513  019A                     	;# 
   514  019B                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019C                     	;# 
   519  019C                     	;# 
   520  019D                     	;# 
   521  019E                     	;# 
   522  019F                     	;# 
   523  020C                     	;# 
   524  0211                     	;# 
   525  0211                     	;# 
   526  0212                     	;# 
   527  0212                     	;# 
   528  0213                     	;# 
   529  0213                     	;# 
   530  0214                     	;# 
   531  0214                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0216                     	;# 
   536  0216                     	;# 
   537  0217                     	;# 
   538  0217                     	;# 
   539  0291                     	;# 
   540  0291                     	;# 
   541  0292                     	;# 
   542  0293                     	;# 
   543  0294                     	;# 
   544  0295                     	;# 
   545  0295                     	;# 
   546  0296                     	;# 
   547  0391                     	;# 
   548  0392                     	;# 
   549  0393                     	;# 
   550  039A                     	;# 
   551  039C                     	;# 
   552  039D                     	;# 
   553  039E                     	;# 
   554  039F                     	;# 
   555  0FE4                     	;# 
   556  0FE5                     	;# 
   557  0FE6                     	;# 
   558  0FE7                     	;# 
   559  0FE8                     	;# 
   560  0FE9                     	;# 
   561  0FEA                     	;# 
   562  0FEB                     	;# 
   563  0FED                     	;# 
   564  0FEE                     	;# 
   565  0FEF                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0008                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  0011                     	;# 
   580  0012                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  0019                     	;# 
   587  001A                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001E                     	;# 
   591  001F                     	;# 
   592  008C                     	;# 
   593  0091                     	;# 
   594  0092                     	;# 
   595  0095                     	;# 
   596  0096                     	;# 
   597  0097                     	;# 
   598  0098                     	;# 
   599  0099                     	;# 
   600  009A                     	;# 
   601  009B                     	;# 
   602  009B                     	;# 
   603  009C                     	;# 
   604  009D                     	;# 
   605  009E                     	;# 
   606  010C                     	;# 
   607  0111                     	;# 
   608  0112                     	;# 
   609  0115                     	;# 
   610  0116                     	;# 
   611  0117                     	;# 
   612  0118                     	;# 
   613  0119                     	;# 
   614  011A                     	;# 
   615  011B                     	;# 
   616  011D                     	;# 
   617  011D                     	;# 
   618  018C                     	;# 
   619  0191                     	;# 
   620  0191                     	;# 
   621  0192                     	;# 
   622  0193                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0194                     	;# 
   626  0195                     	;# 
   627  0196                     	;# 
   628  0199                     	;# 
   629  019A                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019F                     	;# 
   639  020C                     	;# 
   640  0211                     	;# 
   641  0211                     	;# 
   642  0212                     	;# 
   643  0212                     	;# 
   644  0213                     	;# 
   645  0213                     	;# 
   646  0214                     	;# 
   647  0214                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0216                     	;# 
   652  0216                     	;# 
   653  0217                     	;# 
   654  0217                     	;# 
   655  0291                     	;# 
   656  0291                     	;# 
   657  0292                     	;# 
   658  0293                     	;# 
   659  0294                     	;# 
   660  0295                     	;# 
   661  0295                     	;# 
   662  0296                     	;# 
   663  0391                     	;# 
   664  0392                     	;# 
   665  0393                     	;# 
   666  039A                     	;# 
   667  039C                     	;# 
   668  039D                     	;# 
   669  039E                     	;# 
   670  039F                     	;# 
   671  0FE4                     	;# 
   672  0FE5                     	;# 
   673  0FE6                     	;# 
   674  0FE7                     	;# 
   675  0FE8                     	;# 
   676  0FE9                     	;# 
   677  0FEA                     	;# 
   678  0FEB                     	;# 
   679  0FED                     	;# 
   680  0FEE                     	;# 
   681  0FEF                     	;# 
   682  0000                     	;# 
   683  0001                     	;# 
   684  0002                     	;# 
   685  0003                     	;# 
   686  0004                     	;# 
   687  0005                     	;# 
   688  0006                     	;# 
   689  0007                     	;# 
   690  0008                     	;# 
   691  0009                     	;# 
   692  000A                     	;# 
   693  000B                     	;# 
   694  000C                     	;# 
   695  0011                     	;# 
   696  0012                     	;# 
   697  0015                     	;# 
   698  0016                     	;# 
   699  0016                     	;# 
   700  0017                     	;# 
   701  0018                     	;# 
   702  0019                     	;# 
   703  001A                     	;# 
   704  001B                     	;# 
   705  001C                     	;# 
   706  001E                     	;# 
   707  001F                     	;# 
   708  008C                     	;# 
   709  0091                     	;# 
   710  0092                     	;# 
   711  0095                     	;# 
   712  0096                     	;# 
   713  0097                     	;# 
   714  0098                     	;# 
   715  0099                     	;# 
   716  009A                     	;# 
   717  009B                     	;# 
   718  009B                     	;# 
   719  009C                     	;# 
   720  009D                     	;# 
   721  009E                     	;# 
   722  010C                     	;# 
   723  0111                     	;# 
   724  0112                     	;# 
   725  0115                     	;# 
   726  0116                     	;# 
   727  0117                     	;# 
   728  0118                     	;# 
   729  0119                     	;# 
   730  011A                     	;# 
   731  011B                     	;# 
   732  011D                     	;# 
   733  011D                     	;# 
   734  018C                     	;# 
   735  0191                     	;# 
   736  0191                     	;# 
   737  0192                     	;# 
   738  0193                     	;# 
   739  0193                     	;# 
   740  0193                     	;# 
   741  0194                     	;# 
   742  0195                     	;# 
   743  0196                     	;# 
   744  0199                     	;# 
   745  019A                     	;# 
   746  019B                     	;# 
   747  019B                     	;# 
   748  019B                     	;# 
   749  019B                     	;# 
   750  019C                     	;# 
   751  019C                     	;# 
   752  019D                     	;# 
   753  019E                     	;# 
   754  019F                     	;# 
   755  020C                     	;# 
   756  0211                     	;# 
   757  0211                     	;# 
   758  0212                     	;# 
   759  0212                     	;# 
   760  0213                     	;# 
   761  0213                     	;# 
   762  0214                     	;# 
   763  0214                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0215                     	;# 
   767  0216                     	;# 
   768  0216                     	;# 
   769  0217                     	;# 
   770  0217                     	;# 
   771  0291                     	;# 
   772  0291                     	;# 
   773  0292                     	;# 
   774  0293                     	;# 
   775  0294                     	;# 
   776  0295                     	;# 
   777  0295                     	;# 
   778  0296                     	;# 
   779  0391                     	;# 
   780  0392                     	;# 
   781  0393                     	;# 
   782  039A                     	;# 
   783  039C                     	;# 
   784  039D                     	;# 
   785  039E                     	;# 
   786  039F                     	;# 
   787  0FE4                     	;# 
   788  0FE5                     	;# 
   789  0FE6                     	;# 
   790  0FE7                     	;# 
   791  0FE8                     	;# 
   792  0FE9                     	;# 
   793  0FEA                     	;# 
   794  0FEB                     	;# 
   795  0FED                     	;# 
   796  0FEE                     	;# 
   797  0FEF                     	;# 
   798                           
   799                           	psect	idataBANK0
   800  06B1                     __pidataBANK0:	
   801                           
   802                           ;initializer for _beepRate
   803  06B1  34E8               	retlw	232
   804  06B2  3403               	retlw	3
   805                           
   806                           ;initializer for _flashRate
   807  06B3  34E8               	retlw	232
   808  06B4  3403               	retlw	3
   809                           
   810                           	psect	stringtext
   811  0030                     __pstringtext:	
   812  0030                     _initStateTable:	
   813  0030  34C2               	retlw	low _init_NoAction
   814  0031  3406               	retlw	high _init_NoAction
   815  0032  34C7               	retlw	low _initS1_Timeout
   816  0033  3405               	retlw	high _initS1_Timeout
   817  0034  34C2               	retlw	low _init_NoAction
   818  0035  3406               	retlw	high _init_NoAction
   819  0036  34C2               	retlw	low _init_NoAction
   820  0037  3406               	retlw	high _init_NoAction
   821  0038  34C2               	retlw	low _init_NoAction
   822  0039  3406               	retlw	high _init_NoAction
   823  003A  34C2               	retlw	low _init_NoAction
   824  003B  3406               	retlw	high _init_NoAction
   825  003C  34C2               	retlw	low _init_NoAction
   826  003D  3406               	retlw	high _init_NoAction
   827  003E  34C2               	retlw	low _init_NoAction
   828  003F  3406               	retlw	high _init_NoAction
   829  0040  34C2               	retlw	low _init_NoAction
   830  0041  3406               	retlw	high _init_NoAction
   831  0042  346D               	retlw	low _initS2_Timeout
   832  0043  3406               	retlw	high _initS2_Timeout
   833  0044  34C2               	retlw	low _init_NoAction
   834  0045  3406               	retlw	high _init_NoAction
   835  0046  34C2               	retlw	low _init_NoAction
   836  0047  3406               	retlw	high _init_NoAction
   837  0048  34C2               	retlw	low _init_NoAction
   838  0049  3406               	retlw	high _init_NoAction
   839  004A  34C2               	retlw	low _init_NoAction
   840  004B  3406               	retlw	high _init_NoAction
   841  004C  34C2               	retlw	low _init_NoAction
   842  004D  3406               	retlw	high _init_NoAction
   843  004E  34C2               	retlw	low _init_NoAction
   844  004F  3406               	retlw	high _init_NoAction
   845  0050  34C2               	retlw	low _init_NoAction
   846  0051  3406               	retlw	high _init_NoAction
   847  0052  3447               	retlw	low _init_Restart
   848  0053  3405               	retlw	high _init_Restart
   849  0054  3460               	retlw	low _initS3_greenHigh
   850  0055  3406               	retlw	high _initS3_greenHigh
   851  0056  34C2               	retlw	low _init_NoAction
   852  0057  3406               	retlw	high _init_NoAction
   853  0058  34C2               	retlw	low _init_NoAction
   854  0059  3406               	retlw	high _init_NoAction
   855  005A  34C2               	retlw	low _init_NoAction
   856  005B  3406               	retlw	high _init_NoAction
   857  005C  34C2               	retlw	low _init_NoAction
   858  005D  3406               	retlw	high _init_NoAction
   859  005E  34C2               	retlw	low _init_NoAction
   860  005F  3406               	retlw	high _init_NoAction
   861  0060  34C2               	retlw	low _init_NoAction
   862  0061  3406               	retlw	high _init_NoAction
   863  0062  3447               	retlw	low _init_Restart
   864  0063  3405               	retlw	high _init_Restart
   865  0064  34C2               	retlw	low _init_NoAction
   866  0065  3406               	retlw	high _init_NoAction
   867  0066  3453               	retlw	low _initS4_greenLow
   868  0067  3406               	retlw	high _initS4_greenLow
   869  0068  34C2               	retlw	low _init_NoAction
   870  0069  3406               	retlw	high _init_NoAction
   871  006A  34C2               	retlw	low _init_NoAction
   872  006B  3406               	retlw	high _init_NoAction
   873  006C  34C2               	retlw	low _init_NoAction
   874  006D  3406               	retlw	high _init_NoAction
   875  006E  34C2               	retlw	low _init_NoAction
   876  006F  3406               	retlw	high _init_NoAction
   877  0070  34C2               	retlw	low _init_NoAction
   878  0071  3406               	retlw	high _init_NoAction
   879  0072  3447               	retlw	low _init_Restart
   880  0073  3405               	retlw	high _init_Restart
   881  0074  34C2               	retlw	low _init_NoAction
   882  0075  3406               	retlw	high _init_NoAction
   883  0076  34C2               	retlw	low _init_NoAction
   884  0077  3406               	retlw	high _init_NoAction
   885  0078  3446               	retlw	low _initS5_redHigh
   886  0079  3406               	retlw	high _initS5_redHigh
   887  007A  34C2               	retlw	low _init_NoAction
   888  007B  3406               	retlw	high _init_NoAction
   889  007C  34C2               	retlw	low _init_NoAction
   890  007D  3406               	retlw	high _init_NoAction
   891  007E  34C2               	retlw	low _init_NoAction
   892  007F  3406               	retlw	high _init_NoAction
   893  0080  34C2               	retlw	low _init_NoAction
   894  0081  3406               	retlw	high _init_NoAction
   895  0082  3447               	retlw	low _init_Restart
   896  0083  3405               	retlw	high _init_Restart
   897  0084  34C2               	retlw	low _init_NoAction
   898  0085  3406               	retlw	high _init_NoAction
   899  0086  34C2               	retlw	low _init_NoAction
   900  0087  3406               	retlw	high _init_NoAction
   901  0088  34C2               	retlw	low _init_NoAction
   902  0089  3406               	retlw	high _init_NoAction
   903  008A  3439               	retlw	low _initS6_redLow
   904  008B  3406               	retlw	high _initS6_redLow
   905  008C  34C2               	retlw	low _init_NoAction
   906  008D  3406               	retlw	high _init_NoAction
   907  008E  34C2               	retlw	low _init_NoAction
   908  008F  3406               	retlw	high _init_NoAction
   909  0090  34C2               	retlw	low _init_NoAction
   910  0091  3406               	retlw	high _init_NoAction
   911  0092  3447               	retlw	low _init_Restart
   912  0093  3405               	retlw	high _init_Restart
   913  0094  34C2               	retlw	low _init_NoAction
   914  0095  3406               	retlw	high _init_NoAction
   915  0096  34C2               	retlw	low _init_NoAction
   916  0097  3406               	retlw	high _init_NoAction
   917  0098  34C2               	retlw	low _init_NoAction
   918  0099  3406               	retlw	high _init_NoAction
   919  009A  34C2               	retlw	low _init_NoAction
   920  009B  3406               	retlw	high _init_NoAction
   921  009C  342C               	retlw	low _initS7_bothHigh
   922  009D  3406               	retlw	high _initS7_bothHigh
   923  009E  34C2               	retlw	low _init_NoAction
   924  009F  3406               	retlw	high _init_NoAction
   925  00A0  34C2               	retlw	low _init_NoAction
   926  00A1  3406               	retlw	high _init_NoAction
   927  00A2  3447               	retlw	low _init_Restart
   928  00A3  3405               	retlw	high _init_Restart
   929  00A4  34C2               	retlw	low _init_NoAction
   930  00A5  3406               	retlw	high _init_NoAction
   931  00A6  34C2               	retlw	low _init_NoAction
   932  00A7  3406               	retlw	high _init_NoAction
   933  00A8  34C2               	retlw	low _init_NoAction
   934  00A9  3406               	retlw	high _init_NoAction
   935  00AA  34C2               	retlw	low _init_NoAction
   936  00AB  3406               	retlw	high _init_NoAction
   937  00AC  34C2               	retlw	low _init_NoAction
   938  00AD  3406               	retlw	high _init_NoAction
   939  00AE  345D               	retlw	low _initS8_bothLow
   940  00AF  3405               	retlw	high _initS8_bothLow
   941  00B0  34C2               	retlw	low _init_NoAction
   942  00B1  3406               	retlw	high _init_NoAction
   943  00B2  34C2               	retlw	low _init_NoAction
   944  00B3  3406               	retlw	high _init_NoAction
   945  00B4  34C2               	retlw	low _init_NoAction
   946  00B5  3406               	retlw	high _init_NoAction
   947  00B6  34C2               	retlw	low _init_NoAction
   948  00B7  3406               	retlw	high _init_NoAction
   949  00B8  34C2               	retlw	low _init_NoAction
   950  00B9  3406               	retlw	high _init_NoAction
   951  00BA  34C2               	retlw	low _init_NoAction
   952  00BB  3406               	retlw	high _init_NoAction
   953  00BC  34C2               	retlw	low _init_NoAction
   954  00BD  3406               	retlw	high _init_NoAction
   955  00BE  34C2               	retlw	low _init_NoAction
   956  00BF  3406               	retlw	high _init_NoAction
   957  00C0                     __end_of_initStateTable:	
   958  00C0                     _runStateTable:	
   959  00C0  34C3               	retlw	low _run_NoAction
   960  00C1  3406               	retlw	high _run_NoAction
   961  00C2  3447               	retlw	low _init_Restart
   962  00C3  3405               	retlw	high _init_Restart
   963  00C4  3472               	retlw	low _run_Initialised
   964  00C5  3405               	retlw	high _run_Initialised
   965  00C6  3447               	retlw	low _init_Restart
   966  00C7  3405               	retlw	high _init_Restart
   967  00C8  3447               	retlw	low _init_Restart
   968  00C9  3405               	retlw	high _init_Restart
   969  00CA  34C3               	retlw	low _run_NoAction
   970  00CB  3406               	retlw	high _run_NoAction
   971  00CC  3447               	retlw	low _init_Restart
   972  00CD  3405               	retlw	high _init_Restart
   973  00CE  34C3               	retlw	low _run_NoAction
   974  00CF  3406               	retlw	high _run_NoAction
   975  00D0  3447               	retlw	low _init_Restart
   976  00D1  3405               	retlw	high _init_Restart
   977  00D2  3447               	retlw	low _init_Restart
   978  00D3  3405               	retlw	high _init_Restart
   979  00D4  3497               	retlw	low _run_BeepReceived
   980  00D5  3404               	retlw	high _run_BeepReceived
   981  00D6  3447               	retlw	low _init_Restart
   982  00D7  3405               	retlw	high _init_Restart
   983  00D8  34C3               	retlw	low _run_NoAction
   984  00D9  3406               	retlw	high _run_NoAction
   985  00DA  3447               	retlw	low _init_Restart
   986  00DB  3405               	retlw	high _init_Restart
   987  00DC  34C3               	retlw	low _run_NoAction
   988  00DD  3406               	retlw	high _run_NoAction
   989  00DE  3447               	retlw	low _init_Restart
   990  00DF  3405               	retlw	high _init_Restart
   991  00E0  3447               	retlw	low _init_Restart
   992  00E1  3405               	retlw	high _init_Restart
   993  00E2  3447               	retlw	low _init_Restart
   994  00E3  3405               	retlw	high _init_Restart
   995  00E4  349C               	retlw	low _run_GreenFlashing
   996  00E5  3406               	retlw	high _run_GreenFlashing
   997  00E6  3443               	retlw	low _run_GreenSteadyLow
   998  00E7  3404               	retlw	high _run_GreenSteadyLow
   999  00E8  3447               	retlw	low _init_Restart
  1000  00E9  3405               	retlw	high _init_Restart
  1001  00EA  3400               	retlw	0
  1002  00EB  3400               	retlw	0
  1003  00EC  3400               	retlw	0
  1004  00ED  3400               	retlw	0
  1005  00EE  3400               	retlw	0
  1006  00EF  3400               	retlw	0
  1007  00F0  3400               	retlw	0
  1008  00F1  3400               	retlw	0
  1009  00F2  3400               	retlw	0
  1010  00F3  3400               	retlw	0
  1011  00F4  3400               	retlw	0
  1012  00F5  3400               	retlw	0
  1013  00F6  3400               	retlw	0
  1014  00F7  3400               	retlw	0
  1015  00F8                     __end_of_runStateTable:	
  1016                           
  1017                           	psect	nvBANK0
  1018  0064                     __pnvBANK0:	
  1019  0064                     _eventHandlerTimer:	
  1020  0064                     	ds	1
  1021  0016                     _TMR1	set	22
  1022  001B                     _PR2	set	27
  1023  001C                     _T2CONbits	set	28
  1024  0011                     _PIR1bits	set	17
  1025  0018                     _T1CONbits	set	24
  1026  0019                     _T1GCONbits	set	25
  1027  000C                     _PORTAbits	set	12
  1028  000B                     _INTCONbits	set	11
  1029  0091                     _PIE1bits	set	145
  1030  0097                     _WDTCONbits	set	151
  1031  008C                     _TRISAbits	set	140
  1032  0099                     _OSCCONbits	set	153
  1033  010C                     _LATAbits	set	268
  1034  018C                     _ANSELAbits	set	396
  1035  0393                     _IOCAFbits	set	915
  1036  0391                     _IOCAPbits	set	913
  1037  0392                     _IOCANbits	set	914
  1038                           
  1039                           ; #config settings
  1040  0000                     
  1041                           	psect	cinit
  1042  0012                     start_initialization:	
  1043  0012                     __initialization:	
  1044                           
  1045                           ; Initialize objects allocated to BANK0
  1046  0012  26B1               	fcall	__pidataBANK0	;fetch initializer
  1047  0013  00E0               	movwf	__pdataBANK0& (0+127)
  1048  0014  26B2               	fcall	__pidataBANK0+1	;fetch initializer
  1049  0015  00E1               	movwf	(__pdataBANK0+1)& (0+127)
  1050  0016  26B3               	fcall	__pidataBANK0+2	;fetch initializer
  1051  0017  00E2               	movwf	(__pdataBANK0+2)& (0+127)
  1052  0018  26B4               	fcall	__pidataBANK0+3	;fetch initializer
  1053  0019  00E3               	movwf	(__pdataBANK0+3)& (0+127)
  1054                           
  1055                           ; Clear objects allocated to COMMON
  1056  001A  01F0               	clrf	__pbssCOMMON& (0+127)
  1057  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1058  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1059  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1060  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1061  001F  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1062  0020  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1063                           
  1064                           ; Clear objects allocated to BANK0
  1065  0021  3020               	movlw	low __pbssBANK0
  1066  0022  0084               	movwf	4
  1067  0023  3000               	movlw	high __pbssBANK0
  1068  0024  0085               	movwf	5
  1069  0025  302A               	movlw	42
  1070  0026  26A5               	fcall	clear_ram0
  1071                           
  1072                           ; Clear objects allocated to BANK1
  1073  0027  30A0               	movlw	low __pbssBANK1
  1074  0028  0084               	movwf	4
  1075  0029  3000               	movlw	high __pbssBANK1
  1076  002A  0085               	movwf	5
  1077  002B  3014               	movlw	20
  1078  002C  26A5               	fcall	clear_ram0
  1079  002D                     end_of_initialization:	
  1080                           ;End of C runtime variable initialization code
  1081                           
  1082  002D                     __end_of__initialization:	
  1083  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1084  002E  0020               	movlb	0
  1085  002F  2EAB               	ljmp	_main	;jump to C main() function
  1086                           
  1087                           	psect	bssCOMMON
  1088  0070                     __pbssCOMMON:	
  1089  0070                     _greenWentHigh:	
  1090  0070                     	ds	3
  1091  0073                     _systick:	
  1092  0073                     	ds	2
  1093  0075                     _numLongTimers:	
  1094  0075                     	ds	1
  1095  0076                     _numTimers:	
  1096  0076                     	ds	1
  1097                           
  1098                           	psect	bssBANK0
  1099  0020                     __pbssBANK0:	
  1100  0020                     _longTimers:	
  1101  0020                     	ds	4
  1102  0024                     _chargerInitialised:	
  1103  0024                     	ds	3
  1104  0027                     _redWentLow:	
  1105  0027                     	ds	3
  1106  002A                     _redWentHigh:	
  1107  002A                     	ds	3
  1108  002D                     _greenWentLow:	
  1109  002D                     	ds	3
  1110  0030                     _nBeeps:	
  1111  0030                     	ds	2
  1112  0032                     _delayTimer:	
  1113  0032                     	ds	2
  1114  0034                     _buzzerTransitionCount:	
  1115  0034                     	ds	2
  1116  0036                     _minuteTimer:	
  1117  0036                     	ds	2
  1118  0038                     _buzzerTimer:	
  1119  0038                     	ds	2
  1120  003A                     _runSMTimer:	
  1121  003A                     	ds	2
  1122  003C                     _initSMTimer:	
  1123  003C                     	ds	2
  1124  003E                     _beeperOn:	
  1125  003E                     	ds	1
  1126  003F                     _repeatedBeeping:	
  1127  003F                     	ds	1
  1128  0040                     _beeperToggle:	
  1129  0040                     	ds	1
  1130  0041                     _beeperTimer:	
  1131  0041                     	ds	1
  1132  0042                     _flashing:	
  1133  0042                     	ds	1
  1134  0043                     _flasherToggle:	
  1135  0043                     	ds	1
  1136  0044                     _LEDTimer:	
  1137  0044                     	ds	1
  1138  0045                     _errorCount:	
  1139  0045                     	ds	1
  1140  0046                     _runEvent:	
  1141  0046                     	ds	1
  1142  0047                     _runState:	
  1143  0047                     	ds	1
  1144  0048                     _initEvent:	
  1145  0048                     	ds	1
  1146  0049                     _initState:	
  1147  0049                     	ds	1
  1148                           
  1149                           	psect	dataBANK0
  1150  0060                     __pdataBANK0:	
  1151  0060                     _beepRate:	
  1152  0060                     	ds	2
  1153  0062                     _flashRate:	
  1154  0062                     	ds	2
  1155                           
  1156                           	psect	bssBANK1
  1157  00A0                     __pbssBANK1:	
  1158  00A0                     _timers:	
  1159  00A0                     	ds	20
  1160                           
  1161                           	psect	clrtext
  1162  06A5                     clear_ram0:	
  1163                           ;	Called with FSR0 containing the base address, and
  1164                           ;	WREG with the size to clear
  1165                           
  1166  06A5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1167  06A6                     clrloop0:	
  1168  06A6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1169  06A7  3101               	addfsr 0,1
  1170  06A8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1171  06A9  2EA6               	goto	clrloop0	;have we reached the end yet?
  1172  06AA  3400               	retlw	0	;all done for this memory range, return
  1173                           
  1174                           	psect	cstackCOMMON
  1175  0077                     __pcstackCOMMON:	
  1176  0077                     ?_init_NoAction:	
  1177  0077                     ?_initS1_Timeout:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0077                     ?_initS2_Timeout:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0077                     ?_init_Restart:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0077                     ?_initS3_greenHigh:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0077                     ?_initS4_greenLow:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0077                     ?_initS5_redHigh:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0077                     ?_initS6_redLow:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0077                     ?_initS7_bothHigh:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0077                     ?_initS8_bothLow:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0077                     ?_run_NoAction:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0077                     ?_run_Initialised:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0077                     ?_run_BeepReceived:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0077                     ?_run_GreenFlashing:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0077                     ?_run_GreenSteadyLow:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0077                     ?_timerLock:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0077                     ?_timerGet:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0077                     ?_longTimerGet:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0077                     ?_getInitEvent:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0077                     ?_getRunEvent:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0077                     ?_clearLED:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0077                     ?_longTimerLock:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0077                     ?_setLED:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0077                     ?_timerInterrupt:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0077                     ??_timerInterrupt:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0077                     ?_timer2Interrupt:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0077                     ??_timer2Interrupt:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0077                     ?_initialise:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0077                     ?_beeperService:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0077                     ?_hardwareInit:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0077                     ?_timerInit:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0077                     ?_beeperInit:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0077                     ?_initIOCInterrupt:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0077                     ?_IOCInterrupt:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0077                     ?_eventHandlerInit:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0077                     ?_eventHandlerService:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0077                     ?_multipleErrorEvent:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0077                     ?_initInterrupt:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0077                     ?_ISRCode:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0077                     ?_LEDInit:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0077                     ?_LEDService:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0077                     ?_kickWatchDog:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0077                     ?_main:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0077                     ?_timer2Init:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0077                     ?i1_timerSet:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0077                     ?i1_timerLock:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0077                     ??i1_timerLock:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0077                     i1timerLock@index:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0077                     i1timerSet@duration:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321                           
  1322                           ; 2 bytes @ 0x0
  1323  0077                     	ds	2
  1324  0079                     ??i1_timerSet:	
  1325  0079                     i1timerSet@index:	
  1326                           ; 1 bytes @ 0x2
  1327                           
  1328                           
  1329                           ; 1 bytes @ 0x2
  1330  0079                     	ds	1
  1331  007A                     ??_IOCInterrupt:	
  1332                           
  1333                           ; 1 bytes @ 0x3
  1334  007A                     	ds	2
  1335  007C                     timerInterrupt@i:	
  1336                           
  1337                           ; 1 bytes @ 0x5
  1338  007C                     	ds	1
  1339  007D                     ??_ISRCode:	
  1340                           
  1341                           ; 1 bytes @ 0x6
  1342  007D                     	ds	1
  1343                           
  1344                           	psect	cstackBANK0
  1345  004A                     __pcstackBANK0:	
  1346  004A                     ??_init_NoAction:	
  1347  004A                     ??_run_NoAction:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  004A                     ?_timerSet:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  004A                     ??_timerLock:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  004A                     ?_flashLED:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  004A                     ??_clearLED:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  004A                     ?_longTimerSet:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  004A                     ??_longTimerLock:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  004A                     ?_beepRepeatedly:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  004A                     ??_setLED:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  004A                     ??_hardwareInit:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  004A                     ??_timerInit:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  004A                     ??_initIOCInterrupt:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  004A                     ??_initInterrupt:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  004A                     ??_kickWatchDog:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  004A                     ??_timer2Init:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  004A                     ?_timerRead:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  004A                     ?___wmul:	
  1396                           ; 2 bytes @ 0x0
  1397                           
  1398  004A                     ?_longTimerRead:	
  1399                           ; 2 bytes @ 0x0
  1400                           
  1401  004A                     timerLock@index:	
  1402                           ; 4 bytes @ 0x0
  1403                           
  1404  004A                     flashLED@period:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  004A                     timerSet@duration:	
  1408                           ; 2 bytes @ 0x0
  1409                           
  1410  004A                     beepRepeatedly@period:	
  1411                           ; 2 bytes @ 0x0
  1412                           
  1413  004A                     ___wmul@multiplier:	
  1414                           ; 2 bytes @ 0x0
  1415                           
  1416  004A                     longTimerSet@duration:	
  1417                           ; 2 bytes @ 0x0
  1418                           
  1419                           
  1420                           ; 4 bytes @ 0x0
  1421  004A                     	ds	1
  1422  004B                     ??_run_Initialised:	
  1423  004B                     ??_timerGet:	
  1424                           ; 1 bytes @ 0x1
  1425                           
  1426  004B                     longTimerLock@index:	
  1427                           ; 1 bytes @ 0x1
  1428                           
  1429                           
  1430                           ; 1 bytes @ 0x1
  1431  004B                     	ds	1
  1432  004C                     ??_timerSet:	
  1433  004C                     ??_longTimerGet:	
  1434                           ; 1 bytes @ 0x2
  1435                           
  1436  004C                     ??_flashLED:	
  1437                           ; 1 bytes @ 0x2
  1438                           
  1439  004C                     timerGet@result:	
  1440                           ; 1 bytes @ 0x2
  1441                           
  1442  004C                     timerSet@index:	
  1443                           ; 1 bytes @ 0x2
  1444                           
  1445  004C                     beepRepeatedly@n:	
  1446                           ; 1 bytes @ 0x2
  1447                           
  1448  004C                     ___wmul@multiplicand:	
  1449                           ; 2 bytes @ 0x2
  1450                           
  1451                           
  1452                           ; 2 bytes @ 0x2
  1453  004C                     	ds	1
  1454  004D                     ??_initS1_Timeout:	
  1455  004D                     ??_initS2_Timeout:	
  1456                           ; 1 bytes @ 0x3
  1457                           
  1458  004D                     ??_init_Restart:	
  1459                           ; 1 bytes @ 0x3
  1460                           
  1461  004D                     ??_initS3_greenHigh:	
  1462                           ; 1 bytes @ 0x3
  1463                           
  1464  004D                     ??_initS4_greenLow:	
  1465                           ; 1 bytes @ 0x3
  1466                           
  1467  004D                     ??_initS5_redHigh:	
  1468                           ; 1 bytes @ 0x3
  1469                           
  1470  004D                     ??_initS6_redLow:	
  1471                           ; 1 bytes @ 0x3
  1472                           
  1473  004D                     ??_initS7_bothHigh:	
  1474                           ; 1 bytes @ 0x3
  1475                           
  1476  004D                     ??_initS8_bothLow:	
  1477                           ; 1 bytes @ 0x3
  1478                           
  1479  004D                     ??_run_GreenFlashing:	
  1480                           ; 1 bytes @ 0x3
  1481                           
  1482  004D                     ??_timerRead:	
  1483                           ; 1 bytes @ 0x3
  1484                           
  1485  004D                     ??_beeperInit:	
  1486                           ; 1 bytes @ 0x3
  1487                           
  1488  004D                     ??_LEDInit:	
  1489                           ; 1 bytes @ 0x3
  1490                           
  1491  004D                     longTimerGet@result:	
  1492                           ; 1 bytes @ 0x3
  1493                           
  1494  004D                     timerRead@result:	
  1495                           ; 1 bytes @ 0x3
  1496                           
  1497                           
  1498                           ; 2 bytes @ 0x3
  1499  004D                     	ds	1
  1500  004E                     ??_run_BeepReceived:	
  1501  004E                     ??_longTimerSet:	
  1502                           ; 1 bytes @ 0x4
  1503                           
  1504  004E                     ??_beepRepeatedly:	
  1505                           ; 1 bytes @ 0x4
  1506                           
  1507  004E                     ??_longTimerRead:	
  1508                           ; 1 bytes @ 0x4
  1509                           
  1510  004E                     ??_eventHandlerInit:	
  1511                           ; 1 bytes @ 0x4
  1512                           
  1513  004E                     ??_multipleErrorEvent:	
  1514                           ; 1 bytes @ 0x4
  1515                           
  1516  004E                     ??___wmul:	
  1517                           ; 1 bytes @ 0x4
  1518                           
  1519  004E                     ___wmul@product:	
  1520                           ; 1 bytes @ 0x4
  1521                           
  1522                           
  1523                           ; 2 bytes @ 0x4
  1524  004E                     	ds	1
  1525  004F                     timerRead@index:	
  1526  004F                     longTimerSet@index:	
  1527                           ; 1 bytes @ 0x5
  1528                           
  1529  004F                     longTimerRead@result:	
  1530                           ; 1 bytes @ 0x5
  1531                           
  1532                           
  1533                           ; 4 bytes @ 0x5
  1534  004F                     	ds	1
  1535  0050                     ??_run_GreenSteadyLow:	
  1536  0050                     ??_getInitEvent:	
  1537                           ; 1 bytes @ 0x6
  1538                           
  1539  0050                     ??_initialise:	
  1540                           ; 1 bytes @ 0x6
  1541                           
  1542  0050                     ??_beeperService:	
  1543                           ; 1 bytes @ 0x6
  1544                           
  1545  0050                     ??_LEDService:	
  1546                           ; 1 bytes @ 0x6
  1547                           
  1548                           
  1549                           ; 1 bytes @ 0x6
  1550  0050                     	ds	3
  1551  0053                     longTimerRead@index:	
  1552                           
  1553                           ; 1 bytes @ 0x9
  1554  0053                     	ds	1
  1555  0054                     ??_getRunEvent:	
  1556                           
  1557                           ; 1 bytes @ 0xA
  1558  0054                     	ds	4
  1559  0058                     ??_eventHandlerService:	
  1560                           
  1561                           ; 1 bytes @ 0xE
  1562  0058                     	ds	8
  1563  0060                     ??_main:	
  1564                           
  1565                           	psect	maintext
  1566  06AB                     __pmaintext:	
  1567                           ; 1 bytes @ 0x16
  1568 ;;
  1569 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1570 ;;
  1571 ;; *************** function _main *****************
  1572 ;; Defined at:
  1573 ;;		line 29 in file "../source/main.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : B1F/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1
  1587 ;;      Params:         0       0       0
  1588 ;;      Locals:         0       0       0
  1589 ;;      Temps:          0       0       0
  1590 ;;      Totals:         0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels required when called:    7
  1593 ;; This function calls:
  1594 ;;		_LEDService
  1595 ;;		_beeperService
  1596 ;;		_eventHandlerService
  1597 ;;		_initialise
  1598 ;;		_kickWatchDog
  1599 ;; This function is called by:
  1600 ;;		Startup code after reset
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function _main
  1606  06AB                     _main:	
  1607                           
  1608                           ;main.c: 31: initialise();
  1609                           
  1610                           ;incstack = 0
  1611                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1612  06AB  2585               	fcall	_initialise
  1613  06AC                     l2843:	
  1614                           ;main.c: 32: while( 1 )
  1615                           
  1616                           
  1617                           ;main.c: 33: {
  1618                           ;main.c: 34: eventHandlerService();
  1619  06AC  22D4               	fcall	_eventHandlerService
  1620                           
  1621                           ;main.c: 35: LEDService();
  1622  06AD  247C               	fcall	_LEDService
  1623                           
  1624                           ;main.c: 36: beeperService();
  1625  06AE  23CE               	fcall	_beeperService
  1626                           
  1627                           ;main.c: 37: kickWatchDog();
  1628  06AF  26C0               	fcall	_kickWatchDog
  1629  06B0  2EAC               	goto	l2843
  1630  06B1                     __end_of_main:	
  1631                           
  1632                           	psect	text1
  1633  06C0                     __ptext1:	
  1634 ;; *************** function _kickWatchDog *****************
  1635 ;; Defined at:
  1636 ;;		line 18 in file "../source/main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		None
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1
  1650 ;;      Params:         0       0       0
  1651 ;;      Locals:         0       0       0
  1652 ;;      Temps:          0       0       0
  1653 ;;      Totals:         0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    3
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           
  1665                           ;psect for function _kickWatchDog
  1666  06C0                     _kickWatchDog:	
  1667                           
  1668                           ;incstack = 0
  1669                           ; Regs used in _kickWatchDog: []
  1670  06C0  0064               	clrwdt	;# 
  1671  06C1  0008               	return
  1672  06C2                     __end_of_kickWatchDog:	
  1673                           
  1674                           	psect	text2
  1675  0585                     __ptext2:	
  1676 ;; *************** function _initialise *****************
  1677 ;; Defined at:
  1678 ;;		line 47 in file "../source/main.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1
  1692 ;;      Params:         0       0       0
  1693 ;;      Locals:         0       0       0
  1694 ;;      Temps:          0       0       0
  1695 ;;      Totals:         0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    6
  1699 ;; This function calls:
  1700 ;;		_LEDInit
  1701 ;;		_beepRepeatedly
  1702 ;;		_beeperInit
  1703 ;;		_clearLED
  1704 ;;		_eventHandlerInit
  1705 ;;		_hardwareInit
  1706 ;;		_initInterrupt
  1707 ;;		_timerInit
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           
  1714                           ;psect for function _initialise
  1715  0585                     _initialise:	
  1716                           
  1717                           ;main.c: 49: hardwareInit();
  1718                           
  1719                           ;incstack = 0
  1720                           ; Regs used in _initialise: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1721  0585  2423               	fcall	_hardwareInit
  1722                           
  1723                           ;main.c: 50: timerInit();
  1724  0586  2597               	fcall	_timerInit
  1725                           
  1726                           ;main.c: 51: eventHandlerInit();
  1727  0587  23A0               	fcall	_eventHandlerInit
  1728                           
  1729                           ;main.c: 52: LEDInit();
  1730  0588  267A               	fcall	_LEDInit
  1731                           
  1732                           ;main.c: 53: beeperInit();
  1733  0589  25A9               	fcall	_beeperInit
  1734                           
  1735                           ;main.c: 54: initInterrupt();
  1736  058A  26BD               	fcall	_initInterrupt
  1737                           
  1738                           ;main.c: 55: clearLED();
  1739  058B  26B5               	fcall	_clearLED
  1740                           
  1741                           ;main.c: 57: beepRepeatedly(200, 3);
  1742  058C  30C8               	movlw	200
  1743  058D  0020               	movlb	0	; select bank0
  1744  058E  00CA               	movwf	beepRepeatedly@period
  1745  058F  3000               	movlw	0
  1746  0590  00CB               	movwf	beepRepeatedly@period+1
  1747  0591  3003               	movlw	3
  1748  0592  00CC               	movwf	beepRepeatedly@n
  1749  0593  3000               	movlw	0
  1750  0594  00CD               	movwf	beepRepeatedly@n+1
  1751  0595  2519               	fcall	_beepRepeatedly
  1752  0596  0008               	return
  1753  0597                     __end_of_initialise:	
  1754                           
  1755                           	psect	text3
  1756  0597                     __ptext3:	
  1757 ;; *************** function _timerInit *****************
  1758 ;; Defined at:
  1759 ;;		line 28 in file "../source/timer.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		status,2
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1
  1773 ;;      Params:         0       0       0
  1774 ;;      Locals:         0       0       0
  1775 ;;      Temps:          0       0       0
  1776 ;;      Totals:         0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    3
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_initialise
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           
  1788                           ;psect for function _timerInit
  1789  0597                     _timerInit:	
  1790                           
  1791                           ;timer.c: 30: numTimers = 0;
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _timerInit: [status,2]
  1795  0597  01F6               	clrf	_numTimers
  1796                           
  1797                           ;timer.c: 31: numLongTimers = 0;
  1798  0598  01F5               	clrf	_numLongTimers
  1799                           
  1800                           ;timer.c: 33: T1GCONbits.TMR1GE = 0;
  1801  0599  0020               	movlb	0	; select bank0
  1802  059A  1399               	bcf	25,7	;volatile
  1803                           
  1804                           ;timer.c: 35: T1CONbits.TMR1CS1 = 0;
  1805  059B  1398               	bcf	24,7	;volatile
  1806                           
  1807                           ;timer.c: 36: T1CONbits.TMR1CS0 = 1;
  1808  059C  1718               	bsf	24,6	;volatile
  1809                           
  1810                           ;timer.c: 37: T1CONbits.T1CKPS1 = 0;
  1811  059D  1298               	bcf	24,5	;volatile
  1812                           
  1813                           ;timer.c: 38: T1CONbits.T1CKPS0 = 0;
  1814  059E  1218               	bcf	24,4	;volatile
  1815                           
  1816                           ;timer.c: 40: TMR1 = 32000;
  1817  059F  307D               	movlw	125
  1818  05A0  0097               	movwf	23	;volatile
  1819  05A1  3000               	movlw	0
  1820  05A2  0096               	movwf	22	;volatile
  1821                           
  1822                           ;timer.c: 42: PIE1bits.TMR1IE = 1;
  1823  05A3  0021               	movlb	1	; select bank1
  1824  05A4  1411               	bsf	17,0	;volatile
  1825                           
  1826                           ;timer.c: 44: INTCONbits.PEIE = 1;
  1827  05A5  170B               	bsf	11,6	;volatile
  1828                           
  1829                           ;timer.c: 45: T1CONbits.TMR1ON = 1;
  1830  05A6  0020               	movlb	0	; select bank0
  1831  05A7  1418               	bsf	24,0	;volatile
  1832  05A8  0008               	return
  1833  05A9                     __end_of_timerInit:	
  1834                           
  1835                           	psect	text4
  1836  06BD                     __ptext4:	
  1837 ;; *************** function _initInterrupt *****************
  1838 ;; Defined at:
  1839 ;;		line 16 in file "../source/interrupt.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		None
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1
  1853 ;;      Params:         0       0       0
  1854 ;;      Locals:         0       0       0
  1855 ;;      Temps:          0       0       0
  1856 ;;      Totals:         0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    3
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_initialise
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _initInterrupt
  1869  06BD                     _initInterrupt:	
  1870                           
  1871                           ;interrupt.c: 18: INTCONbits.PEIE = 1;
  1872                           
  1873                           ;incstack = 0
  1874                           ; Regs used in _initInterrupt: []
  1875  06BD  170B               	bsf	11,6	;volatile
  1876                           
  1877                           ;interrupt.c: 19: INTCONbits.GIE = 1;
  1878  06BE  178B               	bsf	11,7	;volatile
  1879  06BF  0008               	return
  1880  06C0                     __end_of_initInterrupt:	
  1881                           
  1882                           	psect	text5
  1883  0423                     __ptext5:	
  1884 ;; *************** function _hardwareInit *****************
  1885 ;; Defined at:
  1886 ;;		line 66 in file "../source/main.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1
  1900 ;;      Params:         0       0       0
  1901 ;;      Locals:         0       0       0
  1902 ;;      Temps:          0       0       0
  1903 ;;      Totals:         0       0       0
  1904 ;;Total ram usage:        0 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    3
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_initialise
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           
  1915                           ;psect for function _hardwareInit
  1916  0423                     _hardwareInit:	
  1917                           
  1918                           ;main.c: 68: OSCCONbits.SCS = 0;
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _hardwareInit: [wreg+status,2+status,0]
  1922  0423  30FC               	movlw	-4
  1923  0424  0021               	movlb	1	; select bank1
  1924  0425  0599               	andwf	25,f	;volatile
  1925                           
  1926                           ;main.c: 69: OSCCONbits.IRCF = 0xE;
  1927  0426  0819               	movf	25,w	;volatile
  1928  0427  3987               	andlw	-121
  1929  0428  3870               	iorlw	112
  1930  0429  0099               	movwf	25	;volatile
  1931                           
  1932                           ;main.c: 70: OSCCONbits.SPLLEN = 1;
  1933  042A  1799               	bsf	25,7	;volatile
  1934                           
  1935                           ;main.c: 72: TRISAbits.TRISA5 = 0;
  1936  042B  128C               	bcf	12,5	;volatile
  1937                           
  1938                           ;main.c: 74: TRISAbits.TRISA1 = 0;
  1939  042C  108C               	bcf	12,1	;volatile
  1940                           
  1941                           ;main.c: 75: ANSELAbits.ANSA1 = 0;
  1942  042D  0023               	movlb	3	; select bank3
  1943  042E  108C               	bcf	12,1	;volatile
  1944                           
  1945                           ;main.c: 76: LATAbits.LATA1 = 0;
  1946  042F  0022               	movlb	2	; select bank2
  1947  0430  108C               	bcf	12,1	;volatile
  1948                           
  1949                           ;main.c: 78: TRISAbits.TRISA3 = 1;
  1950  0431  0021               	movlb	1	; select bank1
  1951  0432  158C               	bsf	12,3	;volatile
  1952                           
  1953                           ;main.c: 80: TRISAbits.TRISA0 = 0;
  1954  0433  100C               	bcf	12,0	;volatile
  1955                           
  1956                           ;main.c: 81: ANSELAbits.ANSA0 = 0;
  1957  0434  0023               	movlb	3	; select bank3
  1958  0435  100C               	bcf	12,0	;volatile
  1959                           
  1960                           ;main.c: 82: LATAbits.LATA0 = 1;
  1961  0436  0022               	movlb	2	; select bank2
  1962  0437  140C               	bsf	12,0	;volatile
  1963                           
  1964                           ;main.c: 84: TRISAbits.TRISA4 = 1;
  1965  0438  0021               	movlb	1	; select bank1
  1966  0439  160C               	bsf	12,4	;volatile
  1967                           
  1968                           ;main.c: 85: ANSELAbits.ANSA4 = 0;
  1969  043A  0023               	movlb	3	; select bank3
  1970  043B  120C               	bcf	12,4	;volatile
  1971                           
  1972                           ;main.c: 87: TRISAbits.TRISA2 = 1;
  1973  043C  0021               	movlb	1	; select bank1
  1974  043D  150C               	bsf	12,2	;volatile
  1975                           
  1976                           ;main.c: 88: ANSELAbits.ANSA2 = 0;
  1977  043E  0023               	movlb	3	; select bank3
  1978  043F  110C               	bcf	12,2	;volatile
  1979                           
  1980                           ;main.c: 91: WDTCONbits.SWDTEN = 1;
  1981  0440  0021               	movlb	1	; select bank1
  1982  0441  1417               	bsf	23,0	;volatile
  1983  0442  0008               	return
  1984  0443                     __end_of_hardwareInit:	
  1985                           
  1986                           	psect	text6
  1987  03A0                     __ptext6:	
  1988 ;; *************** function _eventHandlerInit *****************
  1989 ;; Defined at:
  1990 ;;		line 108 in file "../source/eventhandler.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1
  2004 ;;      Params:         0       0       0
  2005 ;;      Locals:         0       0       0
  2006 ;;      Temps:          0       2       0
  2007 ;;      Totals:         0       2       0
  2008 ;;Total ram usage:        2 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    5
  2011 ;; This function calls:
  2012 ;;		_initIOCInterrupt
  2013 ;;		_init_Restart
  2014 ;;		_longTimerGet
  2015 ;;		_timerGet
  2016 ;;		_timerSet
  2017 ;; This function is called by:
  2018 ;;		_initialise
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _eventHandlerInit
  2024  03A0                     _eventHandlerInit:	
  2025                           
  2026                           ;eventhandler.c: 110: eventHandlerTimer = timerGet ();
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _eventHandlerInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2030  03A0  2602               	fcall	_timerGet
  2031  03A1  0020               	movlb	0	; select bank0
  2032  03A2  00CE               	movwf	??_eventHandlerInit
  2033  03A3  084E               	movf	??_eventHandlerInit,w
  2034  03A4  00E4               	movwf	_eventHandlerTimer
  2035                           
  2036                           ;eventhandler.c: 111: timerSet( eventHandlerTimer, 10 );
  2037  03A5  300A               	movlw	10
  2038  03A6  00CA               	movwf	timerSet@duration
  2039  03A7  3000               	movlw	0
  2040  03A8  00CB               	movwf	timerSet@duration+1
  2041  03A9  0864               	movf	_eventHandlerTimer,w
  2042  03AA  25E5               	fcall	_timerSet
  2043                           
  2044                           ;eventhandler.c: 112: initIOCInterrupt();
  2045  03AB  2686               	fcall	_initIOCInterrupt
  2046                           
  2047                           ;eventhandler.c: 113: buzzerTimer = timerGet();
  2048  03AC  2602               	fcall	_timerGet
  2049  03AD  0020               	movlb	0	; select bank0
  2050  03AE  00CE               	movwf	??_eventHandlerInit
  2051  03AF  01CF               	clrf	??_eventHandlerInit+1
  2052  03B0  084E               	movf	??_eventHandlerInit,w
  2053  03B1  00B8               	movwf	_buzzerTimer
  2054  03B2  084F               	movf	??_eventHandlerInit+1,w
  2055  03B3  00B9               	movwf	_buzzerTimer+1
  2056                           
  2057                           ;eventhandler.c: 114: initSMTimer = timerGet();
  2058  03B4  2602               	fcall	_timerGet
  2059  03B5  0020               	movlb	0	; select bank0
  2060  03B6  00CE               	movwf	??_eventHandlerInit
  2061  03B7  01CF               	clrf	??_eventHandlerInit+1
  2062  03B8  084E               	movf	??_eventHandlerInit,w
  2063  03B9  00BC               	movwf	_initSMTimer
  2064  03BA  084F               	movf	??_eventHandlerInit+1,w
  2065  03BB  00BD               	movwf	_initSMTimer+1
  2066                           
  2067                           ;eventhandler.c: 115: runSMTimer = timerGet();
  2068  03BC  2602               	fcall	_timerGet
  2069  03BD  0020               	movlb	0	; select bank0
  2070  03BE  00CE               	movwf	??_eventHandlerInit
  2071  03BF  01CF               	clrf	??_eventHandlerInit+1
  2072  03C0  084E               	movf	??_eventHandlerInit,w
  2073  03C1  00BA               	movwf	_runSMTimer
  2074  03C2  084F               	movf	??_eventHandlerInit+1,w
  2075  03C3  00BB               	movwf	_runSMTimer+1
  2076                           
  2077                           ;eventhandler.c: 116: minuteTimer = longTimerGet();
  2078  03C4  25F4               	fcall	_longTimerGet
  2079  03C5  0020               	movlb	0	; select bank0
  2080  03C6  00CE               	movwf	??_eventHandlerInit
  2081  03C7  01CF               	clrf	??_eventHandlerInit+1
  2082  03C8  084E               	movf	??_eventHandlerInit,w
  2083  03C9  00B6               	movwf	_minuteTimer
  2084  03CA  084F               	movf	??_eventHandlerInit+1,w
  2085  03CB  00B7               	movwf	_minuteTimer+1
  2086                           
  2087                           ;eventhandler.c: 117: init_Restart();
  2088  03CC  2547               	fcall	_init_Restart
  2089  03CD  0008               	return
  2090  03CE                     __end_of_eventHandlerInit:	
  2091                           
  2092                           	psect	text7
  2093  05F4                     __ptext7:	
  2094 ;; *************** function _longTimerGet *****************
  2095 ;; Defined at:
  2096 ;;		line 189 in file "../source/timer.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  result          1    3[BANK0 ] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1
  2110 ;;      Params:         0       0       0
  2111 ;;      Locals:         0       1       0
  2112 ;;      Temps:          0       1       0
  2113 ;;      Totals:         0       2       0
  2114 ;;Total ram usage:        2 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    4
  2117 ;; This function calls:
  2118 ;;		_longTimerLock
  2119 ;; This function is called by:
  2120 ;;		_eventHandlerInit
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _longTimerGet
  2126  05F4                     _longTimerGet:	
  2127                           
  2128                           ;timer.c: 191: LTTimerIndex result;
  2129                           ;timer.c: 193: result = numLongTimers;
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _longTimerGet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2133  05F4  0875               	movf	_numLongTimers,w
  2134  05F5  0020               	movlb	0	; select bank0
  2135  05F6  00CC               	movwf	??_longTimerGet
  2136  05F7  084C               	movf	??_longTimerGet,w
  2137  05F8  00CD               	movwf	longTimerGet@result
  2138                           
  2139                           ;timer.c: 194: numLongTimers++;
  2140  05F9  3001               	movlw	1
  2141  05FA  00CC               	movwf	??_longTimerGet
  2142  05FB  084C               	movf	??_longTimerGet,w
  2143  05FC  07F5               	addwf	_numLongTimers,f
  2144                           
  2145                           ;timer.c: 195: longTimerLock( result );
  2146  05FD  084D               	movf	longTimerGet@result,w
  2147  05FE  24E5               	fcall	_longTimerLock
  2148                           
  2149                           ;timer.c: 196: return ( result );
  2150  05FF  0020               	movlb	0	; select bank0
  2151  0600  084D               	movf	longTimerGet@result,w
  2152  0601  0008               	return
  2153  0602                     __end_of_longTimerGet:	
  2154                           
  2155                           	psect	text8
  2156  0686                     __ptext8:	
  2157 ;; *************** function _initIOCInterrupt *****************
  2158 ;; Defined at:
  2159 ;;		line 42 in file "../source/eventhandler.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		None
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1
  2173 ;;      Params:         0       0       0
  2174 ;;      Locals:         0       0       0
  2175 ;;      Temps:          0       0       0
  2176 ;;      Totals:         0       0       0
  2177 ;;Total ram usage:        0 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    3
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_eventHandlerInit
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _initIOCInterrupt
  2189  0686                     _initIOCInterrupt:	
  2190                           
  2191                           ;eventhandler.c: 44: INTCONbits.GIE = 1;
  2192                           
  2193                           ;incstack = 0
  2194                           ; Regs used in _initIOCInterrupt: []
  2195  0686  178B               	bsf	11,7	;volatile
  2196                           
  2197                           ;eventhandler.c: 45: IOCANbits.IOCAN3 = 1;
  2198  0687  0027               	movlb	7	; select bank7
  2199  0688  1592               	bsf	18,3	;volatile
  2200                           
  2201                           ;eventhandler.c: 46: IOCANbits.IOCAN2 = 1;
  2202  0689  1512               	bsf	18,2	;volatile
  2203                           
  2204                           ;eventhandler.c: 47: IOCAPbits.IOCAP2 = 1;
  2205  068A  1511               	bsf	17,2	;volatile
  2206                           
  2207                           ;eventhandler.c: 48: IOCANbits.IOCAN4 = 1;
  2208  068B  1612               	bsf	18,4	;volatile
  2209                           
  2210                           ;eventhandler.c: 49: IOCAPbits.IOCAP4 = 1;
  2211  068C  1611               	bsf	17,4	;volatile
  2212                           
  2213                           ;eventhandler.c: 50: INTCONbits.IOCIF = 0;
  2214  068D  100B               	bcf	11,0	;volatile
  2215                           
  2216                           ;eventhandler.c: 51: INTCONbits.IOCIE = 1;
  2217  068E  158B               	bsf	11,3	;volatile
  2218                           
  2219                           ;eventhandler.c: 52: INTCONbits.PEIE = 1;
  2220  068F  170B               	bsf	11,6	;volatile
  2221  0690  0008               	return
  2222  0691                     __end_of_initIOCInterrupt:	
  2223                           
  2224                           	psect	text9
  2225  05A9                     __ptext9:	
  2226 ;; *************** function _beeperInit *****************
  2227 ;; Defined at:
  2228 ;;		line 95 in file "../source/beeper.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1
  2242 ;;      Params:         0       0       0
  2243 ;;      Locals:         0       0       0
  2244 ;;      Temps:          0       1       0
  2245 ;;      Totals:         0       1       0
  2246 ;;Total ram usage:        1 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    5
  2249 ;; This function calls:
  2250 ;;		_timer2Init
  2251 ;;		_timerGet
  2252 ;;		_timerSet
  2253 ;; This function is called by:
  2254 ;;		_initialise
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _beeperInit
  2260  05A9                     _beeperInit:	
  2261                           
  2262                           ;beeper.c: 97: timer2Init();
  2263                           
  2264                           ;incstack = 0
  2265                           ; Regs used in _beeperInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2266  05A9  25B8               	fcall	_timer2Init
  2267                           
  2268                           ;beeper.c: 98: beeperOn = 0;
  2269  05AA  0020               	movlb	0	; select bank0
  2270  05AB  01BE               	clrf	_beeperOn
  2271                           
  2272                           ;beeper.c: 99: beeperTimer = timerGet ();
  2273  05AC  2602               	fcall	_timerGet
  2274  05AD  0020               	movlb	0	; select bank0
  2275  05AE  00CD               	movwf	??_beeperInit
  2276  05AF  084D               	movf	??_beeperInit,w
  2277  05B0  00C1               	movwf	_beeperTimer
  2278                           
  2279                           ;beeper.c: 100: timerSet( beeperTimer, beepRate );
  2280  05B1  0861               	movf	_beepRate+1,w
  2281  05B2  00CB               	movwf	timerSet@duration+1
  2282  05B3  0860               	movf	_beepRate,w
  2283  05B4  00CA               	movwf	timerSet@duration
  2284  05B5  0841               	movf	_beeperTimer,w
  2285  05B6  25E5               	fcall	_timerSet
  2286  05B7  0008               	return
  2287  05B8                     __end_of_beeperInit:	
  2288                           
  2289                           	psect	text10
  2290  05B8                     __ptext10:	
  2291 ;; *************** function _timer2Init *****************
  2292 ;; Defined at:
  2293 ;;		line 29 in file "../source/beeper.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1
  2307 ;;      Params:         0       0       0
  2308 ;;      Locals:         0       0       0
  2309 ;;      Temps:          0       0       0
  2310 ;;      Totals:         0       0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    3
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_beeperInit
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _timer2Init
  2323  05B8                     _timer2Init:	
  2324                           
  2325                           ;beeper.c: 32: T2CONbits.T2CKPS = 0b00;
  2326                           
  2327                           ;incstack = 0
  2328                           ; Regs used in _timer2Init: [wreg+status,2+status,0]
  2329  05B8  30FC               	movlw	-4
  2330  05B9  0020               	movlb	0	; select bank0
  2331  05BA  059C               	andwf	28,f	;volatile
  2332                           
  2333                           ;beeper.c: 33: T2CONbits.T2OUTPS = 0b0111;;
  2334  05BB  081C               	movf	28,w	;volatile
  2335  05BC  3987               	andlw	-121
  2336  05BD  3838               	iorlw	56
  2337  05BE  009C               	movwf	28	;volatile
  2338                           
  2339                           ;beeper.c: 35: PR2 = 0x65;
  2340  05BF  3065               	movlw	101
  2341  05C0  009B               	movwf	27	;volatile
  2342                           
  2343                           ;beeper.c: 37: PIE1bits.TMR2IE = 1;
  2344  05C1  0021               	movlb	1	; select bank1
  2345  05C2  1491               	bsf	17,1	;volatile
  2346                           
  2347                           ;beeper.c: 39: INTCONbits.PEIE = 1;
  2348  05C3  170B               	bsf	11,6	;volatile
  2349                           
  2350                           ;beeper.c: 40: T2CONbits.TMR2ON = 1;
  2351  05C4  0020               	movlb	0	; select bank0
  2352  05C5  151C               	bsf	28,2	;volatile
  2353  05C6  0008               	return
  2354  05C7                     __end_of_timer2Init:	
  2355                           
  2356                           	psect	text11
  2357  067A                     __ptext11:	
  2358 ;; *************** function _LEDInit *****************
  2359 ;; Defined at:
  2360 ;;		line 40 in file "../source/LED.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1
  2374 ;;      Params:         0       0       0
  2375 ;;      Locals:         0       0       0
  2376 ;;      Temps:          0       1       0
  2377 ;;      Totals:         0       1       0
  2378 ;;Total ram usage:        1 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    5
  2381 ;; This function calls:
  2382 ;;		_timerGet
  2383 ;;		_timerSet
  2384 ;; This function is called by:
  2385 ;;		_initialise
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function _LEDInit
  2391  067A                     _LEDInit:	
  2392                           
  2393                           ;LED.c: 42: LEDTimer = timerGet ();
  2394                           
  2395                           ;incstack = 0
  2396                           ; Regs used in _LEDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2397  067A  2602               	fcall	_timerGet
  2398  067B  0020               	movlb	0	; select bank0
  2399  067C  00CD               	movwf	??_LEDInit
  2400  067D  084D               	movf	??_LEDInit,w
  2401  067E  00C4               	movwf	_LEDTimer
  2402                           
  2403                           ;LED.c: 44: timerSet( LEDTimer, flashRate );
  2404  067F  0863               	movf	_flashRate+1,w
  2405  0680  00CB               	movwf	timerSet@duration+1
  2406  0681  0862               	movf	_flashRate,w
  2407  0682  00CA               	movwf	timerSet@duration
  2408  0683  0844               	movf	_LEDTimer,w
  2409  0684  25E5               	fcall	_timerSet
  2410  0685  0008               	return
  2411  0686                     __end_of_LEDInit:	
  2412                           
  2413                           	psect	text12
  2414  0602                     __ptext12:	
  2415 ;; *************** function _timerGet *****************
  2416 ;; Defined at:
  2417 ;;		line 104 in file "../source/timer.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  result          1    2[BANK0 ] unsigned char 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      unsigned char 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1
  2431 ;;      Params:         0       0       0
  2432 ;;      Locals:         0       1       0
  2433 ;;      Temps:          0       1       0
  2434 ;;      Totals:         0       2       0
  2435 ;;Total ram usage:        2 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    4
  2438 ;; This function calls:
  2439 ;;		_timerLock
  2440 ;; This function is called by:
  2441 ;;		_eventHandlerInit
  2442 ;;		_LEDInit
  2443 ;;		_beeperInit
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function _timerGet
  2449  0602                     _timerGet:	
  2450                           
  2451                           ;timer.c: 106: TTimerIndex result;
  2452                           ;timer.c: 108: result = numTimers;
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _timerGet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2456  0602  0876               	movf	_numTimers,w
  2457  0603  0020               	movlb	0	; select bank0
  2458  0604  00CB               	movwf	??_timerGet
  2459  0605  084B               	movf	??_timerGet,w
  2460  0606  00CC               	movwf	timerGet@result
  2461                           
  2462                           ;timer.c: 109: numTimers++;
  2463  0607  3001               	movlw	1
  2464  0608  00CB               	movwf	??_timerGet
  2465  0609  084B               	movf	??_timerGet,w
  2466  060A  07F6               	addwf	_numTimers,f
  2467                           
  2468                           ;timer.c: 110: timerLock( result );
  2469  060B  084C               	movf	timerGet@result,w
  2470  060C  25D6               	fcall	_timerLock
  2471                           
  2472                           ;timer.c: 111: return ( result );
  2473  060D  0020               	movlb	0	; select bank0
  2474  060E  084C               	movf	timerGet@result,w
  2475  060F  0008               	return
  2476  0610                     __end_of_timerGet:	
  2477                           
  2478                           	psect	text13
  2479  02D4                     __ptext13:	
  2480 ;; *************** function _eventHandlerService *****************
  2481 ;; Defined at:
  2482 ;;		line 121 in file "../source/eventhandler.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1
  2496 ;;      Params:         0       0       0
  2497 ;;      Locals:         0       0       0
  2498 ;;      Temps:          0       8       0
  2499 ;;      Totals:         0       8       0
  2500 ;;Total ram usage:        8 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    6
  2503 ;; This function calls:
  2504 ;;		___wmul
  2505 ;;		_getInitEvent
  2506 ;;		_getRunEvent
  2507 ;;		_initS1_Timeout
  2508 ;;		_initS2_Timeout
  2509 ;;		_initS3_greenHigh
  2510 ;;		_initS4_greenLow
  2511 ;;		_initS5_redHigh
  2512 ;;		_initS6_redLow
  2513 ;;		_initS7_bothHigh
  2514 ;;		_initS8_bothLow
  2515 ;;		_init_NoAction
  2516 ;;		_init_Restart
  2517 ;;		_run_BeepReceived
  2518 ;;		_run_GreenFlashing
  2519 ;;		_run_GreenSteadyLow
  2520 ;;		_run_Initialised
  2521 ;;		_run_NoAction
  2522 ;;		_timerRead
  2523 ;;		_timerSet
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function _eventHandlerService
  2531  02D4                     _eventHandlerService:	
  2532                           
  2533                           ;eventhandler.c: 123: if ( timerRead(eventHandlerTimer) == 0 )
  2534                           
  2535                           ;incstack = 0
  2536                           ; Regs used in _eventHandlerService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2537  02D4  0020               	movlb	0	; select bank0
  2538  02D5  0864               	movf	_eventHandlerTimer,w
  2539  02D6  2530               	fcall	_timerRead
  2540  02D7  0020               	movlb	0	; select bank0
  2541  02D8  084A               	movf	?_timerRead,w
  2542  02D9  044B               	iorwf	?_timerRead+1,w
  2543  02DA  1D03               	btfss	3,2
  2544  02DB  0008               	return
  2545                           
  2546                           ;eventhandler.c: 124: {
  2547                           ;eventhandler.c: 125: if (initState != initialised)
  2548  02DC  3008               	movlw	8
  2549  02DD  0649               	xorwf	_initState,w
  2550  02DE  1903               	btfsc	3,2
  2551  02DF  2B14               	goto	l2783
  2552                           
  2553                           ;eventhandler.c: 126: {
  2554                           ;eventhandler.c: 127: initEvent = getInitEvent();
  2555  02E0  2241               	fcall	_getInitEvent
  2556  02E1  0020               	movlb	0	; select bank0
  2557  02E2  00D8               	movwf	??_eventHandlerService
  2558  02E3  0858               	movf	??_eventHandlerService,w
  2559  02E4  00C8               	movwf	_initEvent
  2560                           
  2561                           ;eventhandler.c: 129: if (((initEvent >= 0) && (initEvent < maxInitEvents))
  2562                           ;eventhandler.c: 130: && ((initState >= 0) && (initState < maxInitStates)))
  2563  02E5  3008               	movlw	8
  2564  02E6  0248               	subwf	_initEvent,w
  2565  02E7  1803               	skipnc
  2566  02E8  2B49               	goto	l2791
  2567  02E9  3009               	movlw	9
  2568  02EA  0249               	subwf	_initState,w
  2569  02EB  1803               	skipnc
  2570  02EC  2B49               	goto	l2791
  2571                           
  2572                           ;eventhandler.c: 131: {
  2573                           ;eventhandler.c: 132: initStateTable [initState][initEvent]();
  2574  02ED  0848               	movf	_initEvent,w
  2575  02EE  00D8               	movwf	??_eventHandlerService
  2576  02EF  01D9               	clrf	??_eventHandlerService+1
  2577  02F0  35D8               	lslf	??_eventHandlerService,f
  2578  02F1  0DD9               	rlf	??_eventHandlerService+1,f
  2579  02F2  0849               	movf	_initState,w
  2580  02F3  00DA               	movwf	??_eventHandlerService+2
  2581  02F4  01DB               	clrf	??_eventHandlerService+3
  2582  02F5  0EDA               	swapf	??_eventHandlerService+2,f
  2583  02F6  0EDB               	swapf	??_eventHandlerService+3,f
  2584  02F7  30F0               	movlw	240
  2585  02F8  05DB               	andwf	??_eventHandlerService+3,f
  2586  02F9  085A               	movf	??_eventHandlerService+2,w
  2587  02FA  390F               	andlw	15
  2588  02FB  04DB               	iorwf	??_eventHandlerService+3,f
  2589  02FC  30F0               	movlw	240
  2590  02FD  05DA               	andwf	??_eventHandlerService+2,f
  2591  02FE  3030               	movlw	low (_initStateTable| (0+32768))
  2592  02FF  00DC               	movwf	??_eventHandlerService+4
  2593  0300  3080               	movlw	high (_initStateTable| (0+32768))
  2594  0301  00DD               	movwf	??_eventHandlerService+5
  2595  0302  085A               	movf	??_eventHandlerService+2,w
  2596  0303  075C               	addwf	??_eventHandlerService+4,w
  2597  0304  00DE               	movwf	??_eventHandlerService+6
  2598  0305  085B               	movf	??_eventHandlerService+3,w
  2599  0306  3D5D               	addwfc	??_eventHandlerService+5,w
  2600  0307  00DF               	movwf	??_eventHandlerService+7
  2601  0308  085E               	movf	??_eventHandlerService+6,w
  2602  0309  0758               	addwf	??_eventHandlerService,w
  2603  030A  0084               	movwf	4
  2604  030B  085F               	movf	??_eventHandlerService+7,w
  2605  030C  3D59               	addwfc	??_eventHandlerService+1,w
  2606  030D  0085               	movwf	5
  2607  030E  3F01               	moviw [1]fsr0
  2608  030F  008A               	movwf	10
  2609  0310  3F00               	moviw [0]fsr0
  2610  0311  000A               	callw
  2611  0312  3182               	pagesel	$
  2612  0313  2B4A               	goto	l134
  2613  0314                     l2783:	
  2614                           ;eventhandler.c: 138: }
  2615                           ;eventhandler.c: 139: }
  2616                           
  2617                           ;eventhandler.c: 134: else
  2618                           ;eventhandler.c: 135: {
  2619                           ;eventhandler.c: 137: init_Restart();
  2620                           
  2621                           ;eventhandler.c: 133: }
  2622                           
  2623                           
  2624                           ;eventhandler.c: 140: else
  2625                           ;eventhandler.c: 141: {
  2626                           ;eventhandler.c: 142: runEvent = getRunEvent();
  2627  0314  20F8               	fcall	_getRunEvent
  2628  0315  0020               	movlb	0	; select bank0
  2629  0316  00D8               	movwf	??_eventHandlerService
  2630  0317  0858               	movf	??_eventHandlerService,w
  2631  0318  00C6               	movwf	_runEvent
  2632                           
  2633                           ;eventhandler.c: 144: if (((runEvent >= 0) && (runEvent < maxRunEvents))
  2634                           ;eventhandler.c: 145: && ((runState >= 0) && (runState < maxRunStates)))
  2635  0319  3007               	movlw	7
  2636  031A  0246               	subwf	_runEvent,w
  2637  031B  1803               	skipnc
  2638  031C  2B49               	goto	l2791
  2639  031D  3004               	movlw	4
  2640  031E  0247               	subwf	_runState,w
  2641  031F  1803               	skipnc
  2642  0320  2B49               	goto	l2791
  2643                           
  2644                           ;eventhandler.c: 146: {
  2645                           ;eventhandler.c: 147: runStateTable [runState][runEvent]();
  2646  0321  0846               	movf	_runEvent,w
  2647  0322  00D8               	movwf	??_eventHandlerService
  2648  0323  01D9               	clrf	??_eventHandlerService+1
  2649  0324  35D8               	lslf	??_eventHandlerService,f
  2650  0325  0DD9               	rlf	??_eventHandlerService+1,f
  2651  0326  0847               	movf	_runState,w
  2652  0327  00DA               	movwf	??_eventHandlerService+2
  2653  0328  01DB               	clrf	??_eventHandlerService+3
  2654  0329  085A               	movf	??_eventHandlerService+2,w
  2655  032A  00CA               	movwf	___wmul@multiplier
  2656  032B  085B               	movf	??_eventHandlerService+3,w
  2657  032C  00CB               	movwf	___wmul@multiplier+1
  2658  032D  300E               	movlw	14
  2659  032E  00CC               	movwf	___wmul@multiplicand
  2660  032F  3000               	movlw	0
  2661  0330  00CD               	movwf	___wmul@multiplicand+1
  2662  0331  2460               	fcall	___wmul
  2663  0332  30C0               	movlw	low (_runStateTable| (0+32768))
  2664  0333  0020               	movlb	0	; select bank0
  2665  0334  00DC               	movwf	??_eventHandlerService+4
  2666  0335  3080               	movlw	high (_runStateTable| (0+32768))
  2667  0336  00DD               	movwf	??_eventHandlerService+5
  2668  0337  084A               	movf	?___wmul,w
  2669  0338  075C               	addwf	??_eventHandlerService+4,w
  2670  0339  00DE               	movwf	??_eventHandlerService+6
  2671  033A  084B               	movf	?___wmul+1,w
  2672  033B  3D5D               	addwfc	??_eventHandlerService+5,w
  2673  033C  00DF               	movwf	??_eventHandlerService+7
  2674  033D  085E               	movf	??_eventHandlerService+6,w
  2675  033E  0758               	addwf	??_eventHandlerService,w
  2676  033F  0084               	movwf	4
  2677  0340  085F               	movf	??_eventHandlerService+7,w
  2678  0341  3D59               	addwfc	??_eventHandlerService+1,w
  2679  0342  0085               	movwf	5
  2680  0343  3F01               	moviw [1]fsr0
  2681  0344  008A               	movwf	10
  2682  0345  3F00               	moviw [0]fsr0
  2683  0346  000A               	callw
  2684  0347  3182               	pagesel	$
  2685                           
  2686                           ;eventhandler.c: 148: }
  2687  0348  2B4A               	goto	l134
  2688  0349                     l2791:	
  2689                           
  2690                           ;eventhandler.c: 149: else
  2691                           ;eventhandler.c: 150: {
  2692                           ;eventhandler.c: 152: init_Restart();
  2693  0349  2547               	fcall	_init_Restart
  2694  034A                     l134:	
  2695                           
  2696                           ;eventhandler.c: 153: }
  2697                           ;eventhandler.c: 154: }
  2698                           ;eventhandler.c: 155: timerSet( eventHandlerTimer, 10 );
  2699  034A  300A               	movlw	10
  2700  034B  0020               	movlb	0	; select bank0
  2701  034C  00CA               	movwf	timerSet@duration
  2702  034D  3000               	movlw	0
  2703  034E  00CB               	movwf	timerSet@duration+1
  2704  034F  0864               	movf	_eventHandlerTimer,w
  2705  0350  25E5               	fcall	_timerSet
  2706  0351  0008               	return
  2707  0352                     __end_of_eventHandlerService:	
  2708                           
  2709                           	psect	text14
  2710  055D                     __ptext14:	
  2711 ;; *************** function _initS8_bothLow *****************
  2712 ;; Defined at:
  2713 ;;		line 227 in file "../source/eventhandler.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1
  2727 ;;      Params:         0       0       0
  2728 ;;      Locals:         0       0       0
  2729 ;;      Temps:          0       1       0
  2730 ;;      Totals:         0       1       0
  2731 ;;Total ram usage:        1 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    4
  2734 ;; This function calls:
  2735 ;;		_timerLock
  2736 ;;		_timerSet
  2737 ;; This function is called by:
  2738 ;;		_eventHandlerService
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           
  2743                           ;psect for function _initS8_bothLow
  2744  055D                     _initS8_bothLow:	
  2745                           
  2746                           ;eventhandler.c: 229: timerLock( initSMTimer );
  2747                           
  2748                           ;incstack = 0
  2749                           ; Regs used in _initS8_bothLow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2750  055D  0020               	movlb	0	; select bank0
  2751  055E  083C               	movf	_initSMTimer,w
  2752  055F  25D6               	fcall	_timerLock
  2753                           
  2754                           ;eventhandler.c: 230: initState = initialised;
  2755  0560  3008               	movlw	8
  2756  0561  0020               	movlb	0	; select bank0
  2757  0562  00CD               	movwf	??_initS8_bothLow
  2758  0563  084D               	movf	??_initS8_bothLow,w
  2759  0564  00C9               	movwf	_initState
  2760                           
  2761                           ;eventhandler.c: 231: chargerInitialised.eventFlag = !0;
  2762  0565  01A4               	clrf	_chargerInitialised
  2763  0566  0AA4               	incf	_chargerInitialised,f
  2764                           
  2765                           ;eventhandler.c: 232: chargerInitialised.eventTime = systick;
  2766  0567  0874               	movf	_systick+1,w
  2767  0568  00A6               	movwf	_chargerInitialised+2
  2768  0569  0873               	movf	_systick,w
  2769  056A  00A5               	movwf	_chargerInitialised+1
  2770                           
  2771                           ;eventhandler.c: 233: timerSet( runSMTimer, 2000 * 1 );
  2772  056B  30D0               	movlw	208
  2773  056C  00CA               	movwf	timerSet@duration
  2774  056D  3007               	movlw	7
  2775  056E  00CB               	movwf	timerSet@duration+1
  2776  056F  083A               	movf	_runSMTimer,w
  2777  0570  25E5               	fcall	_timerSet
  2778  0571  0008               	return
  2779  0572                     __end_of_initS8_bothLow:	
  2780                           
  2781                           	psect	text15
  2782  062C                     __ptext15:	
  2783 ;; *************** function _initS7_bothHigh *****************
  2784 ;; Defined at:
  2785 ;;		line 221 in file "../source/eventhandler.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1
  2799 ;;      Params:         0       0       0
  2800 ;;      Locals:         0       0       0
  2801 ;;      Temps:          0       1       0
  2802 ;;      Totals:         0       1       0
  2803 ;;Total ram usage:        1 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    4
  2806 ;; This function calls:
  2807 ;;		_timerSet
  2808 ;; This function is called by:
  2809 ;;		_eventHandlerService
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _initS7_bothHigh
  2815  062C                     _initS7_bothHigh:	
  2816                           
  2817                           ;eventhandler.c: 223: timerSet( initSMTimer, 2000 * 1 );
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in _initS7_bothHigh: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2821  062C  30D0               	movlw	208
  2822  062D  0020               	movlb	0	; select bank0
  2823  062E  00CA               	movwf	timerSet@duration
  2824  062F  3007               	movlw	7
  2825  0630  00CB               	movwf	timerSet@duration+1
  2826  0631  083C               	movf	_initSMTimer,w
  2827  0632  25E5               	fcall	_timerSet
  2828                           
  2829                           ;eventhandler.c: 224: initState = initS8;
  2830  0633  3007               	movlw	7
  2831  0634  0020               	movlb	0	; select bank0
  2832  0635  00CD               	movwf	??_initS7_bothHigh
  2833  0636  084D               	movf	??_initS7_bothHigh,w
  2834  0637  00C9               	movwf	_initState
  2835  0638  0008               	return
  2836  0639                     __end_of_initS7_bothHigh:	
  2837                           
  2838                           	psect	text16
  2839  0639                     __ptext16:	
  2840 ;; *************** function _initS6_redLow *****************
  2841 ;; Defined at:
  2842 ;;		line 215 in file "../source/eventhandler.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1
  2856 ;;      Params:         0       0       0
  2857 ;;      Locals:         0       0       0
  2858 ;;      Temps:          0       1       0
  2859 ;;      Totals:         0       1       0
  2860 ;;Total ram usage:        1 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    4
  2863 ;; This function calls:
  2864 ;;		_timerSet
  2865 ;; This function is called by:
  2866 ;;		_eventHandlerService
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           
  2871                           ;psect for function _initS6_redLow
  2872  0639                     _initS6_redLow:	
  2873                           
  2874                           ;eventhandler.c: 217: timerSet( initSMTimer, 2000 * 1 );
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _initS6_redLow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2878  0639  30D0               	movlw	208
  2879  063A  0020               	movlb	0	; select bank0
  2880  063B  00CA               	movwf	timerSet@duration
  2881  063C  3007               	movlw	7
  2882  063D  00CB               	movwf	timerSet@duration+1
  2883  063E  083C               	movf	_initSMTimer,w
  2884  063F  25E5               	fcall	_timerSet
  2885                           
  2886                           ;eventhandler.c: 218: initState = initS4;
  2887  0640  3003               	movlw	3
  2888  0641  0020               	movlb	0	; select bank0
  2889  0642  00CD               	movwf	??_initS6_redLow
  2890  0643  084D               	movf	??_initS6_redLow,w
  2891  0644  00C9               	movwf	_initState
  2892  0645  0008               	return
  2893  0646                     __end_of_initS6_redLow:	
  2894                           
  2895                           	psect	text17
  2896  0646                     __ptext17:	
  2897 ;; *************** function _initS5_redHigh *****************
  2898 ;; Defined at:
  2899 ;;		line 209 in file "../source/eventhandler.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1
  2913 ;;      Params:         0       0       0
  2914 ;;      Locals:         0       0       0
  2915 ;;      Temps:          0       1       0
  2916 ;;      Totals:         0       1       0
  2917 ;;Total ram usage:        1 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    4
  2920 ;; This function calls:
  2921 ;;		_timerSet
  2922 ;; This function is called by:
  2923 ;;		_eventHandlerService
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _initS5_redHigh
  2929  0646                     _initS5_redHigh:	
  2930                           
  2931                           ;eventhandler.c: 211: timerSet( initSMTimer, 2000 * 1 );
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _initS5_redHigh: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2935  0646  30D0               	movlw	208
  2936  0647  0020               	movlb	0	; select bank0
  2937  0648  00CA               	movwf	timerSet@duration
  2938  0649  3007               	movlw	7
  2939  064A  00CB               	movwf	timerSet@duration+1
  2940  064B  083C               	movf	_initSMTimer,w
  2941  064C  25E5               	fcall	_timerSet
  2942                           
  2943                           ;eventhandler.c: 212: initState = initS6;
  2944  064D  3005               	movlw	5
  2945  064E  0020               	movlb	0	; select bank0
  2946  064F  00CD               	movwf	??_initS5_redHigh
  2947  0650  084D               	movf	??_initS5_redHigh,w
  2948  0651  00C9               	movwf	_initState
  2949  0652  0008               	return
  2950  0653                     __end_of_initS5_redHigh:	
  2951                           
  2952                           	psect	text18
  2953  0653                     __ptext18:	
  2954 ;; *************** function _initS4_greenLow *****************
  2955 ;; Defined at:
  2956 ;;		line 203 in file "../source/eventhandler.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1
  2970 ;;      Params:         0       0       0
  2971 ;;      Locals:         0       0       0
  2972 ;;      Temps:          0       1       0
  2973 ;;      Totals:         0       1       0
  2974 ;;Total ram usage:        1 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    4
  2977 ;; This function calls:
  2978 ;;		_timerSet
  2979 ;; This function is called by:
  2980 ;;		_eventHandlerService
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _initS4_greenLow
  2986  0653                     _initS4_greenLow:	
  2987                           
  2988                           ;eventhandler.c: 205: timerSet( initSMTimer, 2000 * 1 );
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _initS4_greenLow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2992  0653  30D0               	movlw	208
  2993  0654  0020               	movlb	0	; select bank0
  2994  0655  00CA               	movwf	timerSet@duration
  2995  0656  3007               	movlw	7
  2996  0657  00CB               	movwf	timerSet@duration+1
  2997  0658  083C               	movf	_initSMTimer,w
  2998  0659  25E5               	fcall	_timerSet
  2999                           
  3000                           ;eventhandler.c: 206: initState = initS7;
  3001  065A  3006               	movlw	6
  3002  065B  0020               	movlb	0	; select bank0
  3003  065C  00CD               	movwf	??_initS4_greenLow
  3004  065D  084D               	movf	??_initS4_greenLow,w
  3005  065E  00C9               	movwf	_initState
  3006  065F  0008               	return
  3007  0660                     __end_of_initS4_greenLow:	
  3008                           
  3009                           	psect	text19
  3010  0660                     __ptext19:	
  3011 ;; *************** function _initS3_greenHigh *****************
  3012 ;; Defined at:
  3013 ;;		line 197 in file "../source/eventhandler.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1
  3027 ;;      Params:         0       0       0
  3028 ;;      Locals:         0       0       0
  3029 ;;      Temps:          0       1       0
  3030 ;;      Totals:         0       1       0
  3031 ;;Total ram usage:        1 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    4
  3034 ;; This function calls:
  3035 ;;		_timerSet
  3036 ;; This function is called by:
  3037 ;;		_eventHandlerService
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function _initS3_greenHigh
  3043  0660                     _initS3_greenHigh:	
  3044                           
  3045                           ;eventhandler.c: 199: timerSet( initSMTimer, 2000 * 1 );
  3046                           
  3047                           ;incstack = 0
  3048                           ; Regs used in _initS3_greenHigh: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3049  0660  30D0               	movlw	208
  3050  0661  0020               	movlb	0	; select bank0
  3051  0662  00CA               	movwf	timerSet@duration
  3052  0663  3007               	movlw	7
  3053  0664  00CB               	movwf	timerSet@duration+1
  3054  0665  083C               	movf	_initSMTimer,w
  3055  0666  25E5               	fcall	_timerSet
  3056                           
  3057                           ;eventhandler.c: 200: initState = initS4;
  3058  0667  3003               	movlw	3
  3059  0668  0020               	movlb	0	; select bank0
  3060  0669  00CD               	movwf	??_initS3_greenHigh
  3061  066A  084D               	movf	??_initS3_greenHigh,w
  3062  066B  00C9               	movwf	_initState
  3063  066C  0008               	return
  3064  066D                     __end_of_initS3_greenHigh:	
  3065                           
  3066                           	psect	text20
  3067  066D                     __ptext20:	
  3068 ;; *************** function _initS2_Timeout *****************
  3069 ;; Defined at:
  3070 ;;		line 185 in file "../source/eventhandler.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1
  3084 ;;      Params:         0       0       0
  3085 ;;      Locals:         0       0       0
  3086 ;;      Temps:          0       1       0
  3087 ;;      Totals:         0       1       0
  3088 ;;Total ram usage:        1 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    4
  3091 ;; This function calls:
  3092 ;;		_timerSet
  3093 ;; This function is called by:
  3094 ;;		_eventHandlerService
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           
  3099                           ;psect for function _initS2_Timeout
  3100  066D                     _initS2_Timeout:	
  3101                           
  3102                           ;eventhandler.c: 187: timerSet( initSMTimer, 2000 * 1 );
  3103                           
  3104                           ;incstack = 0
  3105                           ; Regs used in _initS2_Timeout: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3106  066D  30D0               	movlw	208
  3107  066E  0020               	movlb	0	; select bank0
  3108  066F  00CA               	movwf	timerSet@duration
  3109  0670  3007               	movlw	7
  3110  0671  00CB               	movwf	timerSet@duration+1
  3111  0672  083C               	movf	_initSMTimer,w
  3112  0673  25E5               	fcall	_timerSet
  3113                           
  3114                           ;eventhandler.c: 188: initState = initS3;
  3115  0674  3002               	movlw	2
  3116  0675  0020               	movlb	0	; select bank0
  3117  0676  00CD               	movwf	??_initS2_Timeout
  3118  0677  084D               	movf	??_initS2_Timeout,w
  3119  0678  00C9               	movwf	_initState
  3120  0679  0008               	return
  3121  067A                     __end_of_initS2_Timeout:	
  3122                           
  3123                           	psect	text21
  3124  05C7                     __ptext21:	
  3125 ;; *************** function _initS1_Timeout *****************
  3126 ;; Defined at:
  3127 ;;		line 178 in file "../source/eventhandler.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1
  3141 ;;      Params:         0       0       0
  3142 ;;      Locals:         0       0       0
  3143 ;;      Temps:          0       1       0
  3144 ;;      Totals:         0       1       0
  3145 ;;Total ram usage:        1 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    4
  3148 ;; This function calls:
  3149 ;;		_timerSet
  3150 ;; This function is called by:
  3151 ;;		_eventHandlerService
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _initS1_Timeout
  3157  05C7                     _initS1_Timeout:	
  3158                           
  3159                           ;eventhandler.c: 180: timerSet( initSMTimer, 3000 * 1 );
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in _initS1_Timeout: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3163  05C7  30B8               	movlw	184
  3164  05C8  0020               	movlb	0	; select bank0
  3165  05C9  00CA               	movwf	timerSet@duration
  3166  05CA  300B               	movlw	11
  3167  05CB  00CB               	movwf	timerSet@duration+1
  3168  05CC  083C               	movf	_initSMTimer,w
  3169  05CD  25E5               	fcall	_timerSet
  3170                           
  3171                           ;eventhandler.c: 181: LATAbits.LATA0 = 0;
  3172  05CE  0022               	movlb	2	; select bank2
  3173  05CF  100C               	bcf	12,0	;volatile
  3174                           
  3175                           ;eventhandler.c: 182: initState = initS5;
  3176  05D0  3004               	movlw	4
  3177  05D1  0020               	movlb	0	; select bank0
  3178  05D2  00CD               	movwf	??_initS1_Timeout
  3179  05D3  084D               	movf	??_initS1_Timeout,w
  3180  05D4  00C9               	movwf	_initState
  3181  05D5  0008               	return
  3182  05D6                     __end_of_initS1_Timeout:	
  3183                           
  3184                           	psect	text22
  3185  06C2                     __ptext22:	
  3186 ;; *************** function _init_NoAction *****************
  3187 ;; Defined at:
  3188 ;;		line 160 in file "../source/eventhandler.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		None
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1
  3202 ;;      Params:         0       0       0
  3203 ;;      Locals:         0       0       0
  3204 ;;      Temps:          0       0       0
  3205 ;;      Totals:         0       0       0
  3206 ;;Total ram usage:        0 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    3
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_eventHandlerService
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function _init_NoAction
  3218  06C2                     _init_NoAction:	
  3219                           
  3220                           ;incstack = 0
  3221                           ; Regs used in _init_NoAction: []
  3222  06C2  0008               	return
  3223  06C3                     __end_of_init_NoAction:	
  3224                           
  3225                           	psect	text23
  3226  0443                     __ptext23:	
  3227 ;; *************** function _run_GreenSteadyLow *****************
  3228 ;; Defined at:
  3229 ;;		line 347 in file "../source/eventhandler.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1
  3243 ;;      Params:         0       0       0
  3244 ;;      Locals:         0       0       0
  3245 ;;      Temps:          0       0       0
  3246 ;;      Totals:         0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    4
  3250 ;; This function calls:
  3251 ;;		_beepRepeatedly
  3252 ;;		_clearLED
  3253 ;;		_longTimerSet
  3254 ;;		_timerLock
  3255 ;; This function is called by:
  3256 ;;		_eventHandlerService
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _run_GreenSteadyLow
  3262  0443                     _run_GreenSteadyLow:	
  3263                           
  3264                           ;eventhandler.c: 349: timerLock(runSMTimer);
  3265                           
  3266                           ;incstack = 0
  3267                           ; Regs used in _run_GreenSteadyLow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3268  0443  0020               	movlb	0	; select bank0
  3269  0444  083A               	movf	_runSMTimer,w
  3270  0445  25D6               	fcall	_timerLock
  3271                           
  3272                           ;eventhandler.c: 350: longTimerSet(minuteTimer, (unsigned long)1 * 60 * 1000);
  3273  0446  3000               	movlw	0
  3274  0447  0020               	movlb	0	; select bank0
  3275  0448  00CD               	movwf	longTimerSet@duration+3
  3276  0449  3000               	movlw	0
  3277  044A  00CC               	movwf	longTimerSet@duration+2
  3278  044B  30EA               	movlw	234
  3279  044C  00CB               	movwf	longTimerSet@duration+1
  3280  044D  3060               	movlw	96
  3281  044E  00CA               	movwf	longTimerSet@duration
  3282  044F  0836               	movf	_minuteTimer,w
  3283  0450  24B1               	fcall	_longTimerSet
  3284                           
  3285                           ;eventhandler.c: 351: runState = runS2;
  3286  0451  0020               	movlb	0	; select bank0
  3287  0452  01C7               	clrf	_runState
  3288  0453  0AC7               	incf	_runState,f
  3289                           
  3290                           ;eventhandler.c: 352: clearLED();
  3291  0454  26B5               	fcall	_clearLED
  3292                           
  3293                           ;eventhandler.c: 353: beepRepeatedly ( 200, 2);
  3294  0455  30C8               	movlw	200
  3295  0456  0020               	movlb	0	; select bank0
  3296  0457  00CA               	movwf	beepRepeatedly@period
  3297  0458  3000               	movlw	0
  3298  0459  00CB               	movwf	beepRepeatedly@period+1
  3299  045A  3002               	movlw	2
  3300  045B  00CC               	movwf	beepRepeatedly@n
  3301  045C  3000               	movlw	0
  3302  045D  00CD               	movwf	beepRepeatedly@n+1
  3303  045E  2519               	fcall	_beepRepeatedly
  3304  045F  0008               	return
  3305  0460                     __end_of_run_GreenSteadyLow:	
  3306                           
  3307                           	psect	text24
  3308  069C                     __ptext24:	
  3309 ;; *************** function _run_GreenFlashing *****************
  3310 ;; Defined at:
  3311 ;;		line 341 in file "../source/eventhandler.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1
  3325 ;;      Params:         0       0       0
  3326 ;;      Locals:         0       0       0
  3327 ;;      Temps:          0       0       0
  3328 ;;      Totals:         0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    4
  3332 ;; This function calls:
  3333 ;;		_setLED
  3334 ;;		_timerSet
  3335 ;; This function is called by:
  3336 ;;		_eventHandlerService
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _run_GreenFlashing
  3342  069C                     _run_GreenFlashing:	
  3343                           
  3344                           ;eventhandler.c: 343: timerSet(runSMTimer, 10 * 1000);
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in _run_GreenFlashing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3348  069C  3010               	movlw	16
  3349  069D  0020               	movlb	0	; select bank0
  3350  069E  00CA               	movwf	timerSet@duration
  3351  069F  3027               	movlw	39
  3352  06A0  00CB               	movwf	timerSet@duration+1
  3353  06A1  083A               	movf	_runSMTimer,w
  3354  06A2  25E5               	fcall	_timerSet
  3355                           
  3356                           ;eventhandler.c: 344: setLED();
  3357  06A3  26B9               	fcall	_setLED
  3358  06A4  0008               	return
  3359  06A5                     __end_of_run_GreenFlashing:	
  3360                           
  3361                           	psect	text25
  3362  0497                     __ptext25:	
  3363 ;; *************** function _run_BeepReceived *****************
  3364 ;; Defined at:
  3365 ;;		line 333 in file "../source/eventhandler.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1
  3379 ;;      Params:         0       0       0
  3380 ;;      Locals:         0       0       0
  3381 ;;      Temps:          0       1       0
  3382 ;;      Totals:         0       1       0
  3383 ;;Total ram usage:        1 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    4
  3386 ;; This function calls:
  3387 ;;		_beepRepeatedly
  3388 ;;		_longTimerLock
  3389 ;;		_timerSet
  3390 ;; This function is called by:
  3391 ;;		_eventHandlerService
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _run_BeepReceived
  3397  0497                     _run_BeepReceived:	
  3398                           
  3399                           ;eventhandler.c: 335: longTimerLock(minuteTimer);
  3400                           
  3401                           ;incstack = 0
  3402                           ; Regs used in _run_BeepReceived: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3403  0497  0020               	movlb	0	; select bank0
  3404  0498  0836               	movf	_minuteTimer,w
  3405  0499  24E5               	fcall	_longTimerLock
  3406                           
  3407                           ;eventhandler.c: 336: beepRepeatedly ( 100, 1);
  3408  049A  3064               	movlw	100
  3409  049B  0020               	movlb	0	; select bank0
  3410  049C  00CA               	movwf	beepRepeatedly@period
  3411  049D  3000               	movlw	0
  3412  049E  00CB               	movwf	beepRepeatedly@period+1
  3413  049F  3001               	movlw	1
  3414  04A0  00CC               	movwf	beepRepeatedly@n
  3415  04A1  3000               	movlw	0
  3416  04A2  00CD               	movwf	beepRepeatedly@n+1
  3417  04A3  2519               	fcall	_beepRepeatedly
  3418                           
  3419                           ;eventhandler.c: 337: timerSet(runSMTimer, 10 * 1000);
  3420  04A4  3010               	movlw	16
  3421  04A5  0020               	movlb	0	; select bank0
  3422  04A6  00CA               	movwf	timerSet@duration
  3423  04A7  3027               	movlw	39
  3424  04A8  00CB               	movwf	timerSet@duration+1
  3425  04A9  083A               	movf	_runSMTimer,w
  3426  04AA  25E5               	fcall	_timerSet
  3427                           
  3428                           ;eventhandler.c: 338: runState = runS3;
  3429  04AB  3002               	movlw	2
  3430  04AC  0020               	movlb	0	; select bank0
  3431  04AD  00CE               	movwf	??_run_BeepReceived
  3432  04AE  084E               	movf	??_run_BeepReceived,w
  3433  04AF  00C7               	movwf	_runState
  3434  04B0  0008               	return
  3435  04B1                     __end_of_run_BeepReceived:	
  3436                           
  3437                           	psect	text26
  3438  0572                     __ptext26:	
  3439 ;; *************** function _run_Initialised *****************
  3440 ;; Defined at:
  3441 ;;		line 325 in file "../source/eventhandler.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1
  3455 ;;      Params:         0       0       0
  3456 ;;      Locals:         0       0       0
  3457 ;;      Temps:          0       0       0
  3458 ;;      Totals:         0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    4
  3462 ;; This function calls:
  3463 ;;		_clearLED
  3464 ;;		_longTimerSet
  3465 ;;		_timerLock
  3466 ;; This function is called by:
  3467 ;;		_eventHandlerService
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           
  3472                           ;psect for function _run_Initialised
  3473  0572                     _run_Initialised:	
  3474                           
  3475                           ;eventhandler.c: 327: timerLock(runSMTimer);
  3476                           
  3477                           ;incstack = 0
  3478                           ; Regs used in _run_Initialised: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3479  0572  0020               	movlb	0	; select bank0
  3480  0573  083A               	movf	_runSMTimer,w
  3481  0574  25D6               	fcall	_timerLock
  3482                           
  3483                           ;eventhandler.c: 328: clearLED();
  3484  0575  26B5               	fcall	_clearLED
  3485                           
  3486                           ;eventhandler.c: 329: longTimerSet(minuteTimer, (unsigned long) 1 * 60 * 1000);
  3487  0576  3000               	movlw	0
  3488  0577  0020               	movlb	0	; select bank0
  3489  0578  00CD               	movwf	longTimerSet@duration+3
  3490  0579  3000               	movlw	0
  3491  057A  00CC               	movwf	longTimerSet@duration+2
  3492  057B  30EA               	movlw	234
  3493  057C  00CB               	movwf	longTimerSet@duration+1
  3494  057D  3060               	movlw	96
  3495  057E  00CA               	movwf	longTimerSet@duration
  3496  057F  0836               	movf	_minuteTimer,w
  3497  0580  24B1               	fcall	_longTimerSet
  3498                           
  3499                           ;eventhandler.c: 330: runState = runS2;
  3500  0581  0020               	movlb	0	; select bank0
  3501  0582  01C7               	clrf	_runState
  3502  0583  0AC7               	incf	_runState,f
  3503  0584  0008               	return
  3504  0585                     __end_of_run_Initialised:	
  3505                           
  3506                           	psect	text27
  3507  0547                     __ptext27:	
  3508 ;; *************** function _init_Restart *****************
  3509 ;; Defined at:
  3510 ;;		line 165 in file "../source/eventhandler.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1
  3524 ;;      Params:         0       0       0
  3525 ;;      Locals:         0       0       0
  3526 ;;      Temps:          0       0       0
  3527 ;;      Totals:         0       0       0
  3528 ;;Total ram usage:        0 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    4
  3531 ;; This function calls:
  3532 ;;		_flashLED
  3533 ;;		_timerSet
  3534 ;; This function is called by:
  3535 ;;		_eventHandlerInit
  3536 ;;		_eventHandlerService
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _init_Restart
  3542  0547                     _init_Restart:	
  3543                           
  3544                           ;eventhandler.c: 167: timerSet( initSMTimer, 2000 * 1 );
  3545                           
  3546                           ;incstack = 0
  3547                           ; Regs used in _init_Restart: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3548  0547  30D0               	movlw	208
  3549  0548  0020               	movlb	0	; select bank0
  3550  0549  00CA               	movwf	timerSet@duration
  3551  054A  3007               	movlw	7
  3552  054B  00CB               	movwf	timerSet@duration+1
  3553  054C  083C               	movf	_initSMTimer,w
  3554  054D  25E5               	fcall	_timerSet
  3555                           
  3556                           ;eventhandler.c: 168: LATAbits.LATA0 = 1;
  3557  054E  0022               	movlb	2	; select bank2
  3558  054F  140C               	bsf	12,0	;volatile
  3559                           
  3560                           ;eventhandler.c: 169: initState = initS1;
  3561  0550  0020               	movlb	0	; select bank0
  3562  0551  01C9               	clrf	_initState
  3563                           
  3564                           ;eventhandler.c: 170: greenWentHigh.eventFlag = 0;
  3565  0552  01F0               	clrf	_greenWentHigh
  3566                           
  3567                           ;eventhandler.c: 171: greenWentLow.eventFlag = 0;
  3568  0553  01AD               	clrf	_greenWentLow
  3569                           
  3570                           ;eventhandler.c: 172: redWentHigh.eventFlag = 0;
  3571  0554  01AA               	clrf	_redWentHigh
  3572                           
  3573                           ;eventhandler.c: 173: redWentLow.eventFlag = 0;
  3574  0555  01A7               	clrf	_redWentLow
  3575                           
  3576                           ;eventhandler.c: 174: runState = runS1;
  3577  0556  01C7               	clrf	_runState
  3578                           
  3579                           ;eventhandler.c: 175: flashLED(200);
  3580  0557  30C8               	movlw	200
  3581  0558  00CA               	movwf	flashLED@period
  3582  0559  3000               	movlw	0
  3583  055A  00CB               	movwf	flashLED@period+1
  3584  055B  2691               	fcall	_flashLED
  3585  055C  0008               	return
  3586  055D                     __end_of_init_Restart:	
  3587                           
  3588                           	psect	text28
  3589  06C3                     __ptext28:	
  3590 ;; *************** function _run_NoAction *****************
  3591 ;; Defined at:
  3592 ;;		line 320 in file "../source/eventhandler.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		None
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1
  3606 ;;      Params:         0       0       0
  3607 ;;      Locals:         0       0       0
  3608 ;;      Temps:          0       0       0
  3609 ;;      Totals:         0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    3
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_eventHandlerService
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           
  3621                           ;psect for function _run_NoAction
  3622  06C3                     _run_NoAction:	
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in _run_NoAction: []
  3626  06C3  0008               	return
  3627  06C4                     __end_of_run_NoAction:	
  3628                           
  3629                           	psect	text29
  3630  04B1                     __ptext29:	
  3631 ;; *************** function _longTimerSet *****************
  3632 ;; Defined at:
  3633 ;;		line 208 in file "../source/timer.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  index           1    wreg     unsigned char 
  3636 ;;  duration        4    0[BANK0 ] unsigned long 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  index           1    5[BANK0 ] unsigned char 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1
  3648 ;;      Params:         0       4       0
  3649 ;;      Locals:         0       1       0
  3650 ;;      Temps:          0       1       0
  3651 ;;      Totals:         0       6       0
  3652 ;;Total ram usage:        6 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    3
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_run_Initialised
  3659 ;;		_run_GreenSteadyLow
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           
  3664                           ;psect for function _longTimerSet
  3665  04B1                     _longTimerSet:	
  3666                           
  3667                           ;incstack = 0
  3668                           ; Regs used in _longTimerSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  3669                           ;longTimerSet@index stored from wreg
  3670  04B1  0020               	movlb	0	; select bank0
  3671  04B2  00CF               	movwf	longTimerSet@index
  3672                           
  3673                           ;timer.c: 210: if ( index < numLongTimers )
  3674  04B3  0875               	movf	_numLongTimers,w
  3675  04B4  024F               	subwf	longTimerSet@index,w
  3676  04B5  1803               	skipnc
  3677  04B6  0008               	return
  3678                           
  3679                           ;timer.c: 211: {
  3680                           ;timer.c: 212: longTimers[index] = duration;
  3681  04B7  084F               	movf	longTimerSet@index,w
  3682  04B8  00CE               	movwf	??_longTimerSet
  3683  04B9  3001               	movlw	1
  3684  04BA                     u895:	
  3685  04BA  35CE               	lslf	??_longTimerSet,f
  3686  04BB  3EFF               	addlw	-1
  3687  04BC  1D03               	skipz
  3688  04BD  2CBA               	goto	u895
  3689  04BE  354E               	lslf	??_longTimerSet,w
  3690  04BF  3E20               	addlw	(low (_longTimers| 0))& (0+255)
  3691  04C0  0086               	movwf	6
  3692  04C1  0187               	clrf	7
  3693  04C2  084A               	movf	longTimerSet@duration,w
  3694  04C3  3FC0               	movwi [0]fsr1
  3695  04C4  084B               	movf	longTimerSet@duration+1,w
  3696  04C5  3FC1               	movwi [1]fsr1
  3697  04C6  084C               	movf	longTimerSet@duration+2,w
  3698  04C7  3FC2               	movwi [2]fsr1
  3699  04C8  084D               	movf	longTimerSet@duration+3,w
  3700  04C9  3FC3               	movwi [3]fsr1
  3701  04CA  0008               	return
  3702  04CB                     __end_of_longTimerSet:	
  3703                           
  3704                           	psect	text30
  3705  06B5                     __ptext30:	
  3706 ;; *************** function _clearLED *****************
  3707 ;; Defined at:
  3708 ;;		line 25 in file "../source/LED.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		status,2
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1
  3722 ;;      Params:         0       0       0
  3723 ;;      Locals:         0       0       0
  3724 ;;      Temps:          0       0       0
  3725 ;;      Totals:         0       0       0
  3726 ;;Total ram usage:        0 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    3
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_run_Initialised
  3733 ;;		_run_GreenSteadyLow
  3734 ;;		_initialise
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           
  3739                           ;psect for function _clearLED
  3740  06B5                     _clearLED:	
  3741                           
  3742                           ;LED.c: 27: flashing = 0;
  3743                           
  3744                           ;incstack = 0
  3745                           ; Regs used in _clearLED: [status,2]
  3746  06B5  0020               	movlb	0	; select bank0
  3747  06B6  01C2               	clrf	_flashing
  3748                           
  3749                           ;LED.c: 28: PORTAbits.RA5 = 1;
  3750  06B7  168C               	bsf	12,5	;volatile
  3751  06B8  0008               	return
  3752  06B9                     __end_of_clearLED:	
  3753                           
  3754                           	psect	text31
  3755  06B9                     __ptext31:	
  3756 ;; *************** function _setLED *****************
  3757 ;; Defined at:
  3758 ;;		line 19 in file "../source/LED.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		status,2
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1
  3772 ;;      Params:         0       0       0
  3773 ;;      Locals:         0       0       0
  3774 ;;      Temps:          0       0       0
  3775 ;;      Totals:         0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    3
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_run_GreenFlashing
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           
  3787                           ;psect for function _setLED
  3788  06B9                     _setLED:	
  3789                           
  3790                           ;LED.c: 21: flashing = 0;
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in _setLED: [status,2]
  3794  06B9  0020               	movlb	0	; select bank0
  3795  06BA  01C2               	clrf	_flashing
  3796                           
  3797                           ;LED.c: 22: PORTAbits.RA5 = 0;
  3798  06BB  128C               	bcf	12,5	;volatile
  3799  06BC  0008               	return
  3800  06BD                     __end_of_setLED:	
  3801                           
  3802                           	psect	text32
  3803  0691                     __ptext32:	
  3804 ;; *************** function _flashLED *****************
  3805 ;; Defined at:
  3806 ;;		line 31 in file "../source/LED.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  period          2    0[BANK0 ] int 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1
  3820 ;;      Params:         0       2       0
  3821 ;;      Locals:         0       0       0
  3822 ;;      Temps:          0       0       0
  3823 ;;      Totals:         0       2       0
  3824 ;;Total ram usage:        2 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    3
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_init_Restart
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _flashLED
  3836  0691                     _flashLED:	
  3837                           
  3838                           ;LED.c: 33: flashing = !0;
  3839                           
  3840                           ;incstack = 0
  3841                           ; Regs used in _flashLED: [wreg]
  3842  0691  0020               	movlb	0	; select bank0
  3843  0692  01C2               	clrf	_flashing
  3844  0693  0AC2               	incf	_flashing,f
  3845                           
  3846                           ;LED.c: 34: PORTAbits.RA5 = 0;
  3847  0694  128C               	bcf	12,5	;volatile
  3848                           
  3849                           ;LED.c: 35: flashRate = period;
  3850  0695  084B               	movf	flashLED@period+1,w
  3851  0696  00E3               	movwf	_flashRate+1
  3852  0697  084A               	movf	flashLED@period,w
  3853  0698  00E2               	movwf	_flashRate
  3854                           
  3855                           ;LED.c: 36: flasherToggle = !0;
  3856  0699  01C3               	clrf	_flasherToggle
  3857  069A  0AC3               	incf	_flasherToggle,f
  3858  069B  0008               	return
  3859  069C                     __end_of_flashLED:	
  3860                           
  3861                           	psect	text33
  3862  00F8                     __ptext33:	
  3863 ;; *************** function _getRunEvent *****************
  3864 ;; Defined at:
  3865 ;;		line 371 in file "../source/eventhandler.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      enum E2354
  3872 ;; Registers used:
  3873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1
  3879 ;;      Params:         0       0       0
  3880 ;;      Locals:         0       0       0
  3881 ;;      Temps:          0       4       0
  3882 ;;      Totals:         0       4       0
  3883 ;;Total ram usage:        4 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    5
  3886 ;; This function calls:
  3887 ;;		_longTimerLock
  3888 ;;		_longTimerRead
  3889 ;;		_multipleErrorEvent
  3890 ;;		_timerLock
  3891 ;;		_timerRead
  3892 ;; This function is called by:
  3893 ;;		_eventHandlerService
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           
  3898                           ;psect for function _getRunEvent
  3899  00F8                     _getRunEvent:	
  3900                           
  3901                           ;eventhandler.c: 373: if ( chargerInitialised.eventFlag )
  3902                           
  3903                           ;incstack = 0
  3904                           ; Regs used in _getRunEvent: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3905  00F8  0020               	movlb	0	; select bank0
  3906  00F9  0824               	movf	_chargerInitialised,w
  3907  00FA  1903               	btfsc	3,2
  3908  00FB  28FF               	goto	l2531
  3909                           
  3910                           ;eventhandler.c: 374: {
  3911                           ;eventhandler.c: 375: chargerInitialised.eventFlag = 0;
  3912  00FC  01A4               	clrf	_chargerInitialised
  3913                           
  3914                           ;eventhandler.c: 376: return initialisedEvent;
  3915  00FD  3002               	movlw	2
  3916  00FE  0008               	return
  3917  00FF                     l2531:	
  3918                           ;eventhandler.c: 377: }
  3919                           
  3920                           
  3921                           ;eventhandler.c: 378: else if ( timerRead(runSMTimer) == 0 )
  3922  00FF  083A               	movf	_runSMTimer,w
  3923  0100  2530               	fcall	_timerRead
  3924  0101  0020               	movlb	0	; select bank0
  3925  0102  084A               	movf	?_timerRead,w
  3926  0103  044B               	iorwf	?_timerRead+1,w
  3927  0104  1D03               	btfss	3,2
  3928  0105  290A               	goto	l2541
  3929                           
  3930                           ;eventhandler.c: 379: {
  3931                           ;eventhandler.c: 380: timerLock( runSMTimer );
  3932  0106  083A               	movf	_runSMTimer,w
  3933  0107  25D6               	fcall	_timerLock
  3934                           
  3935                           ;eventhandler.c: 381: return runTimeoutEvent;
  3936  0108  3001               	movlw	1
  3937  0109  0008               	return
  3938  010A                     l2541:	
  3939                           ;eventhandler.c: 382: }
  3940                           
  3941                           
  3942                           ;eventhandler.c: 383: else if (timerRead(buzzerTimer) == 0 )
  3943  010A  0020               	movlb	0	; select bank0
  3944  010B  0838               	movf	_buzzerTimer,w
  3945  010C  2530               	fcall	_timerRead
  3946  010D  0020               	movlb	0	; select bank0
  3947  010E  084A               	movf	?_timerRead,w
  3948  010F  044B               	iorwf	?_timerRead+1,w
  3949  0110  1D03               	btfss	3,2
  3950  0111  2918               	goto	l2553
  3951                           
  3952                           ;eventhandler.c: 384: {
  3953                           ;eventhandler.c: 385: buzzerTransitionCount = 0;
  3954  0112  01B4               	clrf	_buzzerTransitionCount
  3955  0113  01B5               	clrf	_buzzerTransitionCount+1
  3956                           
  3957                           ;eventhandler.c: 386: timerLock( buzzerTimer );
  3958  0114  0838               	movf	_buzzerTimer,w
  3959  0115  25D6               	fcall	_timerLock
  3960                           
  3961                           ;eventhandler.c: 387: return beepEvent;
  3962  0116  3003               	movlw	3
  3963  0117  0008               	return
  3964  0118                     l2553:	
  3965                           ;eventhandler.c: 388: }
  3966                           
  3967                           
  3968                           ;eventhandler.c: 389: else if (longTimerRead(minuteTimer) == 0)
  3969  0118  0020               	movlb	0	; select bank0
  3970  0119  0836               	movf	_minuteTimer,w
  3971  011A  23F9               	fcall	_longTimerRead
  3972  011B  0020               	movlb	0	; select bank0
  3973  011C  084D               	movf	?_longTimerRead+3,w
  3974  011D  044C               	iorwf	?_longTimerRead+2,w
  3975  011E  044B               	iorwf	?_longTimerRead+1,w
  3976  011F  044A               	iorwf	?_longTimerRead,w
  3977  0120  1D03               	skipz
  3978  0121  2926               	goto	l2563
  3979                           
  3980                           ;eventhandler.c: 390: {
  3981                           ;eventhandler.c: 391: longTimerLock( minuteTimer );
  3982  0122  0836               	movf	_minuteTimer,w
  3983  0123  24E5               	fcall	_longTimerLock
  3984                           
  3985                           ;eventhandler.c: 392: return runTimeoutEvent;
  3986  0124  3001               	movlw	1
  3987  0125  0008               	return
  3988  0126                     l2563:	
  3989                           ;eventhandler.c: 393: }
  3990                           
  3991                           
  3992                           ;eventhandler.c: 394: else if ( greenWentLow.eventFlag )
  3993  0126  0020               	movlb	0	; select bank0
  3994  0127  082D               	movf	_greenWentLow,w
  3995  0128  1903               	btfsc	3,2
  3996  0129  2984               	goto	l2603
  3997                           
  3998                           ;eventhandler.c: 395: {
  3999                           ;eventhandler.c: 396: if (greenWentHigh.eventFlag && greenWentLow.eventFlag )
  4000  012A  0870               	movf	_greenWentHigh,w
  4001  012B  1903               	btfsc	3,2
  4002  012C  296B               	goto	l2595
  4003  012D  082D               	movf	_greenWentLow,w
  4004  012E  1903               	btfsc	3,2
  4005  012F  296B               	goto	l2595
  4006                           
  4007                           ;eventhandler.c: 397: {
  4008                           ;eventhandler.c: 398: if ( greenWentLow.eventTime - greenWentHigh.eventTime <= 600)
  4009  0130  3001               	movlw	1
  4010  0131  3E2D               	addlw	(low (_greenWentLow| 0))& (0+255)
  4011  0132  0086               	movwf	6
  4012  0133  0187               	clrf	7
  4013  0134  0971               	comf	_greenWentHigh+1,w
  4014  0135  00D4               	movwf	??_getRunEvent
  4015  0136  0972               	comf	_greenWentHigh+2,w
  4016  0137  00D5               	movwf	??_getRunEvent+1
  4017  0138  0AD4               	incf	??_getRunEvent,f
  4018  0139  1903               	skipnz
  4019  013A  0AD5               	incf	??_getRunEvent+1,f
  4020  013B  3F40               	moviw [0]fsr1
  4021  013C  0754               	addwf	??_getRunEvent,w
  4022  013D  00D6               	movwf	??_getRunEvent+2
  4023  013E  3F41               	moviw [1]fsr1
  4024  013F  3D55               	addwfc	??_getRunEvent+1,w
  4025  0140  00D7               	movwf	??_getRunEvent+3
  4026  0141  3002               	movlw	2
  4027  0142  0257               	subwf	??_getRunEvent+3,w
  4028  0143  3059               	movlw	89
  4029  0144  1903               	skipnz
  4030  0145  0256               	subwf	??_getRunEvent+2,w
  4031  0146  1803               	skipnc
  4032  0147  294B               	goto	l2579
  4033                           
  4034                           ;eventhandler.c: 399: {
  4035                           ;eventhandler.c: 400: greenWentHigh.eventFlag = 0;
  4036  0148  01F0               	clrf	_greenWentHigh
  4037                           
  4038                           ;eventhandler.c: 402: return greenFlashingEvent;
  4039  0149  3004               	movlw	4
  4040  014A  0008               	return
  4041  014B                     l2579:	
  4042                           ;eventhandler.c: 403: }
  4043                           
  4044                           
  4045                           ;eventhandler.c: 404: else if ( greenWentHigh.eventTime - greenWentLow.eventTime <= 600)
  4046  014B  3001               	movlw	1
  4047  014C  3E70               	addlw	(low (_greenWentHigh| 0))& (0+255)
  4048  014D  0086               	movwf	6
  4049  014E  0187               	clrf	7
  4050  014F  092E               	comf	_greenWentLow+1,w
  4051  0150  00D4               	movwf	??_getRunEvent
  4052  0151  092F               	comf	_greenWentLow+2,w
  4053  0152  00D5               	movwf	??_getRunEvent+1
  4054  0153  0AD4               	incf	??_getRunEvent,f
  4055  0154  1903               	skipnz
  4056  0155  0AD5               	incf	??_getRunEvent+1,f
  4057  0156  3F40               	moviw [0]fsr1
  4058  0157  0754               	addwf	??_getRunEvent,w
  4059  0158  00D6               	movwf	??_getRunEvent+2
  4060  0159  3F41               	moviw [1]fsr1
  4061  015A  3D55               	addwfc	??_getRunEvent+1,w
  4062  015B  00D7               	movwf	??_getRunEvent+3
  4063  015C  3002               	movlw	2
  4064  015D  0257               	subwf	??_getRunEvent+3,w
  4065  015E  3059               	movlw	89
  4066  015F  1903               	skipnz
  4067  0160  0256               	subwf	??_getRunEvent+2,w
  4068  0161  1803               	skipnc
  4069  0162  2967               	goto	l2589
  4070                           
  4071                           ;eventhandler.c: 405: {
  4072                           ;eventhandler.c: 406: greenWentHigh.eventFlag = 0;
  4073  0163  01F0               	clrf	_greenWentHigh
  4074                           
  4075                           ;eventhandler.c: 407: greenWentLow.eventFlag = 0;
  4076  0164  01AD               	clrf	_greenWentLow
  4077                           
  4078                           ;eventhandler.c: 408: return greenFlashingEvent;
  4079  0165  3004               	movlw	4
  4080  0166  0008               	return
  4081  0167                     l2589:	
  4082                           ;eventhandler.c: 409: }
  4083                           
  4084                           
  4085                           ;eventhandler.c: 410: else
  4086                           ;eventhandler.c: 411: {
  4087                           ;eventhandler.c: 412: greenWentHigh.eventFlag = 0;
  4088  0167  01F0               	clrf	_greenWentHigh
  4089                           
  4090                           ;eventhandler.c: 413: greenWentLow.eventFlag = 0;
  4091  0168  01AD               	clrf	_greenWentLow
  4092                           
  4093                           ;eventhandler.c: 414: return multipleErrorEvent();
  4094  0169  24CB               	fcall	_multipleErrorEvent
  4095  016A  0008               	return
  4096  016B                     l2595:	
  4097                           ;eventhandler.c: 415: }
  4098                           ;eventhandler.c: 416: }
  4099                           
  4100                           
  4101                           ;eventhandler.c: 417: else if (systick - greenWentLow.eventTime > 600)
  4102  016B  0020               	movlb	0	; select bank0
  4103  016C  092E               	comf	_greenWentLow+1,w
  4104  016D  00D4               	movwf	??_getRunEvent
  4105  016E  092F               	comf	_greenWentLow+2,w
  4106  016F  00D5               	movwf	??_getRunEvent+1
  4107  0170  0AD4               	incf	??_getRunEvent,f
  4108  0171  1903               	skipnz
  4109  0172  0AD5               	incf	??_getRunEvent+1,f
  4110  0173  0873               	movf	_systick,w
  4111  0174  0754               	addwf	??_getRunEvent,w
  4112  0175  00D6               	movwf	??_getRunEvent+2
  4113  0176  0874               	movf	_systick+1,w
  4114  0177  3D55               	addwfc	??_getRunEvent+1,w
  4115  0178  00D7               	movwf	??_getRunEvent+3
  4116  0179  3002               	movlw	2
  4117  017A  0257               	subwf	??_getRunEvent+3,w
  4118  017B  3059               	movlw	89
  4119  017C  1903               	skipnz
  4120  017D  0256               	subwf	??_getRunEvent+2,w
  4121  017E  1C03               	skipc
  4122  017F  29A9               	goto	l2623
  4123                           
  4124                           ;eventhandler.c: 418: {
  4125                           ;eventhandler.c: 419: greenWentHigh.eventFlag = 0;
  4126  0180  01F0               	clrf	_greenWentHigh
  4127                           
  4128                           ;eventhandler.c: 420: greenWentLow.eventFlag = 0;
  4129  0181  01AD               	clrf	_greenWentLow
  4130                           
  4131                           ;eventhandler.c: 421: return greenSteadyLowEvent;
  4132  0182  3005               	movlw	5
  4133  0183  0008               	return
  4134  0184                     l2603:	
  4135                           ;eventhandler.c: 422: }
  4136                           ;eventhandler.c: 423: }
  4137                           
  4138                           
  4139                           ;eventhandler.c: 424: else if ( greenWentHigh.eventFlag )
  4140  0184  0870               	movf	_greenWentHigh,w
  4141  0185  1903               	btfsc	3,2
  4142  0186  299F               	goto	l2613
  4143                           
  4144                           ;eventhandler.c: 425: {
  4145                           ;eventhandler.c: 426: if (systick - greenWentHigh.eventTime > 1000)
  4146  0187  0971               	comf	_greenWentHigh+1,w
  4147  0188  00D4               	movwf	??_getRunEvent
  4148  0189  0972               	comf	_greenWentHigh+2,w
  4149  018A  00D5               	movwf	??_getRunEvent+1
  4150  018B  0AD4               	incf	??_getRunEvent,f
  4151  018C  1903               	skipnz
  4152  018D  0AD5               	incf	??_getRunEvent+1,f
  4153  018E  0873               	movf	_systick,w
  4154  018F  0754               	addwf	??_getRunEvent,w
  4155  0190  00D6               	movwf	??_getRunEvent+2
  4156  0191  0874               	movf	_systick+1,w
  4157  0192  3D55               	addwfc	??_getRunEvent+1,w
  4158  0193  00D7               	movwf	??_getRunEvent+3
  4159  0194  3003               	movlw	3
  4160  0195  0257               	subwf	??_getRunEvent+3,w
  4161  0196  30E9               	movlw	233
  4162  0197  1903               	skipnz
  4163  0198  0256               	subwf	??_getRunEvent+2,w
  4164  0199  1C03               	skipc
  4165  019A  29A9               	goto	l2623
  4166                           
  4167                           ;eventhandler.c: 427: {
  4168                           ;eventhandler.c: 428: greenWentHigh.eventFlag = 0;
  4169  019B  01F0               	clrf	_greenWentHigh
  4170                           
  4171                           ;eventhandler.c: 429: greenWentLow.eventFlag = 0;
  4172  019C  01AD               	clrf	_greenWentLow
  4173                           
  4174                           ;eventhandler.c: 430: return multipleErrorEvent();
  4175  019D  24CB               	fcall	_multipleErrorEvent
  4176  019E  0008               	return
  4177  019F                     l2613:	
  4178                           ;eventhandler.c: 431: }
  4179                           ;eventhandler.c: 432: }
  4180                           
  4181                           
  4182                           ;eventhandler.c: 433: else if (redWentHigh.eventFlag || redWentLow.eventFlag)
  4183  019F  0020               	movlb	0	; select bank0
  4184  01A0  082A               	movf	_redWentHigh,w
  4185  01A1  1903               	btfsc	3,2
  4186  01A2  0827               	movf	_redWentLow,w
  4187  01A3  1903               	btfsc	3,2
  4188  01A4  29A9               	goto	l2623
  4189                           
  4190                           ;eventhandler.c: 434: {
  4191                           ;eventhandler.c: 435: redWentHigh.eventFlag = 0;
  4192  01A5  01AA               	clrf	_redWentHigh
  4193                           
  4194                           ;eventhandler.c: 436: redWentLow.eventFlag = 0;
  4195  01A6  01A7               	clrf	_redWentLow
  4196                           
  4197                           ;eventhandler.c: 437: return multipleErrorEvent();
  4198  01A7  24CB               	fcall	_multipleErrorEvent
  4199  01A8  0008               	return
  4200  01A9                     l2623:	
  4201                           
  4202                           ;eventhandler.c: 438: }
  4203                           ;eventhandler.c: 440: return noRunEvent;
  4204  01A9  3000               	movlw	0
  4205  01AA  0008               	return
  4206  01AB                     __end_of_getRunEvent:	
  4207                           
  4208                           	psect	text34
  4209  04CB                     __ptext34:	
  4210 ;; *************** function _multipleErrorEvent *****************
  4211 ;; Defined at:
  4212 ;;		line 357 in file "../source/eventhandler.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      enum E2354
  4219 ;; Registers used:
  4220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1
  4226 ;;      Params:         0       0       0
  4227 ;;      Locals:         0       0       0
  4228 ;;      Temps:          0       1       0
  4229 ;;      Totals:         0       1       0
  4230 ;;Total ram usage:        1 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    4
  4233 ;; This function calls:
  4234 ;;		_beepRepeatedly
  4235 ;;		_timerLock
  4236 ;; This function is called by:
  4237 ;;		_getRunEvent
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           
  4242                           ;psect for function _multipleErrorEvent
  4243  04CB                     _multipleErrorEvent:	
  4244                           
  4245                           ;eventhandler.c: 359: errorCount+=1;
  4246                           
  4247                           ;incstack = 0
  4248                           ; Regs used in _multipleErrorEvent: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4249  04CB  3001               	movlw	1
  4250  04CC  0020               	movlb	0	; select bank0
  4251  04CD  00CE               	movwf	??_multipleErrorEvent
  4252  04CE  084E               	movf	??_multipleErrorEvent,w
  4253  04CF  07C5               	addwf	_errorCount,f
  4254                           
  4255                           ;eventhandler.c: 360: if (errorCount > 10)
  4256  04D0  300B               	movlw	11
  4257  04D1  0245               	subwf	_errorCount,w
  4258  04D2  1C03               	skipc
  4259  04D3  2CE3               	goto	l2407
  4260                           
  4261                           ;eventhandler.c: 361: {
  4262                           ;eventhandler.c: 362: beepRepeatedly ( 100, 1);
  4263  04D4  3064               	movlw	100
  4264  04D5  00CA               	movwf	beepRepeatedly@period
  4265  04D6  3000               	movlw	0
  4266  04D7  00CB               	movwf	beepRepeatedly@period+1
  4267  04D8  3001               	movlw	1
  4268  04D9  00CC               	movwf	beepRepeatedly@n
  4269  04DA  3000               	movlw	0
  4270  04DB  00CD               	movwf	beepRepeatedly@n+1
  4271  04DC  2519               	fcall	_beepRepeatedly
  4272                           
  4273                           ;eventhandler.c: 363: errorCount = 0;
  4274  04DD  0020               	movlb	0	; select bank0
  4275  04DE  01C5               	clrf	_errorCount
  4276                           
  4277                           ;eventhandler.c: 364: timerLock(runSMTimer);
  4278  04DF  083A               	movf	_runSMTimer,w
  4279  04E0  25D6               	fcall	_timerLock
  4280                           
  4281                           ;eventhandler.c: 365: return errorEvent;
  4282  04E1  3006               	movlw	6
  4283  04E2  0008               	return
  4284  04E3                     l2407:	
  4285                           
  4286                           ;eventhandler.c: 366: }
  4287                           ;eventhandler.c: 368: return noRunEvent;
  4288  04E3  3000               	movlw	0
  4289  04E4  0008               	return
  4290  04E5                     __end_of_multipleErrorEvent:	
  4291                           
  4292                           	psect	text35
  4293  0519                     __ptext35:	
  4294 ;; *************** function _beepRepeatedly *****************
  4295 ;; Defined at:
  4296 ;;		line 82 in file "../source/beeper.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  period          2    0[BANK0 ] int 
  4299 ;;  n               2    2[BANK0 ] int 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2, status,0
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1
  4311 ;;      Params:         0       4       0
  4312 ;;      Locals:         0       0       0
  4313 ;;      Temps:          0       0       0
  4314 ;;      Totals:         0       4       0
  4315 ;;Total ram usage:        4 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    3
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_run_BeepReceived
  4322 ;;		_run_GreenSteadyLow
  4323 ;;		_multipleErrorEvent
  4324 ;;		_initialise
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           
  4329                           ;psect for function _beepRepeatedly
  4330  0519                     _beepRepeatedly:	
  4331                           
  4332                           ;beeper.c: 84: repeatedBeeping = !0;
  4333                           
  4334                           ;incstack = 0
  4335                           ; Regs used in _beepRepeatedly: [wreg+status,2+status,0]
  4336  0519  0020               	movlb	0	; select bank0
  4337  051A  01BF               	clrf	_repeatedBeeping
  4338  051B  0ABF               	incf	_repeatedBeeping,f
  4339                           
  4340                           ;beeper.c: 85: if (n != -1)
  4341  051C  0A4C               	incf	beepRepeatedly@n,w
  4342  051D  1903               	btfsc	3,2
  4343  051E  0A4D               	incf	beepRepeatedly@n+1,w
  4344  051F  1903               	btfsc	3,2
  4345  0520  2D25               	goto	l2339
  4346                           
  4347                           ;beeper.c: 86: nBeeps = n * 2;
  4348  0521  354C               	lslf	beepRepeatedly@n,w
  4349  0522  00B0               	movwf	_nBeeps
  4350  0523  0D4D               	rlf	beepRepeatedly@n+1,w
  4351  0524  2D28               	goto	L2
  4352  0525                     l2339:	
  4353                           
  4354                           ;beeper.c: 87: else
  4355                           ;beeper.c: 88: nBeeps = -1;
  4356  0525  30FF               	movlw	255
  4357  0526  00B0               	movwf	_nBeeps
  4358  0527  30FF               	movlw	255
  4359  0528                     L2:	
  4360  0528  00B1               	movwf	_nBeeps+1
  4361                           
  4362                           ;beeper.c: 89: beeperOn = 0;
  4363  0529  01BE               	clrf	_beeperOn
  4364                           
  4365                           ;beeper.c: 90: beepRate = period;
  4366  052A  084B               	movf	beepRepeatedly@period+1,w
  4367  052B  00E1               	movwf	_beepRate+1
  4368  052C  084A               	movf	beepRepeatedly@period,w
  4369  052D  00E0               	movwf	_beepRate
  4370                           
  4371                           ;beeper.c: 91: beeperToggle = 0;
  4372  052E  01C0               	clrf	_beeperToggle
  4373  052F  0008               	return
  4374  0530                     __end_of_beepRepeatedly:	
  4375                           
  4376                           	psect	text36
  4377  03F9                     __ptext36:	
  4378 ;; *************** function _longTimerRead *****************
  4379 ;; Defined at:
  4380 ;;		line 224 in file "../source/timer.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  index           1    wreg     unsigned char 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  index           1    9[BANK0 ] unsigned char 
  4385 ;;  result          4    5[BANK0 ] unsigned long 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  4    0[BANK0 ] unsigned long 
  4388 ;; Registers used:
  4389 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMMON   BANK0   BANK1
  4395 ;;      Params:         0       4       0
  4396 ;;      Locals:         0       5       0
  4397 ;;      Temps:          0       1       0
  4398 ;;      Totals:         0      10       0
  4399 ;;Total ram usage:       10 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:    3
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_getRunEvent
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           
  4410                           ;psect for function _longTimerRead
  4411  03F9                     _longTimerRead:	
  4412                           
  4413                           ;incstack = 0
  4414                           ; Regs used in _longTimerRead: [wreg+fsr1l+fsr1h+status,2+status,0]
  4415                           ;longTimerRead@index stored from wreg
  4416  03F9  0020               	movlb	0	; select bank0
  4417  03FA  00D3               	movwf	longTimerRead@index
  4418                           
  4419                           ;timer.c: 226: unsigned long result = 0xFFFFFFFF;
  4420  03FB  30FF               	movlw	255
  4421  03FC  00D2               	movwf	longTimerRead@result+3
  4422  03FD  30FF               	movlw	255
  4423  03FE  00D1               	movwf	longTimerRead@result+2
  4424  03FF  30FF               	movlw	255
  4425  0400  00D0               	movwf	longTimerRead@result+1
  4426  0401  30FF               	movlw	255
  4427  0402  00CF               	movwf	longTimerRead@result
  4428                           
  4429                           ;timer.c: 227: if ( index < numLongTimers )
  4430  0403  0875               	movf	_numLongTimers,w
  4431  0404  0253               	subwf	longTimerRead@index,w
  4432  0405  1803               	skipnc
  4433  0406  2C1A               	goto	l1815
  4434                           
  4435                           ;timer.c: 228: {
  4436                           ;timer.c: 229: result = longTimers[index];
  4437  0407  0853               	movf	longTimerRead@index,w
  4438  0408  00CE               	movwf	??_longTimerRead
  4439  0409  3001               	movlw	1
  4440  040A                     u925:	
  4441  040A  35CE               	lslf	??_longTimerRead,f
  4442  040B  3EFF               	addlw	-1
  4443  040C  1D03               	skipz
  4444  040D  2C0A               	goto	u925
  4445  040E  354E               	lslf	??_longTimerRead,w
  4446  040F  3E20               	addlw	(low (_longTimers| 0))& (0+255)
  4447  0410  0086               	movwf	6
  4448  0411  0187               	clrf	7
  4449  0412  3F40               	moviw [0]fsr1
  4450  0413  00CF               	movwf	longTimerRead@result
  4451  0414  3F41               	moviw [1]fsr1
  4452  0415  00D0               	movwf	longTimerRead@result+1
  4453  0416  3F42               	moviw [2]fsr1
  4454  0417  00D1               	movwf	longTimerRead@result+2
  4455  0418  3F43               	moviw [3]fsr1
  4456  0419  00D2               	movwf	longTimerRead@result+3
  4457  041A                     l1815:	
  4458                           
  4459                           ;timer.c: 230: }
  4460                           ;timer.c: 231: return ( result );
  4461  041A  0852               	movf	longTimerRead@result+3,w
  4462  041B  00CD               	movwf	?_longTimerRead+3
  4463  041C  0851               	movf	longTimerRead@result+2,w
  4464  041D  00CC               	movwf	?_longTimerRead+2
  4465  041E  0850               	movf	longTimerRead@result+1,w
  4466  041F  00CB               	movwf	?_longTimerRead+1
  4467  0420  084F               	movf	longTimerRead@result,w
  4468  0421  00CA               	movwf	?_longTimerRead
  4469  0422  0008               	return
  4470  0423                     __end_of_longTimerRead:	
  4471                           
  4472                           	psect	text37
  4473  04E5                     __ptext37:	
  4474 ;; *************** function _longTimerLock *****************
  4475 ;; Defined at:
  4476 ;;		line 242 in file "../source/timer.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  index           1    wreg     unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  index           1    1[BANK0 ] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1
  4490 ;;      Params:         0       0       0
  4491 ;;      Locals:         0       1       0
  4492 ;;      Temps:          0       1       0
  4493 ;;      Totals:         0       2       0
  4494 ;;Total ram usage:        2 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    3
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_run_BeepReceived
  4501 ;;		_getRunEvent
  4502 ;;		_longTimerGet
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           
  4507                           ;psect for function _longTimerLock
  4508  04E5                     _longTimerLock:	
  4509                           
  4510                           ;incstack = 0
  4511                           ; Regs used in _longTimerLock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4512                           ;longTimerLock@index stored from wreg
  4513  04E5  0020               	movlb	0	; select bank0
  4514  04E6  00CB               	movwf	longTimerLock@index
  4515                           
  4516                           ;timer.c: 244: if ( index < numLongTimers )
  4517  04E7  0875               	movf	_numLongTimers,w
  4518  04E8  024B               	subwf	longTimerLock@index,w
  4519  04E9  1803               	skipnc
  4520  04EA  0008               	return
  4521                           
  4522                           ;timer.c: 245: {
  4523                           ;timer.c: 246: longTimers[index] = 0xFFFFFFFF;
  4524  04EB  084B               	movf	longTimerLock@index,w
  4525  04EC  00CA               	movwf	??_longTimerLock
  4526  04ED  3001               	movlw	1
  4527  04EE                     u855:	
  4528  04EE  35CA               	lslf	??_longTimerLock,f
  4529  04EF  3EFF               	addlw	-1
  4530  04F0  1D03               	skipz
  4531  04F1  2CEE               	goto	u855
  4532  04F2  354A               	lslf	??_longTimerLock,w
  4533  04F3  3E20               	addlw	(low (_longTimers| 0))& (0+255)
  4534  04F4  0086               	movwf	6
  4535  04F5  0187               	clrf	7
  4536  04F6  30FF               	movlw	255
  4537  04F7  3FC0               	movwi [0]fsr1
  4538  04F8  30FF               	movlw	255
  4539  04F9  3FC1               	movwi [1]fsr1
  4540  04FA  30FF               	movlw	255
  4541  04FB  3FC2               	movwi [2]fsr1
  4542  04FC  30FF               	movlw	255
  4543  04FD  3FC3               	movwi [3]fsr1
  4544  04FE  0008               	return
  4545  04FF                     __end_of_longTimerLock:	
  4546                           
  4547                           	psect	text38
  4548  0241                     __ptext38:	
  4549 ;; *************** function _getInitEvent *****************
  4550 ;; Defined at:
  4551 ;;		line 238 in file "../source/eventhandler.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      enum E2237
  4558 ;; Registers used:
  4559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1
  4565 ;;      Params:         0       0       0
  4566 ;;      Locals:         0       0       0
  4567 ;;      Temps:          0       4       0
  4568 ;;      Totals:         0       4       0
  4569 ;;Total ram usage:        4 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    4
  4572 ;; This function calls:
  4573 ;;		_timerLock
  4574 ;;		_timerRead
  4575 ;; This function is called by:
  4576 ;;		_eventHandlerService
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function _getInitEvent
  4582  0241                     _getInitEvent:	
  4583                           
  4584                           ;eventhandler.c: 240: if ( timerRead(initSMTimer) == 0 )
  4585                           
  4586                           ;incstack = 0
  4587                           ; Regs used in _getInitEvent: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4588  0241  0020               	movlb	0	; select bank0
  4589  0242  083C               	movf	_initSMTimer,w
  4590  0243  2530               	fcall	_timerRead
  4591  0244  0020               	movlb	0	; select bank0
  4592  0245  084A               	movf	?_timerRead,w
  4593  0246  044B               	iorwf	?_timerRead+1,w
  4594  0247  1D03               	btfss	3,2
  4595  0248  2A4D               	goto	l2445
  4596                           
  4597                           ;eventhandler.c: 241: {
  4598                           ;eventhandler.c: 242: timerLock( initSMTimer );
  4599  0249  083C               	movf	_initSMTimer,w
  4600  024A  25D6               	fcall	_timerLock
  4601                           
  4602                           ;eventhandler.c: 243: return initTimeoutEvent;
  4603  024B  3001               	movlw	1
  4604  024C  0008               	return
  4605  024D                     l2445:	
  4606                           ;eventhandler.c: 244: }
  4607                           
  4608                           
  4609                           ;eventhandler.c: 245: else if ( redWentHigh.eventFlag )
  4610  024D  0020               	movlb	0	; select bank0
  4611  024E  082A               	movf	_redWentHigh,w
  4612  024F  1903               	btfsc	3,2
  4613  0250  2A6F               	goto	l2463
  4614                           
  4615                           ;eventhandler.c: 246: {
  4616                           ;eventhandler.c: 248: if (greenWentHigh.eventFlag )
  4617  0251  0870               	movf	_greenWentHigh,w
  4618  0252  1903               	btfsc	3,2
  4619  0253  2A6C               	goto	l2457
  4620                           
  4621                           ;eventhandler.c: 249: {
  4622                           ;eventhandler.c: 250: if ( systick - greenWentHigh.eventTime >= 2)
  4623  0254  0971               	comf	_greenWentHigh+1,w
  4624  0255  00D0               	movwf	??_getInitEvent
  4625  0256  0972               	comf	_greenWentHigh+2,w
  4626  0257  00D1               	movwf	??_getInitEvent+1
  4627  0258  0AD0               	incf	??_getInitEvent,f
  4628  0259  1903               	skipnz
  4629  025A  0AD1               	incf	??_getInitEvent+1,f
  4630  025B  0873               	movf	_systick,w
  4631  025C  0750               	addwf	??_getInitEvent,w
  4632  025D  00D2               	movwf	??_getInitEvent+2
  4633  025E  0874               	movf	_systick+1,w
  4634  025F  3D51               	addwfc	??_getInitEvent+1,w
  4635  0260  00D3               	movwf	??_getInitEvent+3
  4636  0261  3000               	movlw	0
  4637  0262  0253               	subwf	??_getInitEvent+3,w
  4638  0263  3002               	movlw	2
  4639  0264  1903               	skipnz
  4640  0265  0252               	subwf	??_getInitEvent+2,w
  4641  0266  1C03               	skipc
  4642  0267  2AD2               	goto	l2517
  4643                           
  4644                           ;eventhandler.c: 251: {
  4645                           ;eventhandler.c: 252: greenWentHigh.eventFlag = 0;
  4646  0268  01F0               	clrf	_greenWentHigh
  4647                           
  4648                           ;eventhandler.c: 253: redWentHigh.eventFlag = 0;
  4649  0269  01AA               	clrf	_redWentHigh
  4650                           
  4651                           ;eventhandler.c: 254: return bothHighEvent;
  4652  026A  3006               	movlw	6
  4653  026B  0008               	return
  4654  026C                     l2457:	
  4655                           ;eventhandler.c: 255: }
  4656                           ;eventhandler.c: 256: }
  4657                           
  4658                           
  4659                           ;eventhandler.c: 257: else
  4660                           ;eventhandler.c: 258: {
  4661                           ;eventhandler.c: 259: redWentHigh.eventFlag = 0;
  4662  026C  01AA               	clrf	_redWentHigh
  4663                           
  4664                           ;eventhandler.c: 260: return redHighEvent;
  4665  026D  3004               	movlw	4
  4666  026E  0008               	return
  4667  026F                     l2463:	
  4668                           ;eventhandler.c: 261: }
  4669                           ;eventhandler.c: 262: }
  4670                           
  4671                           
  4672                           ;eventhandler.c: 263: else if ( redWentLow.eventFlag )
  4673  026F  0827               	movf	_redWentLow,w
  4674  0270  1903               	btfsc	3,2
  4675  0271  2A90               	goto	l2481
  4676                           
  4677                           ;eventhandler.c: 264: {
  4678                           ;eventhandler.c: 265: if (greenWentLow.eventFlag )
  4679  0272  082D               	movf	_greenWentLow,w
  4680  0273  1903               	btfsc	3,2
  4681  0274  2A8D               	goto	l2475
  4682                           
  4683                           ;eventhandler.c: 266: {
  4684                           ;eventhandler.c: 267: if ( systick - greenWentLow.eventTime >= 2)
  4685  0275  092E               	comf	_greenWentLow+1,w
  4686  0276  00D0               	movwf	??_getInitEvent
  4687  0277  092F               	comf	_greenWentLow+2,w
  4688  0278  00D1               	movwf	??_getInitEvent+1
  4689  0279  0AD0               	incf	??_getInitEvent,f
  4690  027A  1903               	skipnz
  4691  027B  0AD1               	incf	??_getInitEvent+1,f
  4692  027C  0873               	movf	_systick,w
  4693  027D  0750               	addwf	??_getInitEvent,w
  4694  027E  00D2               	movwf	??_getInitEvent+2
  4695  027F  0874               	movf	_systick+1,w
  4696  0280  3D51               	addwfc	??_getInitEvent+1,w
  4697  0281  00D3               	movwf	??_getInitEvent+3
  4698  0282  3000               	movlw	0
  4699  0283  0253               	subwf	??_getInitEvent+3,w
  4700  0284  3002               	movlw	2
  4701  0285  1903               	skipnz
  4702  0286  0252               	subwf	??_getInitEvent+2,w
  4703  0287  1C03               	skipc
  4704  0288  2AD2               	goto	l2517
  4705                           
  4706                           ;eventhandler.c: 268: {
  4707                           ;eventhandler.c: 269: greenWentLow.eventFlag = 0;
  4708  0289  01AD               	clrf	_greenWentLow
  4709                           
  4710                           ;eventhandler.c: 270: redWentLow.eventFlag = 0;
  4711  028A  01A7               	clrf	_redWentLow
  4712                           
  4713                           ;eventhandler.c: 271: return bothLowEvent;
  4714  028B  3007               	movlw	7
  4715  028C  0008               	return
  4716  028D                     l2475:	
  4717                           ;eventhandler.c: 272: }
  4718                           ;eventhandler.c: 273: }
  4719                           
  4720                           
  4721                           ;eventhandler.c: 274: else
  4722                           ;eventhandler.c: 275: {
  4723                           ;eventhandler.c: 276: redWentLow.eventFlag = 0;
  4724  028D  01A7               	clrf	_redWentLow
  4725                           
  4726                           ;eventhandler.c: 277: return redLowEvent;
  4727  028E  3005               	movlw	5
  4728  028F  0008               	return
  4729  0290                     l2481:	
  4730                           ;eventhandler.c: 278: }
  4731                           ;eventhandler.c: 279: }
  4732                           
  4733                           
  4734                           ;eventhandler.c: 280: else if ( greenWentHigh.eventFlag )
  4735  0290  0870               	movf	_greenWentHigh,w
  4736  0291  1903               	btfsc	3,2
  4737  0292  2AB1               	goto	l2499
  4738                           
  4739                           ;eventhandler.c: 281: {
  4740                           ;eventhandler.c: 282: if (redWentHigh.eventFlag )
  4741  0293  082A               	movf	_redWentHigh,w
  4742  0294  1903               	btfsc	3,2
  4743  0295  2AAE               	goto	l2493
  4744                           
  4745                           ;eventhandler.c: 283: {
  4746                           ;eventhandler.c: 284: if ( systick - redWentHigh.eventTime >= 2)
  4747  0296  092B               	comf	_redWentHigh+1,w
  4748  0297  00D0               	movwf	??_getInitEvent
  4749  0298  092C               	comf	_redWentHigh+2,w
  4750  0299  00D1               	movwf	??_getInitEvent+1
  4751  029A  0AD0               	incf	??_getInitEvent,f
  4752  029B  1903               	skipnz
  4753  029C  0AD1               	incf	??_getInitEvent+1,f
  4754  029D  0873               	movf	_systick,w
  4755  029E  0750               	addwf	??_getInitEvent,w
  4756  029F  00D2               	movwf	??_getInitEvent+2
  4757  02A0  0874               	movf	_systick+1,w
  4758  02A1  3D51               	addwfc	??_getInitEvent+1,w
  4759  02A2  00D3               	movwf	??_getInitEvent+3
  4760  02A3  3000               	movlw	0
  4761  02A4  0253               	subwf	??_getInitEvent+3,w
  4762  02A5  3002               	movlw	2
  4763  02A6  1903               	skipnz
  4764  02A7  0252               	subwf	??_getInitEvent+2,w
  4765  02A8  1C03               	skipc
  4766  02A9  2AD2               	goto	l2517
  4767                           
  4768                           ;eventhandler.c: 285: {
  4769                           ;eventhandler.c: 286: greenWentHigh.eventFlag = 0;
  4770  02AA  01F0               	clrf	_greenWentHigh
  4771                           
  4772                           ;eventhandler.c: 287: redWentHigh.eventFlag = 0;
  4773  02AB  01AA               	clrf	_redWentHigh
  4774                           
  4775                           ;eventhandler.c: 288: return bothHighEvent;
  4776  02AC  3006               	movlw	6
  4777  02AD  0008               	return
  4778  02AE                     l2493:	
  4779                           ;eventhandler.c: 289: }
  4780                           ;eventhandler.c: 290: }
  4781                           
  4782                           
  4783                           ;eventhandler.c: 291: else
  4784                           ;eventhandler.c: 292: {
  4785                           ;eventhandler.c: 293: greenWentHigh.eventFlag = 0;
  4786  02AE  01F0               	clrf	_greenWentHigh
  4787                           
  4788                           ;eventhandler.c: 294: return greenHighEvent;
  4789  02AF  3002               	movlw	2
  4790  02B0  0008               	return
  4791  02B1                     l2499:	
  4792                           ;eventhandler.c: 295: }
  4793                           ;eventhandler.c: 297: }
  4794                           
  4795                           
  4796                           ;eventhandler.c: 298: else if ( greenWentLow.eventFlag )
  4797  02B1  082D               	movf	_greenWentLow,w
  4798  02B2  1903               	btfsc	3,2
  4799  02B3  2AD2               	goto	l2517
  4800                           
  4801                           ;eventhandler.c: 299: {
  4802                           ;eventhandler.c: 300: if (redWentLow.eventFlag )
  4803  02B4  0827               	movf	_redWentLow,w
  4804  02B5  1903               	btfsc	3,2
  4805  02B6  2ACF               	goto	l2511
  4806                           
  4807                           ;eventhandler.c: 301: {
  4808                           ;eventhandler.c: 302: if ( systick - redWentLow.eventTime >= 2)
  4809  02B7  0928               	comf	_redWentLow+1,w
  4810  02B8  00D0               	movwf	??_getInitEvent
  4811  02B9  0929               	comf	_redWentLow+2,w
  4812  02BA  00D1               	movwf	??_getInitEvent+1
  4813  02BB  0AD0               	incf	??_getInitEvent,f
  4814  02BC  1903               	skipnz
  4815  02BD  0AD1               	incf	??_getInitEvent+1,f
  4816  02BE  0873               	movf	_systick,w
  4817  02BF  0750               	addwf	??_getInitEvent,w
  4818  02C0  00D2               	movwf	??_getInitEvent+2
  4819  02C1  0874               	movf	_systick+1,w
  4820  02C2  3D51               	addwfc	??_getInitEvent+1,w
  4821  02C3  00D3               	movwf	??_getInitEvent+3
  4822  02C4  3000               	movlw	0
  4823  02C5  0253               	subwf	??_getInitEvent+3,w
  4824  02C6  3002               	movlw	2
  4825  02C7  1903               	skipnz
  4826  02C8  0252               	subwf	??_getInitEvent+2,w
  4827  02C9  1C03               	skipc
  4828  02CA  2AD2               	goto	l2517
  4829                           
  4830                           ;eventhandler.c: 303: {
  4831                           ;eventhandler.c: 304: greenWentLow.eventFlag = 0;
  4832  02CB  01AD               	clrf	_greenWentLow
  4833                           
  4834                           ;eventhandler.c: 305: redWentLow.eventFlag = 0;
  4835  02CC  01A7               	clrf	_redWentLow
  4836                           
  4837                           ;eventhandler.c: 306: return bothLowEvent;
  4838  02CD  3007               	movlw	7
  4839  02CE  0008               	return
  4840  02CF                     l2511:	
  4841                           ;eventhandler.c: 307: }
  4842                           ;eventhandler.c: 308: }
  4843                           
  4844                           
  4845                           ;eventhandler.c: 309: else
  4846                           ;eventhandler.c: 310: {
  4847                           ;eventhandler.c: 311: greenWentLow.eventFlag = 0;
  4848  02CF  01AD               	clrf	_greenWentLow
  4849                           
  4850                           ;eventhandler.c: 312: return greenLowEvent;
  4851  02D0  3003               	movlw	3
  4852  02D1  0008               	return
  4853  02D2                     l2517:	
  4854                           
  4855                           ;eventhandler.c: 313: }
  4856                           ;eventhandler.c: 314: }
  4857                           ;eventhandler.c: 316: return noInitEvent;
  4858  02D2  3000               	movlw	0
  4859  02D3  0008               	return
  4860  02D4                     __end_of_getInitEvent:	
  4861                           
  4862                           	psect	text39
  4863  05D6                     __ptext39:	
  4864 ;; *************** function _timerLock *****************
  4865 ;; Defined at:
  4866 ;;		line 157 in file "../source/timer.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  index           1    wreg     unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  index           1    0[BANK0 ] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1
  4880 ;;      Params:         0       0       0
  4881 ;;      Locals:         0       1       0
  4882 ;;      Temps:          0       0       0
  4883 ;;      Totals:         0       1       0
  4884 ;;Total ram usage:        1 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    3
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_initS8_bothLow
  4891 ;;		_getInitEvent
  4892 ;;		_run_Initialised
  4893 ;;		_run_GreenSteadyLow
  4894 ;;		_multipleErrorEvent
  4895 ;;		_getRunEvent
  4896 ;;		_timerGet
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           
  4901                           ;psect for function _timerLock
  4902  05D6                     _timerLock:	
  4903                           
  4904                           ;incstack = 0
  4905                           ; Regs used in _timerLock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4906                           ;timerLock@index stored from wreg
  4907  05D6  0020               	movlb	0	; select bank0
  4908  05D7  00CA               	movwf	timerLock@index
  4909                           
  4910                           ;timer.c: 159: if ( index < numTimers )
  4911  05D8  0876               	movf	_numTimers,w
  4912  05D9  024A               	subwf	timerLock@index,w
  4913  05DA  1803               	skipnc
  4914  05DB  0008               	return
  4915                           
  4916                           ;timer.c: 160: {
  4917                           ;timer.c: 161: timers[index] = 0xFFFF;
  4918  05DC  354A               	lslf	timerLock@index,w
  4919  05DD  3EA0               	addlw	(low (_timers| 0))& (0+255)
  4920  05DE  0086               	movwf	6
  4921  05DF  0187               	clrf	7
  4922  05E0  30FF               	movlw	255
  4923  05E1  3FC0               	movwi [0]fsr1
  4924  05E2  30FF               	movlw	255
  4925  05E3  3FC1               	movwi [1]fsr1
  4926  05E4  0008               	return
  4927  05E5                     __end_of_timerLock:	
  4928                           
  4929                           	psect	text40
  4930  0460                     __ptext40:	
  4931 ;; *************** function ___wmul *****************
  4932 ;; Defined at:
  4933 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4936 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  product         2    4[BANK0 ] unsigned int 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  2    0[BANK0 ] unsigned int 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1
  4948 ;;      Params:         0       4       0
  4949 ;;      Locals:         0       2       0
  4950 ;;      Temps:          0       0       0
  4951 ;;      Totals:         0       6       0
  4952 ;;Total ram usage:        6 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    3
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_eventHandlerService
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           
  4963                           ;psect for function ___wmul
  4964  0460                     ___wmul:	
  4965                           
  4966                           ;incstack = 0
  4967                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4968  0460  0020               	movlb	0	; select bank0
  4969  0461  01CE               	clrf	___wmul@product
  4970  0462  01CF               	clrf	___wmul@product+1
  4971  0463                     l2757:	
  4972  0463  1C4A               	btfss	___wmul@multiplier,0
  4973  0464  2C69               	goto	l649
  4974  0465  084C               	movf	___wmul@multiplicand,w
  4975  0466  07CE               	addwf	___wmul@product,f
  4976  0467  084D               	movf	___wmul@multiplicand+1,w
  4977  0468  3DCF               	addwfc	___wmul@product+1,f
  4978  0469                     l649:	
  4979  0469  3001               	movlw	1
  4980  046A                     u1965:	
  4981  046A  35CC               	lslf	___wmul@multiplicand,f
  4982  046B  0DCD               	rlf	___wmul@multiplicand+1,f
  4983  046C  0B89               	decfsz	9,f
  4984  046D  2C6A               	goto	u1965
  4985  046E  3001               	movlw	1
  4986  046F                     u1975:	
  4987  046F  36CB               	lsrf	___wmul@multiplier+1,f
  4988  0470  0CCA               	rrf	___wmul@multiplier,f
  4989  0471  0B89               	decfsz	9,f
  4990  0472  2C6F               	goto	u1975
  4991  0473  084A               	movf	___wmul@multiplier,w
  4992  0474  044B               	iorwf	___wmul@multiplier+1,w
  4993  0475  1D03               	btfss	3,2
  4994  0476  2C63               	goto	l2757
  4995  0477  084F               	movf	___wmul@product+1,w
  4996  0478  00CB               	movwf	?___wmul+1
  4997  0479  084E               	movf	___wmul@product,w
  4998  047A  00CA               	movwf	?___wmul
  4999  047B  0008               	return
  5000  047C                     __end_of___wmul:	
  5001                           
  5002                           	psect	text41
  5003  03CE                     __ptext41:	
  5004 ;; *************** function _beeperService *****************
  5005 ;; Defined at:
  5006 ;;		line 103 in file "../source/beeper.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1
  5020 ;;      Params:         0       0       0
  5021 ;;      Locals:         0       0       0
  5022 ;;      Temps:          0       0       0
  5023 ;;      Totals:         0       0       0
  5024 ;;Total ram usage:        0 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    4
  5027 ;; This function calls:
  5028 ;;		_timerRead
  5029 ;;		_timerSet
  5030 ;; This function is called by:
  5031 ;;		_main
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           
  5036                           ;psect for function _beeperService
  5037  03CE                     _beeperService:	
  5038                           
  5039                           ;beeper.c: 105: if (repeatedBeeping)
  5040                           
  5041                           ;incstack = 0
  5042                           ; Regs used in _beeperService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5043  03CE  0020               	movlb	0	; select bank0
  5044  03CF  083F               	movf	_repeatedBeeping,w
  5045  03D0  1903               	btfsc	3,2
  5046  03D1  0008               	return
  5047                           
  5048                           ;beeper.c: 106: {
  5049                           ;beeper.c: 107: if ( timerRead(beeperTimer) == 0 )
  5050  03D2  0841               	movf	_beeperTimer,w
  5051  03D3  2530               	fcall	_timerRead
  5052  03D4  0020               	movlb	0	; select bank0
  5053  03D5  084A               	movf	?_timerRead,w
  5054  03D6  044B               	iorwf	?_timerRead+1,w
  5055  03D7  1D03               	btfss	3,2
  5056  03D8  0008               	return
  5057                           
  5058                           ;beeper.c: 108: {
  5059                           ;beeper.c: 109: if (beeperToggle)
  5060  03D9  0840               	movf	_beeperToggle,w
  5061  03DA  1903               	btfsc	3,2
  5062  03DB  2BDF               	goto	l561
  5063                           
  5064                           ;beeper.c: 110: {
  5065                           ;beeper.c: 111: beeperToggle = 0;
  5066  03DC  01C0               	clrf	_beeperToggle
  5067                           
  5068                           ;beeper.c: 112: beeperOn = 0;
  5069  03DD  01BE               	clrf	_beeperOn
  5070                           
  5071                           ;beeper.c: 113: }
  5072  03DE  2BE3               	goto	l2831
  5073  03DF                     l561:	
  5074                           
  5075                           ;beeper.c: 114: else
  5076                           ;beeper.c: 115: {
  5077                           ;beeper.c: 116: beeperToggle = !0;
  5078  03DF  01C0               	clrf	_beeperToggle
  5079  03E0  0AC0               	incf	_beeperToggle,f
  5080                           
  5081                           ;beeper.c: 117: beeperOn = !0;
  5082  03E1  01BE               	clrf	_beeperOn
  5083  03E2  0ABE               	incf	_beeperOn,f
  5084  03E3                     l2831:	
  5085                           
  5086                           ;beeper.c: 118: }
  5087                           ;beeper.c: 120: if (nBeeps != -1)
  5088  03E3  0A30               	incf	_nBeeps,w
  5089  03E4  1903               	btfsc	3,2
  5090  03E5  0A31               	incf	_nBeeps+1,w
  5091  03E6  1903               	btfsc	3,2
  5092  03E7  2BF2               	goto	l2839
  5093                           
  5094                           ;beeper.c: 121: {
  5095                           ;beeper.c: 122: nBeeps--;
  5096  03E8  30FF               	movlw	255
  5097  03E9  07B0               	addwf	_nBeeps,f
  5098  03EA  30FF               	movlw	255
  5099  03EB  3DB1               	addwfc	_nBeeps+1,f
  5100                           
  5101                           ;beeper.c: 123: if (nBeeps == 0)
  5102  03EC  0830               	movf	_nBeeps,w
  5103  03ED  0431               	iorwf	_nBeeps+1,w
  5104  03EE  1D03               	btfss	3,2
  5105  03EF  2BF2               	goto	l2839
  5106                           
  5107                           ;beeper.c: 124: {
  5108                           ;beeper.c: 125: repeatedBeeping = 0;
  5109  03F0  01BF               	clrf	_repeatedBeeping
  5110                           
  5111                           ;beeper.c: 126: beeperOn = 0;
  5112  03F1  01BE               	clrf	_beeperOn
  5113  03F2                     l2839:	
  5114                           
  5115                           ;beeper.c: 127: }
  5116                           ;beeper.c: 128: }
  5117                           ;beeper.c: 129: timerSet( beeperTimer, beepRate );
  5118  03F2  0861               	movf	_beepRate+1,w
  5119  03F3  00CB               	movwf	timerSet@duration+1
  5120  03F4  0860               	movf	_beepRate,w
  5121  03F5  00CA               	movwf	timerSet@duration
  5122  03F6  0841               	movf	_beeperTimer,w
  5123  03F7  25E5               	fcall	_timerSet
  5124  03F8  0008               	return
  5125  03F9                     __end_of_beeperService:	
  5126                           
  5127                           	psect	text42
  5128  047C                     __ptext42:	
  5129 ;; *************** function _LEDService *****************
  5130 ;; Defined at:
  5131 ;;		line 47 in file "../source/LED.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;		None
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1
  5145 ;;      Params:         0       0       0
  5146 ;;      Locals:         0       0       0
  5147 ;;      Temps:          0       0       0
  5148 ;;      Totals:         0       0       0
  5149 ;;Total ram usage:        0 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    4
  5152 ;; This function calls:
  5153 ;;		_timerRead
  5154 ;;		_timerSet
  5155 ;; This function is called by:
  5156 ;;		_main
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           
  5161                           ;psect for function _LEDService
  5162  047C                     _LEDService:	
  5163                           
  5164                           ;LED.c: 49: if (flashing)
  5165                           
  5166                           ;incstack = 0
  5167                           ; Regs used in _LEDService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5168  047C  0020               	movlb	0	; select bank0
  5169  047D  0842               	movf	_flashing,w
  5170  047E  1903               	btfsc	3,2
  5171  047F  0008               	return
  5172                           
  5173                           ;LED.c: 50: {
  5174                           ;LED.c: 51: if ( timerRead(LEDTimer) == 0 )
  5175  0480  0844               	movf	_LEDTimer,w
  5176  0481  2530               	fcall	_timerRead
  5177  0482  0020               	movlb	0	; select bank0
  5178  0483  084A               	movf	?_timerRead,w
  5179  0484  044B               	iorwf	?_timerRead+1,w
  5180  0485  1D03               	btfss	3,2
  5181  0486  0008               	return
  5182                           
  5183                           ;LED.c: 52: {
  5184                           ;LED.c: 53: if (flasherToggle)
  5185  0487  0843               	movf	_flasherToggle,w
  5186  0488  1903               	btfsc	3,2
  5187  0489  2C8D               	goto	l331
  5188                           
  5189                           ;LED.c: 54: {
  5190                           ;LED.c: 55: flasherToggle = 0;
  5191  048A  01C3               	clrf	_flasherToggle
  5192                           
  5193                           ;LED.c: 56: PORTAbits.RA5 = 1;
  5194  048B  168C               	bsf	12,5	;volatile
  5195                           
  5196                           ;LED.c: 57: }
  5197  048C  2C90               	goto	l2803
  5198  048D                     l331:	
  5199                           
  5200                           ;LED.c: 58: else
  5201                           ;LED.c: 59: {
  5202                           ;LED.c: 60: flasherToggle = !0;
  5203  048D  01C3               	clrf	_flasherToggle
  5204  048E  0AC3               	incf	_flasherToggle,f
  5205                           
  5206                           ;LED.c: 61: PORTAbits.RA5 = 0;
  5207  048F  128C               	bcf	12,5	;volatile
  5208  0490                     l2803:	
  5209                           
  5210                           ;LED.c: 62: }
  5211                           ;LED.c: 63: timerSet( LEDTimer, flashRate );
  5212  0490  0863               	movf	_flashRate+1,w
  5213  0491  00CB               	movwf	timerSet@duration+1
  5214  0492  0862               	movf	_flashRate,w
  5215  0493  00CA               	movwf	timerSet@duration
  5216  0494  0844               	movf	_LEDTimer,w
  5217  0495  25E5               	fcall	_timerSet
  5218  0496  0008               	return
  5219  0497                     __end_of_LEDService:	
  5220                           
  5221                           	psect	text43
  5222  05E5                     __ptext43:	
  5223 ;; *************** function _timerSet *****************
  5224 ;; Defined at:
  5225 ;;		line 123 in file "../source/timer.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  index           1    wreg     unsigned char 
  5228 ;;  duration        2    0[BANK0 ] unsigned int 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  index           1    2[BANK0 ] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1
  5240 ;;      Params:         0       2       0
  5241 ;;      Locals:         0       1       0
  5242 ;;      Temps:          0       0       0
  5243 ;;      Totals:         0       3       0
  5244 ;;Total ram usage:        3 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    3
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_eventHandlerInit
  5251 ;;		_eventHandlerService
  5252 ;;		_init_Restart
  5253 ;;		_initS1_Timeout
  5254 ;;		_initS2_Timeout
  5255 ;;		_initS3_greenHigh
  5256 ;;		_initS4_greenLow
  5257 ;;		_initS5_redHigh
  5258 ;;		_initS6_redLow
  5259 ;;		_initS7_bothHigh
  5260 ;;		_initS8_bothLow
  5261 ;;		_run_BeepReceived
  5262 ;;		_run_GreenFlashing
  5263 ;;		_LEDInit
  5264 ;;		_LEDService
  5265 ;;		_beeperInit
  5266 ;;		_beeperService
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function _timerSet
  5272  05E5                     _timerSet:	
  5273                           
  5274                           ;incstack = 0
  5275                           ; Regs used in _timerSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  5276                           ;timerSet@index stored from wreg
  5277  05E5  0020               	movlb	0	; select bank0
  5278  05E6  00CC               	movwf	timerSet@index
  5279                           
  5280                           ;timer.c: 125: if ( index < numTimers )
  5281  05E7  0876               	movf	_numTimers,w
  5282  05E8  024C               	subwf	timerSet@index,w
  5283  05E9  1803               	skipnc
  5284  05EA  0008               	return
  5285                           
  5286                           ;timer.c: 126: {
  5287                           ;timer.c: 127: timers[index] = duration;
  5288  05EB  354C               	lslf	timerSet@index,w
  5289  05EC  3EA0               	addlw	(low (_timers| 0))& (0+255)
  5290  05ED  0086               	movwf	6
  5291  05EE  0187               	clrf	7
  5292  05EF  084A               	movf	timerSet@duration,w
  5293  05F0  3FC0               	movwi [0]fsr1
  5294  05F1  084B               	movf	timerSet@duration+1,w
  5295  05F2  3FC1               	movwi [1]fsr1
  5296  05F3  0008               	return
  5297  05F4                     __end_of_timerSet:	
  5298                           
  5299                           	psect	text44
  5300  0530                     __ptext44:	
  5301 ;; *************** function _timerRead *****************
  5302 ;; Defined at:
  5303 ;;		line 139 in file "../source/timer.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  index           1    wreg     unsigned char 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  index           1    5[BANK0 ] unsigned char 
  5308 ;;  result          2    3[BANK0 ] unsigned int 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  2    0[BANK0 ] unsigned int 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1
  5318 ;;      Params:         0       3       0
  5319 ;;      Locals:         0       3       0
  5320 ;;      Temps:          0       0       0
  5321 ;;      Totals:         0       6       0
  5322 ;;Total ram usage:        6 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    3
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_eventHandlerService
  5329 ;;		_getInitEvent
  5330 ;;		_getRunEvent
  5331 ;;		_LEDService
  5332 ;;		_beeperService
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           
  5337                           ;psect for function _timerRead
  5338  0530                     _timerRead:	
  5339                           
  5340                           ;incstack = 0
  5341                           ; Regs used in _timerRead: [wreg+fsr1l+fsr1h+status,2+status,0]
  5342                           ;timerRead@index stored from wreg
  5343  0530  0020               	movlb	0	; select bank0
  5344  0531  00CF               	movwf	timerRead@index
  5345                           
  5346                           ;timer.c: 141: unsigned int result = 0xFFFF;
  5347  0532  30FF               	movlw	255
  5348  0533  00CD               	movwf	timerRead@result
  5349  0534  30FF               	movlw	255
  5350  0535  00CE               	movwf	timerRead@result+1
  5351                           
  5352                           ;timer.c: 142: if ( index < numTimers )
  5353  0536  0876               	movf	_numTimers,w
  5354  0537  024F               	subwf	timerRead@index,w
  5355  0538  1803               	skipnc
  5356  0539  2D42               	goto	l2381
  5357                           
  5358                           ;timer.c: 143: {
  5359                           ;timer.c: 144: result = timers[index];
  5360  053A  354F               	lslf	timerRead@index,w
  5361  053B  3EA0               	addlw	(low (_timers| 0))& (0+255)
  5362  053C  0086               	movwf	6
  5363  053D  0187               	clrf	7
  5364  053E  3F40               	moviw [0]fsr1
  5365  053F  00CD               	movwf	timerRead@result
  5366  0540  3F41               	moviw [1]fsr1
  5367  0541  00CE               	movwf	timerRead@result+1
  5368  0542                     l2381:	
  5369                           
  5370                           ;timer.c: 145: }
  5371                           ;timer.c: 146: return ( result );
  5372  0542  084E               	movf	timerRead@result+1,w
  5373  0543  00CB               	movwf	?_timerRead+1
  5374  0544  084D               	movf	timerRead@result,w
  5375  0545  00CA               	movwf	?_timerRead
  5376  0546  0008               	return
  5377  0547                     __end_of_timerRead:	
  5378                           
  5379                           	psect	intentry
  5380  0004                     __pintentry:	
  5381 ;; *************** function _ISRCode *****************
  5382 ;; Defined at:
  5383 ;;		line 32 in file "../source/interrupt.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;		None
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMMON   BANK0   BANK1
  5397 ;;      Params:         0       0       0
  5398 ;;      Locals:         0       0       0
  5399 ;;      Temps:          1       0       0
  5400 ;;      Totals:         1       0       0
  5401 ;;Total ram usage:        1 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    2
  5404 ;; This function calls:
  5405 ;;		_IOCInterrupt
  5406 ;;		_timer2Interrupt
  5407 ;;		_timerInterrupt
  5408 ;; This function is called by:
  5409 ;;		Interrupt level 1
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413  0004                     _ISRCode:	
  5414                           
  5415                           ;incstack = 0
  5416  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5417                           
  5418                           ; Regs used in _ISRCode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5419  0005  3180               	pagesel	$
  5420  0006  0020               	movlb	0	; select bank0
  5421  0007  087F               	movf	127,w
  5422  0008  00FD               	movwf	??_ISRCode
  5423                           
  5424                           ;interrupt.c: 34: IOCInterrupt();
  5425  0009  2352               	fcall	_IOCInterrupt
  5426                           
  5427                           ;interrupt.c: 35: timerInterrupt( );
  5428  000A  21AB               	fcall	_timerInterrupt
  5429                           
  5430                           ;interrupt.c: 36: timer2Interrupt();
  5431  000B  24FF               	fcall	_timer2Interrupt
  5432  000C  087D               	movf	??_ISRCode,w
  5433  000D  0020               	movlb	0	; select bank0
  5434  000E  00FF               	movwf	127
  5435  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5436  0010  0009               	retfie
  5437  0011                     __end_of_ISRCode:	
  5438                           
  5439                           	psect	text46
  5440  01AB                     __ptext46:	
  5441 ;; *************** function _timerInterrupt *****************
  5442 ;; Defined at:
  5443 ;;		line 57 in file "../source/timer.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  i               1    5[COMMON] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1
  5457 ;;      Params:         0       0       0
  5458 ;;      Locals:         1       0       0
  5459 ;;      Temps:          5       0       0
  5460 ;;      Totals:         6       0       0
  5461 ;;Total ram usage:        6 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_ISRCode
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           
  5471                           ;psect for function _timerInterrupt
  5472  01AB                     _timerInterrupt:	
  5473                           
  5474                           ;timer.c: 59: unsigned char i;
  5475                           ;timer.c: 61: if ( PIE1bits.TMR1IE && PIR1bits.TMR1IF )
  5476                           
  5477                           ;incstack = 0
  5478                           ; Regs used in _timerInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  5479  01AB  0021               	movlb	1	; select bank1
  5480  01AC  1C11               	btfss	17,0	;volatile
  5481  01AD  0008               	return
  5482  01AE  0020               	movlb	0	; select bank0
  5483  01AF  1C11               	btfss	17,0	;volatile
  5484  01B0  0008               	return
  5485                           
  5486                           ;timer.c: 62: {
  5487                           ;timer.c: 63: T1CONbits.TMR1ON = 0;
  5488  01B1  1018               	bcf	24,0	;volatile
  5489                           
  5490                           ;timer.c: 64: if ( ( delayTimer != 0 ) )
  5491  01B2  0832               	movf	_delayTimer,w
  5492  01B3  0433               	iorwf	_delayTimer+1,w
  5493  01B4  1903               	btfsc	3,2
  5494  01B5  29BA               	goto	i1l2203
  5495                           
  5496                           ;timer.c: 65: {
  5497                           ;timer.c: 66: delayTimer--;
  5498  01B6  3001               	movlw	1
  5499  01B7  02B2               	subwf	_delayTimer,f
  5500  01B8  3000               	movlw	0
  5501  01B9  3BB3               	subwfb	_delayTimer+1,f
  5502  01BA                     i1l2203:	
  5503                           
  5504                           ;timer.c: 67: }
  5505                           ;timer.c: 69: for ( i = 0; i < numTimers; i++ )
  5506  01BA  01FC               	clrf	timerInterrupt@i
  5507  01BB                     i1l2213:	
  5508  01BB  0876               	movf	_numTimers,w
  5509  01BC  027C               	subwf	timerInterrupt@i,w
  5510  01BD  1803               	btfsc	3,0
  5511  01BE  29E2               	goto	i1l2215
  5512                           
  5513                           ;timer.c: 70: {
  5514                           ;timer.c: 71: if ( ( timers[i] != 0 ) && ( timers[i] != 0xFFFF ) )
  5515  01BF  357C               	lslf	timerInterrupt@i,w
  5516  01C0  3EA0               	addlw	(low (_timers| 0))& (0+255)
  5517  01C1  0086               	movwf	6
  5518  01C2  0187               	clrf	7
  5519  01C3  0016               	moviw fsr1++
  5520  01C4  0401               	iorwf	1,w
  5521  01C5  1903               	btfsc	3,2
  5522  01C6  29DD               	goto	i1l2211
  5523  01C7  357C               	lslf	timerInterrupt@i,w
  5524  01C8  3EA0               	addlw	(low (_timers| 0))& (0+255)
  5525  01C9  0086               	movwf	6
  5526  01CA  0187               	clrf	7
  5527  01CB  0016               	moviw fsr1++
  5528  01CC  3AFF               	xorlw	255
  5529  01CD  00F7               	movwf	??_timerInterrupt
  5530  01CE  0016               	moviw fsr1++
  5531  01CF  3AFF               	xorlw	255
  5532  01D0  04F7               	iorwf	??_timerInterrupt,f
  5533  01D1  1903               	btfsc	3,2
  5534  01D2  29DD               	goto	i1l2211
  5535                           
  5536                           ;timer.c: 72: {
  5537                           ;timer.c: 73: timers[i]--;
  5538  01D3  357C               	lslf	timerInterrupt@i,w
  5539  01D4  3EA0               	addlw	(low (_timers| 0))& (0+255)
  5540  01D5  0086               	movwf	6
  5541  01D6  0187               	clrf	7
  5542  01D7  3001               	movlw	1
  5543  01D8  0281               	subwf	1,f
  5544  01D9  3141               	addfsr 1,1
  5545  01DA  3000               	movlw	0
  5546  01DB  3B81               	subwfb	1,f
  5547  01DC  317F               	addfsr 1,-1
  5548  01DD                     i1l2211:	
  5549  01DD  3001               	movlw	1
  5550  01DE  00F7               	movwf	??_timerInterrupt
  5551  01DF  0877               	movf	??_timerInterrupt,w
  5552  01E0  07FC               	addwf	timerInterrupt@i,f
  5553  01E1  29BB               	goto	i1l2213
  5554  01E2                     i1l2215:	
  5555                           
  5556                           ;timer.c: 74: }
  5557                           ;timer.c: 75: }
  5558                           ;timer.c: 77: for ( i = 0; i < numLongTimers; i++ )
  5559  01E2  01FC               	clrf	timerInterrupt@i
  5560  01E3                     i1l2225:	
  5561  01E3  0875               	movf	_numLongTimers,w
  5562  01E4  027C               	subwf	timerInterrupt@i,w
  5563  01E5  1803               	btfsc	3,0
  5564  01E6  2A35               	goto	i1l2227
  5565                           
  5566                           ;timer.c: 78: {
  5567                           ;timer.c: 79: if ( ( longTimers[i] != 0 ) && ( longTimers[i] != 0xFFFFFFFF ) )
  5568  01E7  087C               	movf	timerInterrupt@i,w
  5569  01E8  00F7               	movwf	??_timerInterrupt
  5570  01E9  3001               	movlw	1
  5571  01EA                     u145_25:	
  5572  01EA  35F7               	lslf	??_timerInterrupt,f
  5573  01EB  3EFF               	addlw	-1
  5574  01EC  1D03               	skipz
  5575  01ED  29EA               	goto	u145_25
  5576  01EE  3577               	lslf	??_timerInterrupt,w
  5577  01EF  3E20               	addlw	(low (_longTimers| 0))& (0+255)
  5578  01F0  0086               	movwf	6
  5579  01F1  0187               	clrf	7
  5580  01F2  3F40               	moviw [0]fsr1
  5581  01F3  00F8               	movwf	??_timerInterrupt+1
  5582  01F4  3F41               	moviw [1]fsr1
  5583  01F5  00F9               	movwf	??_timerInterrupt+2
  5584  01F6  3F42               	moviw [2]fsr1
  5585  01F7  00FA               	movwf	??_timerInterrupt+3
  5586  01F8  3F43               	moviw [3]fsr1
  5587  01F9  00FB               	movwf	??_timerInterrupt+4
  5588  01FA  087B               	movf	??_timerInterrupt+4,w
  5589  01FB  047A               	iorwf	??_timerInterrupt+3,w
  5590  01FC  0479               	iorwf	??_timerInterrupt+2,w
  5591  01FD  0478               	iorwf	??_timerInterrupt+1,w
  5592  01FE  1903               	skipnz
  5593  01FF  2A30               	goto	i1l2223
  5594  0200  087C               	movf	timerInterrupt@i,w
  5595  0201  00F7               	movwf	??_timerInterrupt
  5596  0202  3001               	movlw	1
  5597  0203                     u147_25:	
  5598  0203  35F7               	lslf	??_timerInterrupt,f
  5599  0204  3EFF               	addlw	-1
  5600  0205  1D03               	skipz
  5601  0206  2A03               	goto	u147_25
  5602  0207  3577               	lslf	??_timerInterrupt,w
  5603  0208  3E20               	addlw	(low (_longTimers| 0))& (0+255)
  5604  0209  0086               	movwf	6
  5605  020A  0187               	clrf	7
  5606  020B  0016               	moviw fsr1++
  5607  020C  3AFF               	xorlw	255
  5608  020D  00F8               	movwf	??_timerInterrupt+1
  5609  020E  0016               	moviw fsr1++
  5610  020F  3AFF               	xorlw	255
  5611  0210  04F8               	iorwf	??_timerInterrupt+1,f
  5612  0211  0016               	moviw fsr1++
  5613  0212  3AFF               	xorlw	255
  5614  0213  04F8               	iorwf	??_timerInterrupt+1,f
  5615  0214  0016               	moviw fsr1++
  5616  0215  3AFF               	xorlw	255
  5617  0216  04F8               	iorwf	??_timerInterrupt+1,f
  5618  0217  1903               	btfsc	3,2
  5619  0218  2A30               	goto	i1l2223
  5620                           
  5621                           ;timer.c: 80: {
  5622                           ;timer.c: 81: longTimers[i]--;
  5623  0219  087C               	movf	timerInterrupt@i,w
  5624  021A  00F7               	movwf	??_timerInterrupt
  5625  021B  3001               	movlw	1
  5626  021C                     u149_25:	
  5627  021C  35F7               	lslf	??_timerInterrupt,f
  5628  021D  3EFF               	addlw	-1
  5629  021E  1D03               	skipz
  5630  021F  2A1C               	goto	u149_25
  5631  0220  3577               	lslf	??_timerInterrupt,w
  5632  0221  3E20               	addlw	(low (_longTimers| 0))& (0+255)
  5633  0222  0086               	movwf	6
  5634  0223  0187               	clrf	7
  5635  0224  3001               	movlw	1
  5636  0225  0281               	subwf	1,f
  5637  0226  3141               	addfsr 1,1
  5638  0227  3000               	movlw	0
  5639  0228  3B81               	subwfb	1,f
  5640  0229  3141               	addfsr 1,1
  5641  022A  3000               	movlw	0
  5642  022B  3B81               	subwfb	1,f
  5643  022C  3141               	addfsr 1,1
  5644  022D  3000               	movlw	0
  5645  022E  3B81               	subwfb	1,f
  5646  022F  317D               	addfsr 1,-3
  5647  0230                     i1l2223:	
  5648  0230  3001               	movlw	1
  5649  0231  00F7               	movwf	??_timerInterrupt
  5650  0232  0877               	movf	??_timerInterrupt,w
  5651  0233  07FC               	addwf	timerInterrupt@i,f
  5652  0234  29E3               	goto	i1l2225
  5653  0235                     i1l2227:	
  5654                           
  5655                           ;timer.c: 82: }
  5656                           ;timer.c: 83: }
  5657                           ;timer.c: 86: systick++;
  5658  0235  3001               	movlw	1
  5659  0236  07F3               	addwf	_systick,f
  5660  0237  3000               	movlw	0
  5661  0238  3DF4               	addwfc	_systick+1,f
  5662                           
  5663                           ;timer.c: 89: TMR1 = 32000;
  5664  0239  307D               	movlw	125
  5665  023A  0020               	movlb	0	; select bank0
  5666  023B  0097               	movwf	23	;volatile
  5667  023C  3000               	movlw	0
  5668  023D  0096               	movwf	22	;volatile
  5669                           
  5670                           ;timer.c: 90: T1CONbits.TMR1ON = 1;
  5671  023E  1418               	bsf	24,0	;volatile
  5672                           
  5673                           ;timer.c: 91: PIR1bits.TMR1IF = 0;
  5674  023F  1011               	bcf	17,0	;volatile
  5675  0240  0008               	return
  5676  0241                     __end_of_timerInterrupt:	
  5677                           
  5678                           	psect	text47
  5679  04FF                     __ptext47:	
  5680 ;; *************** function _timer2Interrupt *****************
  5681 ;; Defined at:
  5682 ;;		line 50 in file "../source/beeper.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;		None
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  i               1    0        unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  1    wreg      void 
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, status,0
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMMON   BANK0   BANK1
  5696 ;;      Params:         0       0       0
  5697 ;;      Locals:         0       0       0
  5698 ;;      Temps:          1       0       0
  5699 ;;      Totals:         1       0       0
  5700 ;;Total ram usage:        1 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_ISRCode
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           
  5710                           ;psect for function _timer2Interrupt
  5711  04FF                     _timer2Interrupt:	
  5712                           
  5713                           ;beeper.c: 52: unsigned char i;
  5714                           ;beeper.c: 54: if ( PIE1bits.TMR2IE && PIR1bits.TMR2IF )
  5715                           
  5716                           ;incstack = 0
  5717                           ; Regs used in _timer2Interrupt: [wreg+status,2+status,0]
  5718  04FF  0021               	movlb	1	; select bank1
  5719  0500  1C91               	btfss	17,1	;volatile
  5720  0501  0008               	return
  5721  0502  0020               	movlb	0	; select bank0
  5722  0503  1C91               	btfss	17,1	;volatile
  5723  0504  0008               	return
  5724                           
  5725                           ;beeper.c: 55: {
  5726                           ;beeper.c: 56: T2CONbits.TMR2ON = 0;
  5727  0505  111C               	bcf	28,2	;volatile
  5728                           
  5729                           ;beeper.c: 58: if (beeperOn)
  5730  0506  083E               	movf	_beeperOn,w
  5731  0507  1903               	btfsc	3,2
  5732  0508  2D15               	goto	i1l2245
  5733                           
  5734                           ;beeper.c: 59: {
  5735                           ;beeper.c: 60: LATAbits.LATA1 ^= 1;
  5736  0509  0022               	movlb	2	; select bank2
  5737  050A  0C0C               	rrf	12,w	;volatile
  5738  050B  3901               	andlw	1
  5739  050C  00F7               	movwf	??_timer2Interrupt
  5740  050D  3001               	movlw	1
  5741  050E  06F7               	xorwf	??_timer2Interrupt,f
  5742  050F  0DF7               	rlf	??_timer2Interrupt,f
  5743  0510  080C               	movf	12,w	;volatile
  5744  0511  0677               	xorwf	??_timer2Interrupt,w
  5745  0512  39FD               	andlw	-3
  5746  0513  0677               	xorwf	??_timer2Interrupt,w
  5747  0514  008C               	movwf	12	;volatile
  5748  0515                     i1l2245:	
  5749                           
  5750                           ;beeper.c: 61: }
  5751                           ;beeper.c: 62: T2CONbits.TMR2ON = 1;
  5752  0515  0020               	movlb	0	; select bank0
  5753  0516  151C               	bsf	28,2	;volatile
  5754                           
  5755                           ;beeper.c: 63: PIR1bits.TMR2IF = 0;
  5756  0517  1091               	bcf	17,1	;volatile
  5757  0518  0008               	return
  5758  0519                     __end_of_timer2Interrupt:	
  5759                           
  5760                           	psect	text48
  5761  0352                     __ptext48:	
  5762 ;; *************** function _IOCInterrupt *****************
  5763 ;; Defined at:
  5764 ;;		line 57 in file "../source/eventhandler.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1
  5778 ;;      Params:         0       0       0
  5779 ;;      Locals:         0       0       0
  5780 ;;      Temps:          3       0       0
  5781 ;;      Totals:         3       0       0
  5782 ;;Total ram usage:        3 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    1
  5785 ;; This function calls:
  5786 ;;		i1_timerLock
  5787 ;;		i1_timerSet
  5788 ;; This function is called by:
  5789 ;;		_ISRCode
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           
  5794                           ;psect for function _IOCInterrupt
  5795  0352                     _IOCInterrupt:	
  5796                           
  5797                           ;eventhandler.c: 59: if ( INTCONbits.IOCIF == 1)
  5798                           
  5799                           ;incstack = 0
  5800                           ; Regs used in _IOCInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5801  0352  1C0B               	btfss	11,0	;volatile
  5802  0353  0008               	return
  5803                           
  5804                           ;eventhandler.c: 60: {
  5805                           ;eventhandler.c: 62: if (IOCAFbits.IOCAF3 == 1)
  5806  0354  0027               	movlb	7	; select bank7
  5807  0355  1D93               	btfss	19,3	;volatile
  5808  0356  2B77               	goto	i1l2145
  5809                           
  5810                           ;eventhandler.c: 63: {
  5811                           ;eventhandler.c: 64: if (buzzerTransitionCount ++ > 100 )
  5812  0357  0020               	movlb	0	; select bank0
  5813  0358  0835               	movf	_buzzerTransitionCount+1,w
  5814  0359  00FB               	movwf	??_IOCInterrupt+1
  5815  035A  0834               	movf	_buzzerTransitionCount,w
  5816  035B  00FA               	movwf	??_IOCInterrupt
  5817  035C  0AB4               	incf	_buzzerTransitionCount,f
  5818  035D  1903               	skipnz
  5819  035E  0AB5               	incf	_buzzerTransitionCount+1,f
  5820  035F  087B               	movf	??_IOCInterrupt+1,w
  5821  0360  3A80               	xorlw	128
  5822  0361  00FC               	movwf	??_IOCInterrupt+2
  5823  0362  3080               	movlw	128
  5824  0363  027C               	subwf	??_IOCInterrupt+2,w
  5825  0364  1D03               	skipz
  5826  0365  2B68               	goto	u128_25
  5827  0366  3065               	movlw	101
  5828  0367  027A               	subwf	??_IOCInterrupt,w
  5829  0368                     u128_25:	
  5830  0368  1C03               	skipc
  5831  0369  2B72               	goto	i1l2141
  5832                           
  5833                           ;eventhandler.c: 65: {
  5834                           ;eventhandler.c: 69: timerSet( buzzerTimer, 2 );
  5835  036A  3002               	movlw	2
  5836  036B  00F7               	movwf	i1timerSet@duration
  5837  036C  3000               	movlw	0
  5838  036D  00F8               	movwf	i1timerSet@duration+1
  5839  036E  0020               	movlb	0	; select bank0
  5840  036F  0838               	movf	_buzzerTimer,w
  5841  0370  2610               	fcall	i1_timerSet
  5842                           
  5843                           ;eventhandler.c: 71: }
  5844  0371  2B75               	goto	i1l2143
  5845  0372                     i1l2141:	
  5846                           
  5847                           ;eventhandler.c: 72: else
  5848                           ;eventhandler.c: 73: timerLock(buzzerTimer);
  5849  0372  0020               	movlb	0	; select bank0
  5850  0373  0838               	movf	_buzzerTimer,w
  5851  0374  261E               	fcall	i1_timerLock
  5852  0375                     i1l2143:	
  5853                           
  5854                           ;eventhandler.c: 75: IOCAFbits.IOCAF3 = 0;
  5855  0375  0027               	movlb	7	; select bank7
  5856  0376  1193               	bcf	19,3	;volatile
  5857  0377                     i1l2145:	
  5858                           
  5859                           ;eventhandler.c: 76: }
  5860                           ;eventhandler.c: 77: if (IOCAFbits.IOCAF2 == 1)
  5861  0377  1D13               	btfss	19,2	;volatile
  5862  0378  2B8B               	goto	i1l2157
  5863                           
  5864                           ;eventhandler.c: 78: {
  5865                           ;eventhandler.c: 79: if (PORTAbits.RA2 == 0)
  5866  0379  0020               	movlb	0	; select bank0
  5867  037A  190C               	btfsc	12,2	;volatile
  5868  037B  2B83               	goto	i1l119
  5869                           
  5870                           ;eventhandler.c: 80: {
  5871                           ;eventhandler.c: 81: greenWentHigh.eventFlag = !0;
  5872  037C  01F0               	clrf	_greenWentHigh
  5873  037D  0AF0               	incf	_greenWentHigh,f
  5874                           
  5875                           ;eventhandler.c: 82: greenWentHigh.eventTime = systick;
  5876  037E  0874               	movf	_systick+1,w
  5877  037F  00F2               	movwf	_greenWentHigh+2
  5878  0380  0873               	movf	_systick,w
  5879  0381  00F1               	movwf	_greenWentHigh+1
  5880                           
  5881                           ;eventhandler.c: 83: }
  5882  0382  2B89               	goto	i1l2155
  5883  0383                     i1l119:	
  5884                           
  5885                           ;eventhandler.c: 84: else
  5886                           ;eventhandler.c: 85: {
  5887                           ;eventhandler.c: 86: greenWentLow.eventFlag = !0;
  5888  0383  01AD               	clrf	_greenWentLow
  5889  0384  0AAD               	incf	_greenWentLow,f
  5890                           
  5891                           ;eventhandler.c: 87: greenWentLow.eventTime = systick;
  5892  0385  0874               	movf	_systick+1,w
  5893  0386  00AF               	movwf	_greenWentLow+2
  5894  0387  0873               	movf	_systick,w
  5895  0388  00AE               	movwf	_greenWentLow+1
  5896  0389                     i1l2155:	
  5897                           
  5898                           ;eventhandler.c: 88: }
  5899                           ;eventhandler.c: 89: IOCAFbits.IOCAF2 = 0;
  5900  0389  0027               	movlb	7	; select bank7
  5901  038A  1113               	bcf	19,2	;volatile
  5902  038B                     i1l2157:	
  5903                           
  5904                           ;eventhandler.c: 90: }
  5905                           ;eventhandler.c: 91: if (IOCAFbits.IOCAF4 == 1)
  5906  038B  1E13               	btfss	19,4	;volatile
  5907  038C  0008               	return
  5908                           
  5909                           ;eventhandler.c: 92: {
  5910                           ;eventhandler.c: 93: if (PORTAbits.RA4 == 0)
  5911  038D  0020               	movlb	0	; select bank0
  5912  038E  1A0C               	btfsc	12,4	;volatile
  5913  038F  2B97               	goto	i1l122
  5914                           
  5915                           ;eventhandler.c: 94: {
  5916                           ;eventhandler.c: 95: redWentHigh.eventFlag = !0;
  5917  0390  01AA               	clrf	_redWentHigh
  5918  0391  0AAA               	incf	_redWentHigh,f
  5919                           
  5920                           ;eventhandler.c: 96: redWentHigh.eventTime = systick;
  5921  0392  0874               	movf	_systick+1,w
  5922  0393  00AC               	movwf	_redWentHigh+2
  5923  0394  0873               	movf	_systick,w
  5924  0395  00AB               	movwf	_redWentHigh+1
  5925                           
  5926                           ;eventhandler.c: 97: }
  5927  0396  2B9D               	goto	i1l2167
  5928  0397                     i1l122:	
  5929                           
  5930                           ;eventhandler.c: 98: else
  5931                           ;eventhandler.c: 99: {
  5932                           ;eventhandler.c: 100: redWentLow.eventFlag = !0;
  5933  0397  01A7               	clrf	_redWentLow
  5934  0398  0AA7               	incf	_redWentLow,f
  5935                           
  5936                           ;eventhandler.c: 101: redWentLow.eventTime = systick;
  5937  0399  0874               	movf	_systick+1,w
  5938  039A  00A9               	movwf	_redWentLow+2
  5939  039B  0873               	movf	_systick,w
  5940  039C  00A8               	movwf	_redWentLow+1
  5941  039D                     i1l2167:	
  5942                           
  5943                           ;eventhandler.c: 102: }
  5944                           ;eventhandler.c: 103: IOCAFbits.IOCAF4 = 0;
  5945  039D  0027               	movlb	7	; select bank7
  5946  039E  1213               	bcf	19,4	;volatile
  5947  039F  0008               	return
  5948  03A0                     __end_of_IOCInterrupt:	
  5949                           
  5950                           	psect	text49
  5951  0610                     __ptext49:	
  5952 ;; *************** function i1_timerSet *****************
  5953 ;; Defined at:
  5954 ;;		line 123 in file "../source/timer.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  index           1    wreg     unsigned char 
  5957 ;;  duration        2    0[COMMON] unsigned int 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  index           1    2[COMMON] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMMON   BANK0   BANK1
  5969 ;;      Params:         2       0       0
  5970 ;;      Locals:         1       0       0
  5971 ;;      Temps:          0       0       0
  5972 ;;      Totals:         3       0       0
  5973 ;;Total ram usage:        3 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_IOCInterrupt
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function i1_timerSet
  5984  0610                     i1_timerSet:	
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in i1_timerSet: [wreg+fsr1l+fsr1h+status,2+status,0]
  5988                           ;i1timerSet@index stored from wreg
  5989  0610  00F9               	movwf	i1timerSet@index
  5990                           
  5991                           ;timer.c: 125: if ( index < numTimers )
  5992  0611  0876               	movf	_numTimers,w
  5993  0612  0279               	subwf	i1timerSet@index,w
  5994  0613  1803               	skipnc
  5995  0614  0008               	return
  5996                           
  5997                           ;timer.c: 126: {
  5998                           ;timer.c: 127: timers[index] = duration;
  5999  0615  3579               	lslf	i1timerSet@index,w
  6000  0616  3EA0               	addlw	(low (_timers| 0))& (0+255)
  6001  0617  0086               	movwf	6
  6002  0618  0187               	clrf	7
  6003  0619  0877               	movf	i1timerSet@duration,w
  6004  061A  3FC0               	movwi [0]fsr1
  6005  061B  0878               	movf	i1timerSet@duration+1,w
  6006  061C  3FC1               	movwi [1]fsr1
  6007  061D  0008               	return
  6008  061E                     __end_ofi1_timerSet:	
  6009                           
  6010                           	psect	text50
  6011  061E                     __ptext50:	
  6012 ;; *************** function i1_timerLock *****************
  6013 ;; Defined at:
  6014 ;;		line 157 in file "../source/timer.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  index           1    wreg     unsigned char 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  index           1    0[COMMON] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      void 
  6021 ;; Registers used:
  6022 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1
  6028 ;;      Params:         0       0       0
  6029 ;;      Locals:         1       0       0
  6030 ;;      Temps:          0       0       0
  6031 ;;      Totals:         1       0       0
  6032 ;;Total ram usage:        1 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_IOCInterrupt
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           
  6042                           ;psect for function i1_timerLock
  6043  061E                     i1_timerLock:	
  6044                           
  6045                           ;incstack = 0
  6046                           ; Regs used in i1_timerLock: [wreg+fsr1l+fsr1h+status,2+status,0]
  6047                           ;i1timerLock@index stored from wreg
  6048  061E  00F7               	movwf	i1timerLock@index
  6049                           
  6050                           ;timer.c: 159: if ( index < numTimers )
  6051  061F  0876               	movf	_numTimers,w
  6052  0620  0277               	subwf	i1timerLock@index,w
  6053  0621  1803               	skipnc
  6054  0622  0008               	return
  6055                           
  6056                           ;timer.c: 160: {
  6057                           ;timer.c: 161: timers[index] = 0xFFFF;
  6058  0623  3577               	lslf	i1timerLock@index,w
  6059  0624  3EA0               	addlw	(low (_timers| 0))& (0+255)
  6060  0625  0086               	movwf	6
  6061  0626  0187               	clrf	7
  6062  0627  30FF               	movlw	255
  6063  0628  3FC0               	movwi [0]fsr1
  6064  0629  30FF               	movlw	255
  6065  062A  3FC1               	movwi [1]fsr1
  6066  062B  0008               	return
  6067  062C                     __end_ofi1_timerLock:	
  6068  007E                     btemp	set	126	;btemp
  6069  007E                     int$flags	set	126
  6070  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    200
    Data        4
    BSS         69
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     22      69
    BANK1            32      0      20

Pointer List with Targets:

    runStateTable	const PTR FTN()void [7][4] size(2) Largest target is 1
		 -> run_GreenSteadyLow(), run_GreenFlashing(), run_BeepReceived(), run_Initialised(), 
		 -> run_NoAction(), init_Restart(), 

    initStateTable	const PTR FTN()void [8][9] size(2) Largest target is 1
		 -> initS8_bothLow(), initS7_bothHigh(), initS6_redLow(), initS5_redHigh(), 
		 -> initS4_greenLow(), initS3_greenHigh(), init_Restart(), initS2_Timeout(), 
		 -> initS1_Timeout(), init_NoAction(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _ISRCode->_IOCInterrupt
    _ISRCode->_timerInterrupt
    _IOCInterrupt->i1_timerSet

Critical Paths under _main in BANK0

    _main->_eventHandlerService
    _initialise->_eventHandlerInit
    _eventHandlerInit->_longTimerGet
    _longTimerGet->_longTimerLock
    _beeperInit->_timerGet
    _beeperInit->_timerSet
    _LEDInit->_timerGet
    _LEDInit->_timerSet
    _timerGet->_timerLock
    _eventHandlerService->_getRunEvent
    _run_Initialised->_timerLock
    _run_GreenSteadyLow->_longTimerSet
    _run_GreenFlashing->_timerSet
    _run_BeepReceived->_beepRepeatedly
    _init_Restart->_timerSet
    _initS8_bothLow->_timerSet
    _initS7_bothHigh->_timerSet
    _initS6_redLow->_timerSet
    _initS5_redHigh->_timerSet
    _initS4_greenLow->_timerSet
    _initS3_greenHigh->_timerSet
    _initS2_Timeout->_timerSet
    _initS1_Timeout->_timerSet
    _getRunEvent->_longTimerRead
    _multipleErrorEvent->_beepRepeatedly
    _getInitEvent->_timerRead
    _beeperService->_timerRead
    _LEDService->_timerRead

Critical Paths under _ISRCode in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRCode in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27271
                         _LEDService
                      _beeperService
                _eventHandlerService
                         _initialise
                       _kickWatchDog
 ---------------------------------------------------------------------------------
 (1) _kickWatchDog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0    6091
                            _LEDInit
                     _beepRepeatedly
                         _beeperInit
                           _clearLED
                   _eventHandlerInit
                       _hardwareInit
                      _initInterrupt
                          _timerInit
 ---------------------------------------------------------------------------------
 (2) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _hardwareInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eventHandlerInit                                     2     2      0    2768
                                              4 BANK0      2     2      0
                   _initIOCInterrupt
                       _init_Restart
                       _longTimerGet
                           _timerGet
                           _timerSet
 ---------------------------------------------------------------------------------
 (3) _longTimerGet                                         2     2      0      89
                                              2 BANK0      2     2      0
                      _longTimerLock
 ---------------------------------------------------------------------------------
 (3) _initIOCInterrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _beeperInit                                           1     1      0    1355
                                              3 BANK0      1     1      0
                         _timer2Init
                           _timerGet
                           _timerSet
 ---------------------------------------------------------------------------------
 (3) _timer2Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LEDInit                                              1     1      0    1355
                                              3 BANK0      1     1      0
                           _timerGet
                           _timerSet
 ---------------------------------------------------------------------------------
 (3) _timerGet                                             2     2      0     127
                                              1 BANK0      2     2      0
                          _timerLock
 ---------------------------------------------------------------------------------
 (1) _eventHandlerService                                  8     8      0   18526
                                             14 BANK0      8     8      0
                             ___wmul
                       _getInitEvent
                        _getRunEvent
                     _initS1_Timeout *
                     _initS2_Timeout *
                   _initS3_greenHigh *
                    _initS4_greenLow *
                     _initS5_redHigh *
                      _initS6_redLow *
                    _initS7_bothHigh *
                     _initS8_bothLow *
                      _init_NoAction *
                       _init_Restart *
                   _run_BeepReceived *
                  _run_GreenFlashing *
                 _run_GreenSteadyLow *
                    _run_Initialised *
                       _run_NoAction *
                          _timerRead
                           _timerSet
 ---------------------------------------------------------------------------------
 (2) _run_NoAction                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _run_Initialised                                      0     0      0     234
                           _clearLED
                       _longTimerSet
                          _timerLock
 ---------------------------------------------------------------------------------
 (2) _run_GreenSteadyLow                                   0     0      0     847
                     _beepRepeatedly
                           _clearLED
                       _longTimerSet
                          _timerLock
 ---------------------------------------------------------------------------------
 (3) _longTimerSet                                         6     2      4     172
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _clearLED                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _run_GreenFlashing                                    0     0      0    1228
                             _setLED
                           _timerSet
 ---------------------------------------------------------------------------------
 (3) _setLED                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _run_BeepReceived                                     1     1      0    1885
                                              4 BANK0      1     1      0
                     _beepRepeatedly
                      _longTimerLock
                           _timerSet
 ---------------------------------------------------------------------------------
 (3) _init_Restart                                         0     0      0    1324
                           _flashLED
                           _timerSet
 ---------------------------------------------------------------------------------
 (4) _flashLED                                             2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _init_NoAction                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initS8_bothLow                                       1     1      0    1290
                                              3 BANK0      1     1      0
                          _timerLock
                           _timerSet
 ---------------------------------------------------------------------------------
 (2) _initS7_bothHigh                                      1     1      0    1228
                                              3 BANK0      1     1      0
                           _timerSet
 ---------------------------------------------------------------------------------
 (2) _initS6_redLow                                        1     1      0    1228
                                              3 BANK0      1     1      0
                           _timerSet
 ---------------------------------------------------------------------------------
 (2) _initS5_redHigh                                       1     1      0    1228
                                              3 BANK0      1     1      0
                           _timerSet
 ---------------------------------------------------------------------------------
 (2) _initS4_greenLow                                      1     1      0    1228
                                              3 BANK0      1     1      0
                           _timerSet
 ---------------------------------------------------------------------------------
 (2) _initS3_greenHigh                                     1     1      0    1228
                                              3 BANK0      1     1      0
                           _timerSet
 ---------------------------------------------------------------------------------
 (2) _initS2_Timeout                                       1     1      0    1228
                                              3 BANK0      1     1      0
                           _timerSet
 ---------------------------------------------------------------------------------
 (2) _initS1_Timeout                                       1     1      0    1228
                                              3 BANK0      1     1      0
                           _timerSet
 ---------------------------------------------------------------------------------
 (2) _getRunEvent                                          4     4      0     948
                                             10 BANK0      4     4      0
                      _longTimerLock
                      _longTimerRead
                 _multipleErrorEvent
                          _timerLock
                          _timerRead
 ---------------------------------------------------------------------------------
 (3) _multipleErrorEvent                                   1     1      0     675
                                              4 BANK0      1     1      0
                     _beepRepeatedly
                          _timerLock
 ---------------------------------------------------------------------------------
 (2) _beepRepeatedly                                       4     0      4     613
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _longTimerRead                                       10     6      4      68
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) _longTimerLock                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _getInitEvent                                         4     4      0     161
                                              6 BANK0      4     4      0
                          _timerLock
                          _timerRead
 ---------------------------------------------------------------------------------
 (4) _timerLock                                            1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     686
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _beeperService                                        0     0      0    1327
                          _timerRead
                           _timerSet
 ---------------------------------------------------------------------------------
 (1) _LEDService                                           0     0      0    1327
                          _timerRead
                           _timerSet
 ---------------------------------------------------------------------------------
 (3) _timerSet                                             3     1      2    1228
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _timerRead                                            6     3      3      99
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISRCode                                              1     1      0     316
                                              6 COMMON     1     1      0
                       _IOCInterrupt
                    _timer2Interrupt
                     _timerInterrupt
 ---------------------------------------------------------------------------------
 (6) _timerInterrupt                                       6     6      0     180
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (6) _timer2Interrupt                                      2     2      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _IOCInterrupt                                         3     3      0     136
                                              3 COMMON     3     3      0
                        i1_timerLock
                         i1_timerSet
 ---------------------------------------------------------------------------------
 (7) i1_timerSet                                           3     1      2      92
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (7) i1_timerLock                                          1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDService
     _timerRead
     _timerSet
   _beeperService
     _timerRead
     _timerSet
   _eventHandlerService
     ___wmul
     _getInitEvent
       _timerLock
       _timerRead
     _getRunEvent
       _longTimerLock
       _longTimerRead
       _multipleErrorEvent
         _beepRepeatedly
         _timerLock
       _timerLock
       _timerRead
     _initS1_Timeout *
       _timerSet
     _initS2_Timeout *
       _timerSet
     _initS3_greenHigh *
       _timerSet
     _initS4_greenLow *
       _timerSet
     _initS5_redHigh *
       _timerSet
     _initS6_redLow *
       _timerSet
     _initS7_bothHigh *
       _timerSet
     _initS8_bothLow *
       _timerLock
       _timerSet
     _init_NoAction *
     _init_Restart *
       _flashLED
       _timerSet
     _run_BeepReceived *
       _beepRepeatedly
       _longTimerLock
       _timerSet
     _run_GreenFlashing *
       _setLED
       _timerSet
     _run_GreenSteadyLow *
       _beepRepeatedly
       _clearLED
       _longTimerSet
       _timerLock
     _run_Initialised *
       _clearLED
       _longTimerSet
       _timerLock
     _run_NoAction *
     _timerRead *
     _timerSet *
   _initialise
     _LEDInit
       _timerGet
         _timerLock
       _timerSet
     _beepRepeatedly
     _beeperInit
       _timer2Init
       _timerGet
         _timerLock
       _timerSet
     _clearLED
     _eventHandlerInit
       _initIOCInterrupt
       _init_Restart
         _flashLED
         _timerSet
       _longTimerGet
         _longTimerLock
       _timerGet
         _timerLock
       _timerSet
     _hardwareInit
     _initInterrupt
     _timerInit
   _kickWatchDog

 _ISRCode (ROOT)
   _IOCInterrupt
     i1_timerLock
     i1_timerSet
   _timer2Interrupt
   _timerInterrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      67       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     16      45       6       86.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      14       8       62.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      67       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Mar 22 09:02:14 2017

        ??_run_GreenSteadyLow 0050           __end_ofi1_timerLock 062C                   __CFG_CP$OFF 0000  
         ___wmul@multiplicand 004C                   ?_LEDService 0077                           l134 034A  
                         l331 048D                           l561 03DF                           l649 0469  
                         _PR2 001B                  __CFG_CPD$OFF 0000                           u925 040A  
                         u855 04EE                           u895 04BA               _timer2Interrupt 04FF  
                __CFG_BORV$LO 0000              _initS3_greenHigh 0660                           wreg 0009  
               _runStateTable 00C0       __size_of_initS1_Timeout 000F       __size_of_initS2_Timeout 000D  
     __end_of_run_Initialised 0585        __size_of_initS6_redLow 000D                  __CFG_LVP$OFF 0000  
             __end_of_LEDInit 0686                          l2511 02CF                          l2407 04E3  
                        l2339 0525                          l2603 0184                          l2531 00FF  
                        l2381 0542                          l2517 02D2                          l2445 024D  
                        l2613 019F                          l2541 010A                          l2463 026F  
                        l1815 041A                          l2623 01A9                          l2481 0290  
                        l2457 026C                          l2553 0118                          l2803 0490  
                        l2475 028D                          l2563 0126                          l2493 02AE  
                        l2831 03E3                          l2499 02B1                          l2579 014B  
                        l2595 016B                          l2843 06AC                          l2757 0463  
                        l2589 0167                          l2839 03F2                          l2791 0349  
                        l2783 0314                ??_hardwareInit 004A                  __CFG_WDTE$ON 0000  
                        u1965 046A                          u1975 046F                          _TMR1 0016  
             __end_of_ISRCode 0011                  __CFG_WRT$OFF 0000      __end_of_initIOCInterrupt 0691  
                        _main 06AB                 ?_kickWatchDog 0077                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000                          start 0011                 __CFG_IESO$OFF 0000  
                  i1_timerSet 0610   __end_of_eventHandlerService 0352              ??_timerInterrupt 0077  
     __size_of_initS5_redHigh 000D       __size_of_initS8_bothLow 0015                 __CFG_PLLEN$ON 0000  
           ?_eventHandlerInit 0077                         ?_main 0077                         i1l122 0397  
                       i1l119 0383            ??_eventHandlerInit 004E                __CFG_FCMEN$OFF 0000  
            ??_beepRepeatedly 004E               i1timerSet@index 0079                         pclath 000A  
              ??_kickWatchDog 004A                 ?_IOCInterrupt 0077                         status 0003  
                       wtemp0 007E                   i1_timerLock 061E           __size_of_LEDService 001B  
    __size_of_initS4_greenLow 000D                 _greenWentHigh 0070                __CFG_MCLRE$OFF 0000  
      __size_of_init_NoAction 0001               __initialization 0012                 _initS6_redLow 0639  
      __size_of_initInterrupt 0003          __end_of_getInitEvent 02D4                  __end_of_main 06B1  
     __end_of_timer2Interrupt 0519      __size_of_initS7_bothHigh 000D     __size_of_run_BeepReceived 001A  
                      ??_main 0060                     ??_LEDInit 004D                 ?_init_Restart 0077  
           _eventHandlerTimer 0064                     ??_ISRCode 007D              ?_run_Initialised 0077  
                      i1l2211 01DD                        i1l2203 01BA                        i1l2141 0372  
                      i1l2213 01BB                        i1l2143 0375                        i1l2223 0230  
                      i1l2215 01E2                        i1l2145 0377                        i1l2225 01E3  
                      i1l2155 0389                        i1l2227 0235                        i1l2157 038B  
                      i1l2245 0515                        i1l2167 039D                        u128_25 0368  
              ??_IOCInterrupt 007A                        u145_25 01EA                        u147_25 0203  
                      u149_25 021C          __size_of_getRunEvent 00B3              i1timerLock@index 0077  
            __end_of_clearLED 06B9                __CFG_PWRTE$OFF 0000                   ?i1_timerSet 0077  
            __end_of_flashLED 069C                ?_initS6_redLow 0077                        _nBeeps 0030  
                      ___wmul 0460                        _setLED 06B9          __end_of_hardwareInit 0443  
                      _timers 00A0                ??_init_Restart 004D                  _beeperToggle 0040  
          _multipleErrorEvent 04CB                _initS1_Timeout 05C7              __end_of_timerGet 0610  
            __end_of_timerSet 05F4                _initS2_Timeout 066D                 _init_NoAction 06C2  
               _initInterrupt 06BD           ?_multipleErrorEvent 0077       __end_of__initialization 002D  
    __end_of_initS3_greenHigh 066D                 ?_longTimerGet 0077                 ?_longTimerSet 004A  
              _initS5_redHigh 0646                __pcstackCOMMON 0077                  __pidataBANK0 06B1  
        ??_multipleErrorEvent 004E                _initS8_bothLow 055D              ?_timer2Interrupt 0077  
           ??_initS4_greenLow 004D        __end_of_initS1_Timeout 05D6                  ??_LEDService 0050  
        __end_of_kickWatchDog 06C2        __end_of_initS2_Timeout 067A                ?_init_NoAction 0077  
           ??_initS7_bothHigh 004D                ?_initInterrupt 0077           __size_ofi1_timerSet 000E  
                  _beeperInit 05A9                    __pbssBANK0 0020                    __pbssBANK1 00A0  
           ?_initIOCInterrupt 0077         __size_of_getInitEvent 0093               ??_initS6_redLow 004D  
      __end_of_initS5_redHigh 0653                    _delayTimer 0032            ??_initIOCInterrupt 004A  
          __end_of_LEDService 0497                ??_longTimerGet 004C                ??_longTimerSet 004E  
                  __pmaintext 06AB        __end_of_initS8_bothLow 0572                       ?___wmul 004A  
 __size_of_run_GreenSteadyLow 001D                    __pintentry 0004                       ?_setLED 0077  
      __size_of_beeperService 002B              _run_BeepReceived 0497          __end_of_IOCInterrupt 03A0  
             ?_initS1_Timeout 0077               ?_initS2_Timeout 0077            __size_of_timerInit 0012  
          __size_of_timerRead 0017            __size_of_timerLock 000F                       _LEDInit 067A  
                   ?_clearLED 0077                       _ISRCode 0004             longTimerSet@index 004F  
                   ?_flashLED 004A        __size_of_longTimerRead 002A        __size_of_longTimerLock 001A  
                _getInitEvent 0241     __size_of_eventHandlerInit 002E                  ?i1_timerLock 0077  
             ?_initS5_redHigh 0077          __end_of_init_Restart 055D         __size_of_hardwareInit 0020  
             ?_initS8_bothLow 0077                     ?_timerGet 0077                     ?_timerSet 004A  
             __size_of___wmul 001C                    _errorCount 0045               __CFG_STVREN$OFF 0000  
                  _redWentLow 0027               __size_of_setLED 0004                    _initialise 0585  
         longTimerRead@result 004F  __size_of_eventHandlerService 007E                       __ptext1 06C0  
                     __ptext2 0585                       __ptext3 0597                       __ptext4 06BD  
                     __ptext5 0423                       __ptext6 03A0                       __ptext7 05F4  
                     __ptext8 0686                       __ptext9 05A9               ??_init_NoAction 004A  
                   _T1CONbits 0018               ??_initInterrupt 004A                     _T2CONbits 001C  
                  ??_clearLED 004A                     _IOCAFbits 0393                     _IOCANbits 0392  
                   _IOCAPbits 0391                    _longTimers 0020                    ??_flashLED 004C  
                 ?_beeperInit 0077                       clrloop0 06A6          end_of_initialization 002D  
           _run_GreenFlashing 069C                       _systick 0073                 _beeperService 03CE  
                _hardwareInit 0423            ?_run_GreenFlashing 0077               _repeatedBeeping 003F  
           __end_of_timerInit 05A9             __end_of_timerRead 0547             __end_of_timerLock 05E5  
                ??i1_timerSet 0079                    _timer2Init 05B8                    ??_timerGet 004B  
               _longTimerRead 03F9           ??_run_GreenFlashing 004D                 _longTimerLock 04E5  
                  ??_timerSet 004C         __size_of_kickWatchDog 0002                  __pstringtext 0030  
                  _runSMTimer 003A                     _PORTAbits 000C       __size_of_timerInterrupt 0096  
            __CFG_FOSC$INTOSC 0000                     _TRISAbits 008C          __end_of_longTimerGet 0602  
        __end_of_longTimerSet 04CB            __end_ofi1_timerSet 061E     __end_of_run_GreenFlashing 06A5  
               ??_getRunEvent 0054                 ?_run_NoAction 0077                ?_beeperService 0077  
                _kickWatchDog 06C0               _initS4_greenLow 0653      __size_of_run_Initialised 0013  
     __size_of_beepRepeatedly 0017                ?_longTimerRead 004A                ?_longTimerLock 0077  
           ?_initS3_greenHigh 0077         __size_of_IOCInterrupt 004E                _initStateTable 0030  
             _initS7_bothHigh 062C            ??_initS3_greenHigh 004D           __size_of_beeperInit 000F  
              __end_of___wmul 047C                   ?_initialise 0077                __end_of_setLED 06BD  
       __end_of_runStateTable 00F8           start_initialization 0012                  _greenWentLow 002D  
              ??_run_NoAction 004A         __size_of_init_Restart 0016              _eventHandlerInit 03A0  
    __end_of_run_BeepReceived 04B1                  _IOCInterrupt 0352           __end_of_getRunEvent 01AB  
      __end_of_initStateTable 00C0          __size_ofi1_timerLock 000E                   ?_timer2Init 0077  
            ??_initS1_Timeout 004D                      ??___wmul 004E              ??_initS2_Timeout 004D  
 __size_of_multipleErrorEvent 001A                   __pdataBANK0 0060                   _beeperTimer 0041  
                    ??_setLED 004A     __size_of_initIOCInterrupt 000B         _buzzerTransitionCount 0034  
                    ?_LEDInit 0077                   __pbssCOMMON 0070                  _init_Restart 0547  
                   ___latbits 0000                 __pcstackBANK0 004A      __size_of_timer2Interrupt 001A  
                    ?_ISRCode 0077               ??_beeperService 0050    __size_of_run_GreenFlashing 0009  
           __size_of_clearLED 0004       __end_of_initS4_greenLow 0660            longTimerGet@result 004D  
            ??_initS5_redHigh 004D             __size_of_flashLED 000B           _eventHandlerService 02D4  
            ??_initS8_bothLow 004D           __size_of_initialise 0012       __end_of_initS7_bothHigh 0639  
                   __pnvBANK0 0064               ??_longTimerRead 004E               ??_longTimerLock 004A  
  __end_of_run_GreenSteadyLow 0460         __end_of_initS6_redLow 0646                 _numLongTimers 0075  
           ??_run_Initialised 004B             __size_of_timerGet 000E                     _flashRate 0062  
           __size_of_timerSet 000F          ?_eventHandlerService 0077         __size_of_longTimerGet 000E  
       __size_of_longTimerSet 001A              timerSet@duration 004A                _timerInterrupt 01AB  
                   _initEvent 0048                  ??_beeperInit 004D                     _initState 0049  
          longTimerRead@index 0053           __size_of_timer2Init 000F                   _getRunEvent 00F8  
          longTimerLock@index 004B                ___wmul@product 004E                      _LATAbits 010C  
                    _LEDTimer 0044                     clear_ram0 06A5                      _PIE1bits 0091  
              _beepRepeatedly 0519                      _PIR1bits 0011                     _numTimers 0076  
                _longTimerGet 05F4                flashLED@period 004A                  _longTimerSet 04B1  
                   _timerInit 0597                     _timerRead 0530                     _timerLock 05D6  
        __end_of_run_NoAction 06C4            __end_of_beeperInit 05B8         ??_eventHandlerService 0058  
      __end_of_timerInterrupt 0241             ___wmul@multiplier 004A         __end_of_init_NoAction 06C3  
            __size_of_LEDInit 000C         __end_of_initInterrupt 06C0              __size_of_ISRCode 000D  
            ?_initS4_greenLow 0077               timerRead@result 004D             ??_timer2Interrupt 0077  
      __end_of_beepRepeatedly 0530              ?_initS7_bothHigh 0077                   _initSMTimer 003C  
                  ?_timerInit 0077                    ?_timerRead 004A                    ?_timerLock 0077  
    __end_of_eventHandlerInit 03CE                  ??_initialise 0050              _initIOCInterrupt 0686  
             ?_timerInterrupt 0077                    _ANSELAbits 018C                      _beepRate 0060  
              timerGet@result 004C                      _beeperOn 003E                   _redWentHigh 002A  
                    _clearLED 06B5     __size_of_initS3_greenHigh 000D                      __ptext10 05B8  
                    __ptext11 067A                      __ptext20 066D                      __ptext12 0602  
                    __ptext21 05C7                      __ptext13 02D4                    _T1GCONbits 0019  
                    __ptext30 06B5                      __ptext22 06C2                      __ptext14 055D  
                    __ptext31 06B9                      __ptext23 0443                      __ptext15 062C  
                    __ptext40 0460                      __ptext32 0691                      __ptext24 069C  
                    __ptext16 0639                      __ptext41 03CE                      __ptext33 00F8  
                    __ptext25 0497                      __ptext17 0646                      __ptext50 061E  
                    __ptext42 047C                      __ptext34 04CB                      __ptext26 0572  
                    __ptext18 0653                      __ptext43 05E5                      __ptext35 0519  
                    __ptext27 0547                      __ptext19 0660                      __ptext44 0530  
                    __ptext36 03F9                      __ptext28 06C3                      __ptext37 04E5  
                    __ptext29 04B1                      __ptext46 01AB                      __ptext38 0241  
                    __ptext47 04FF                      __ptext39 05D6                      __ptext48 0352  
                    __ptext49 0610                      _flashLED 0691                      _flashing 0042  
             timerInterrupt@i 007C             ?_run_BeepReceived 0077                 __size_of_main 0006  
             ?_beepRepeatedly 004A                   _buzzerTimer 0038            __end_of_initialise 0597  
          ??_run_BeepReceived 004E                  ??_timer2Init 004A                      _timerGet 0602  
                    _timerSet 05E5            i1timerSet@duration 0077                      _runEvent 0046  
                    int$flags 007E                      _runState 0047                    _LEDService 047C  
              timerRead@index 004F                   _minuteTimer 0036                timerLock@index 004A  
                  _INTCONbits 000B                 ?_getInitEvent 0077            __end_of_timer2Init 05C7  
                    intlevel1 0000                 _flasherToggle 0043               _run_Initialised 0572  
               ??i1_timerLock 0077             __CFG_CLKOUTEN$OFF 0000         __size_of_run_NoAction 0001  
                  _OSCCONbits 0099          beepRepeatedly@period 004A    __end_of_multipleErrorEvent 04E5  
                 ??_timerInit 004A                   ??_timerRead 004D                   ??_timerLock 004A  
        longTimerSet@duration 004A            _run_GreenSteadyLow 0443                 timerSet@index 004C  
              ??_getInitEvent 0050                    _WDTCONbits 0097           ?_run_GreenSteadyLow 0077  
                ?_getRunEvent 0077         __end_of_beeperService 03F9                  _run_NoAction 06C3  
               ?_hardwareInit 0077            _chargerInitialised 0024               beepRepeatedly@n 004C  
       __end_of_longTimerRead 0423         __end_of_longTimerLock 04FF  
